{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/pool.js","webpack:///./src/util/tool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/local-storage.js","webpack:///./src/bom/session-storage.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","size","this","$_size","$_cache","length","push","pop","cache","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","forEach","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","indexOf","origin","decodeContent","content","isTagNameSupport","tagName","escapeForHtmlGeneration","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","instance","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$$trigger","node","isRemove","id","$_pageId","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","trim","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","JSON","oldValue","getAttribute","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","stack","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","args","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","path","timeStamp","touches","changedTouches","bubbles","$$extra","currentTarget","$$canBubble","behavior","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","$$immediateStop","_namespace","namespaceHandlers","last","now","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","eventPhase","$_detail","detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","slice","host","hostStart","hostEnd","isEnd","char","charCodeAt","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_MAP","WX_CUSTOM_COMPONENT_MAP","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","cookie","getStorageSync","$$cookieInstance","deserialize","URL","wxComponent","$_visibilityState","documentElement","originTagName","wxComponentName","constructorClass","notNeedPrefix","hasPrefix","checkIsWxComponent","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","defaultView","location","setCookie","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","LocalStorage","SessionStorage","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","performance","screen","history","localStorage","sessionStorage","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","data","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","PSEUDO_CHECK","checked","selected","disabled","enabled","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","checkHit","foundCurrent","tag","pseudo","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrName","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","match","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","findIndex","option","HTMLOptionElement","label","onDealWithNotSupportDom","isNaN","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","$_keys","$_window","getStorageInfoSync","$$keys","newValue","storageArea","num","setStorageSync","$_updateInfo","$_triggerStorage","removeStorageSync","clearStorageSync","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","XMLHttpRequest","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","find","$_callRequest"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrD,MAAMC,EAAU,GAChB,IAAIC,EAAc,GAClB,MAAMC,EAAc,GAyFpBnC,EAAOD,QAAU,CACbqC,KArFJ,SAAcC,EAAQC,GAClBL,EAAQI,GAAU,CACdE,OAAQD,EAAQC,OAChBC,SAAUF,EAAQE,SAClBC,UAAWH,EAAQG,YAkFvBC,QA3EJ,SAAiBL,UACNJ,EAAQI,IA2EfM,YArEJ,SAAqBN,GACjB,OAAOJ,EAAQI,IAAWJ,EAAQI,GAAQG,UAqE1CI,UA/DJ,SAAmBP,GACf,OAAOJ,EAAQI,IAAWJ,EAAQI,GAAQE,QA+D1CM,cAzDJ,WACI,OAAOlC,OAAOmC,KAAKb,GAASc,IAAIV,GAAUJ,EAAQI,GAAQE,SAyD1DS,QAnDJ,SAAiBX,EAAQY,EAAQC,EAAU,MACvC,MAAMV,EAAWP,EAAQI,IAAWJ,EAAQI,GAAQG,SAGpD,IAAKA,EAAU,OAEf,IAAKU,EAAS,OAAOjB,EAAQI,GAAQI,UAAUQ,GAAUC,EAEzD,IAAIC,EAAaD,EAAQC,WAEzB,KAAOA,GAAcA,IAAeX,EAASY,MACzCD,EAAaA,EAAWA,WAG5BlB,EAAQI,GAAQI,UAAUQ,GAAUE,IAAeX,EAASY,KAAOF,EAAU,MAsC7EG,QAhCJ,SAAiBhB,EAAQY,GACrB,OAAOhB,EAAQI,IAAWJ,EAAQI,GAAQI,UAAUQ,IAgCpDK,UA1BJ,SAAmBC,GACfrB,EAAcqB,GA0BdC,UApBJ,WACI,OAAOtB,GAoBPuB,UAdJ,WACI,OAAOtB,K,cCjEXnC,EAAOD,QAvBP,MACI,YAAY2D,GACRC,KAAKC,OAASF,GAAQ,IACtBC,KAAKE,QAAU,GAMnB,IAAIlC,GACIgC,KAAKE,QAAQC,QAAUH,KAAKC,QAEhCD,KAAKE,QAAQE,KAAKpC,GAMtB,MACI,OAAOgC,KAAKE,QAAQG,S,gBCnB5B,MAAMC,EAAQ,EAAQ,GAmBtB,IAAIC,GAAQ,IAAIC,KAuBhB,MAAMC,EAAc,IAAIC,IA8DxB,MAAMC,EAA4B,CAAC,UAYnCtE,EAAOD,QAAU,CACbwE,OAhHJ,SAAgBC,GACZ,OAAOA,EAAIC,QAAQ,SAAUC,GAAO,IAAIA,EAAIC,gBAgH5CC,QA1GJ,SAAiBJ,GACb,OAAOA,EAAIC,QAAQ,eAAgB,CAACC,EAAKG,IAAOA,EAAGC,gBA0GnDC,MAnGJ,WACI,OAAOb,KAmGPc,aA7FJ,SAAsB3C,GAClB,OAAOA,EAAO4C,MAAM,KAAK,IA6FzBC,YAvFJ,SAAqBC,GACjB,MAAMC,EAAiBD,EAAUF,MAAM,KACvC,MAA6B,UAAtBG,EAAe,GAAiBA,EAAe,GAAKA,EAAe,IAsF1EC,SA/EJ,SAAkBC,GACd,MAAO,KACClB,EAAYmB,IAAID,KAEpBlB,EAAYoB,IAAIF,GAEhBG,QAAQC,UAAUC,KAAK,KACfvB,EAAYmB,IAAID,KAChBlB,EAAYwB,OAAON,GACnBA,OAELO,MAAMC,QAAQC,UAqErBC,mBA9DJ,WACI5B,EAAY6B,QAAQC,GAAYA,GAAYA,KAC5C9B,EAAY+B,SA6DZC,YAvDJ,SAAqBC,EAAKC,EAAeC,GACrC,MAAMhD,EAASU,EAAMT,YAarB,OAV0B,IAAtB6C,EAAIG,QAAQ,MACZH,EAAM,SAAWA,EACC,MAAXA,EAAI,KACXA,GAAO9C,EAAOkD,QAAUH,GAAiBD,GAGxCE,GAA0C,IAAzBF,EAAIG,QAAQ,WAC9BH,EAAMA,EAAI5B,QAAQ,WAAY,WAG3B4B,GA0CPK,cApCJ,SAAuBC,GACnB,OAAOA,EACFlC,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,MA4BvBmC,iBArBJ,SAA0BC,GACtB,OAAuD,IAAhDvC,EAA0BkC,QAAQK,IAqBzCC,wBAfJ,SAAiC5F,GAC7B,OAAOA,EAAMuD,QAAQ,KAAM,a,gBCjH/B,MAAMsC,EAAO,EAAQ,GACfC,EAAY,EAAQ,IACpBC,EAAQ,EAAQ,IAChBC,EAAY,EAAQ,IACpBjD,EAAQ,EAAQ,GAChBkD,EAAS,EAAQ,IACjBC,EAAO,EAAQ,GAGfC,EAAO,IAFA,EAAQ,IAIrB,MAAMC,UAAgBP,EAIlB,gBAAgBzE,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIJ,EAAQhF,EAASiF,GAMhC,OAAOjF,EAASiF,GACZjF,EAAQsF,KAAO,UAEfC,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAKmE,UAAYxF,EAAQuE,SAAW,GACpClD,KAAKoE,WAAa,GAClBpE,KAAKqE,WAAa1F,EAAQ2F,UAAYlB,EAAKmB,aAC3CvE,KAAKwE,UAAYhB,EAAOiB,QAAQzE,KAAKmE,UAAUnD,eAC/ChB,KAAK0E,oBAAqB,EAC1B1E,KAAK2E,UAAY,KACjB3E,KAAK4E,YAAc,KACnB5E,KAAK6E,QAAU,KACf7E,KAAK8E,QAAU,KAEf9E,KAAK+E,YAAc,EACnB/E,KAAKgF,kBAAoB,EAEzBhF,KAAKiF,YAAYtG,EAAQuG,OAGzBlF,KAAKmF,QAAU,KACfnF,KAAKoF,aAAe,KACpBpF,KAAKqF,YAAc,KACnBrF,KAAKsF,WAAa,KAClBtF,KAAKuF,cAAgB,KACrBvF,KAAKwF,OAAS,KACdxF,KAAKyF,QAAU,KAMnB,YACIvB,MAAMwB,YAEN1F,KAAKmE,UAAY,GACjBnE,KAAKoE,WAAWjE,OAAS,EACzBH,KAAKqE,WAAajB,EAAKmB,aACvBvE,KAAKwE,QAAU,KACfxE,KAAK0E,oBAAqB,EAC1B1E,KAAK2E,UAAY,KACjB3E,KAAK4E,YAAc,KACnB5E,KAAK6E,QAAU,KACf7E,KAAK8E,QAAU,KAEf9E,KAAK2F,aAAe,KAEpB3F,KAAK+E,YAAc,EACnB/E,KAAKgF,kBAAoB,EAM7B,YACIhF,KAAKoE,WAAW9B,QAAQsD,GAASA,EAAMC,aACvC7F,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,cAAczC,GACVyC,KAAK8F,WAAavI,EAGtB,gBAEI,OADKyC,KAAK8F,aAAY9F,KAAK8F,WAAa9I,OAAOY,OAAO,OAC/CoC,KAAK8F,WAGhB,gBAAgBvI,IACPA,GAASyC,KAAK+F,cAAc/F,KAAK+F,aAAaF,YACnD7F,KAAK+F,aAAexI,EAGxB,kBAEI,OADKyC,KAAK+F,eAAc/F,KAAK+F,aAAe1C,EAAU2C,SAAShG,KAAKiG,uBAAuBnI,KAAKkC,QACzFA,KAAK+F,aAGhB,YAAYxI,IACHA,GAASyC,KAAKkG,UAAUlG,KAAKkG,SAASL,YAC3C7F,KAAKkG,SAAW3I,EAGpB,cAEI,OADKyC,KAAKkG,WAAUlG,KAAKkG,SAAW5C,EAAM0C,SAAShG,KAAKiG,uBAAuBnI,KAAKkC,QAC7EA,KAAKkG,SAGhB,YAAY3I,IACHA,GAASyC,KAAKmG,UAAUnG,KAAKmG,SAASN,YAC3C7F,KAAKmG,SAAW5I,EAGpB,cAEI,OADKyC,KAAKmG,WAAUnG,KAAKmG,SAAW5C,EAAUyC,SAAShG,KAAMA,KAAKoG,sBAAsBtI,KAAKkC,QACtFA,KAAKmG,SAMhB,YAAYjB,EAAQ,IAEhB,MAAMmB,EAAWrJ,OAAOmC,KAAK+F,GACxBmB,EAASlG,SAEdH,KAAK0E,oBAAqB,EAE1B2B,EAAS/D,QAAQzF,IACb,GAA8B,IAA1BA,EAAKgG,QAAQ,SAAgB,CAE7B,MAAMyD,EAAc7C,EAAKxC,QAAQpE,EAAK0J,OAAO,IAC7CvG,KAAK2E,UAAU2B,GAAepB,EAAMrI,QAGpCmD,KAAKwG,aAAa3J,EAAMqI,EAAMrI,MAItCmD,KAAK0E,oBAAqB,GAM9B,yBACQ1E,KAAKmG,UAAUnG,KAAK8E,QAAQ2B,gBAChCzG,KAAKoG,wBAMT,wBACQpG,KAAKR,aAAeQ,KAAK0E,oBAAoB1E,KAAKR,WAAWkH,UAAU,sBACtE1G,KAAK0E,oBAAoB1E,KAAK0G,UAAU,mBAMjD,oBACS1G,KAAK0E,oBAAoB1E,KAAK0G,UAAU,sBAMjD,sBAAsBC,EAAMC,GACxB,MAAMC,EAAKF,EAAKE,GAkBhB,GAfID,EACAtG,EAAMjB,QAAQW,KAAK8G,SAAUH,EAAKI,SAAU,MAE5CzG,EAAMjB,QAAQW,KAAK8G,SAAUH,EAAKI,SAAUJ,GAI5CE,IACID,EACA5G,KAAKgH,OAAOC,YAAYJ,EAAI,MAE5B7G,KAAKgH,OAAOC,YAAYJ,EAAIF,IAIhCA,EAAKO,YAAcP,EAAKO,WAAW/G,OACnC,IAAK,MAAMyF,KAASe,EAAKO,WACrBlH,KAAKmH,sBAAsBvB,EAAOgB,GAQ9C,eAAeD,GACX,GAAIA,EAAKrC,WAAalB,EAAKgE,UAEvB,OAAOT,EAAKU,YACT,GAAIV,EAAKrC,WAAalB,EAAKmB,aAAc,CAE5C,MAAMrB,EAAUyD,EAAKzD,QAAQlC,cAC7B,IAAIsG,EAAO,IAAIpE,EAGXyD,EAAKE,KAAIS,GAAQ,QAAQ7D,EAAKN,wBAAwBwD,EAAKE,QAC3DF,EAAKY,YAAWD,GAAQ,WAAW7D,EAAKN,wBAAwBwD,EAAKY,eAEzE,MAAMC,EAAYb,EAAKc,MAAMC,QACzBF,IAAWF,GAAQ,WAAW7D,EAAKN,wBAAwBqE,OAE/D,MAAMG,EAAMhB,EAAKgB,IACbA,IAAKL,GAAQ,QAAQ7D,EAAKN,wBAAwBwE,IAEtD,MAAMC,EAAUjB,EAAKiB,QAOrB,GANA5K,OAAOmC,KAAKyI,GAAStF,QAAQzF,IACzByK,GAAQ,SAAS7D,EAAK7C,OAAO/D,OAAU4G,EAAKN,wBAAwByE,EAAQ/K,SAGhFyK,EAAOtH,KAAK6H,+BAA+BP,EAAMX,GAE7CA,EAAKmB,UAEL,OAAUR,EAAH,MACJ,CACH,MAAMS,EAAepB,EAAKO,WAAW9H,IAAIwG,GAAS5F,KAAKgI,eAAepC,IAAQqC,KAAK,IACnF,MAAO,GAAGX,KAAQS,MAAiB7E,OAQ/C,kBAAkByD,GACd,MAAM,KACF1C,EAAI,QACJf,EAAU,GAAE,MACZgC,EAAQ,GAAE,SACVgD,EAAW,GAAE,QACblF,EAAU,IACV2D,EAEErH,EAAS,KAAKmE,EAAKrC,QAEzB,GAAa,YAAT6C,EAAoB,CAEpB,MAAMkE,EAAW,GAGjB,IAAK,MAAMC,KAAQlD,EAAO,CACtB,MAAMrI,EAAOuL,EAAKvL,KAClB,IAAIU,EAAQ6K,EAAK7K,MAEJ,UAATV,IAAkBU,EAAQA,GAASA,EAAMuD,QAAQ,IAAK,MAAS,IAEnEqH,EAAStL,GAAQU,EAGrB,MAAM8K,EAAUrI,KAAKsI,cAAcC,gBAAgB,CAC/CrF,UAASgC,MAAOiD,EAAU7I,WAG9B,IAAK,IAAIsG,KAASsC,EACdtC,EAAQ5F,KAAKwI,kBAAkB5C,GAE3BA,GAAOyC,EAAQI,YAAY7C,GAGnC,OAAOyC,EACJ,MAAa,SAATpE,EAEAjE,KAAKsI,cAAcI,iBAAiB,CACvC1F,QAASS,EAAKV,cAAcC,GAAU1D,WAE1B,YAAT2E,EAEAjE,KAAKsI,cAAcK,qBAFvB,EASX,gBACI,MAAO,CACHrJ,OAAQU,KAAK+G,SACbrI,OAAQsB,KAAK4I,SACb3E,KAAMjE,KAAK6I,OACX3F,QAASlD,KAAKmE,UACd0C,GAAI7G,KAAK6G,GACTU,UAAWvH,KAAKuH,UAChBE,MAAOzH,KAAKkG,SAAWlG,KAAKyH,MAAMC,QAAU,IAOpD,gBACI,OAAO1H,KAAKwE,QAMhB,oBACI,OAAOxE,KAAK2F,aAMhB,+BAA+B2B,GAE3B,OAAOA,EAMX,+BAOA,8BAEI,MAAO,GAQX,0BACI7D,EAAKpB,qBACL,MAAMzD,EAAS0B,EAAMrB,UAAUe,KAAK8G,UACpC,OAAO,IAAIhF,QAAQ,CAACC,EAAS+G,KACpBlK,GAAQkK,IAEQ,SAAjB9I,KAAKkD,QACLtE,EAAOmK,wBAAwBC,iBAAiBC,aAAaC,GAAQA,EAAMnH,EAAQmH,GAAOJ,EAAO,IAAIK,MAAM,+BAAgCC,OAE3IxK,EAAOmK,wBAAwBM,OAAO,+BAA+BrJ,KAAKsJ,UAAYC,mBAAmBL,GAAQA,EAAMnH,EAAQmH,GAAOJ,EAAO,IAAIK,MAAM,kCAAmCC,SAQtM,eACI3F,EAAKpB,qBACL,MAAMzD,EAAS0B,EAAMrB,UAAUe,KAAK8G,UACpC,OAAO,IAAIhF,QAAQ,CAACC,EAAS+G,KACpBlK,GAAQkK,IAEQ,WAAjB9I,KAAKkD,QAELsG,GAAGC,sBAAsBC,GAAG1J,KAAK2J,eAAeN,OAAO,SAASrJ,KAAKsJ,UAAYM,QAAQV,GAAQA,GAAOA,EAAIU,QAAU7H,EAAQmH,EAAIU,SAAWd,KACxIM,OAELxK,EAAOmK,wBAAwBM,OAAO,+BAA+BrJ,KAAKsJ,UAAYM,QAAQV,GAAQA,GAAOA,EAAIU,QAAU7H,EAAQmH,EAAIU,SAAWd,KAAWM,SASzK,gBACI3F,EAAKpB,qBACL,MAAMzD,EAAS0B,EAAMrB,UAAUe,KAAK8G,UACpC,OAAO,IAAIhF,QAAQ,CAACC,EAAS+G,KACpBlK,GAAQkK,IAEQ,WAAjB9I,KAAKkD,QAELnB,EAAQyH,GAAGC,sBAAsBC,GAAG1J,KAAK2J,eAAeN,OAAO,SAASrJ,KAAKsJ,WAE7EvH,EAAQnD,EAAOmK,wBAAwBM,OAAO,+BAA+BrJ,KAAKsJ,aAQ9F,4BAA4BzM,EAAMU,GACV,iBAATV,IAEXmD,KAAK0E,oBAAqB,EAC1B1E,KAAK8E,QAAQ+E,IAAIhN,EAAMU,GACvByC,KAAK0E,oBAAqB,GAM9B,SACI,OAAK1E,KAAKmG,SAEHnG,KAAK8E,QAAQ3H,IAAI,MAFG,GAK/B,OAAO0J,GACH,GAAkB,iBAAPA,EAAiB,OAE5BA,EAAKA,EAAGiD,OACR,MAAMC,EAAQ/J,KAAK8E,QAAQ3H,IAAI,MAC/B6C,KAAK8E,QAAQ+E,IAAI,KAAMhD,GAEnBA,IAAOkD,IAGP/J,KAAKgH,OAAOgD,QAAQD,KAAW/J,MAAMA,KAAKgH,OAAOC,YAAY8C,EAAO,MACpElD,GAAI7G,KAAKgH,OAAOC,YAAYJ,EAAI7G,MACpCA,KAAKoG,yBAGT,cACI,OAAOpG,KAAKmE,UAAUhD,cAG1B,gBACI,OAAKnB,KAAK+F,aAEH/F,KAAK4E,YAAYqF,WAFO,GAKnC,cAAc1C,GACe,iBAAdA,GAEXvH,KAAK4E,YAAYsF,QAAQ3C,GAG7B,gBACI,OAAOvH,KAAK4E,YAGhB,eACI,OAAO5E,KAAKkD,QAGhB,eACI,OAAOlD,KAAKqE,WAGhB,iBACI,OAAOrE,KAAKoE,WAGhB,eACI,OAAOpE,KAAKoE,WAAW+F,OAAOvE,GAASA,EAAMtB,WAAalB,EAAKmB,cAGnE,iBACI,OAAOvE,KAAKoE,WAAW,GAG3B,gBACI,OAAOpE,KAAKoE,WAAWpE,KAAKoE,WAAWjE,OAAS,GAGpD,gBACI,OAAOH,KAAKoE,WAAWhF,IAAIwG,GAAS5F,KAAKgI,eAAepC,IAAQqC,KAAK,IAGzE,cAAcX,GACV,GAAoB,iBAATA,EAAmB,OAE9B,MAAM8C,EAAWpK,KAAKsI,cAAcC,gBAAgB,CAChDrF,QAAS,mBACT5D,OAAQ,KAAKmE,EAAKrC,QAClBkD,SAAUlB,EAAKiH,yBAInB,IAAIC,EAAM,KACV,IACIA,EAAM9G,EAAO+G,MAAMjD,GACrB,MAAOkD,GACLrI,QAAQC,MAAMoI,GAGlB,GAAKF,EAkBL,GAfAA,EAAIhI,QAAQmI,IACR,MAAM9D,EAAO3G,KAAKwI,kBAAkBiC,GAChC9D,GAAMyD,EAAS3B,YAAY9B,KAInC3G,KAAKoE,WAAW9B,QAAQqE,IACpBA,EAAK+D,eAAe,MAGpB1K,KAAKmH,sBAAsBR,GAAM,KAErC3G,KAAKoE,WAAWjE,OAAS,EAGF,UAAnBH,KAAKmE,UAAuB,CAE5B,IAAIwG,GAAW,EAEf,IAAK,MAAM/E,KAASwE,EAASlD,WACzB,GAAsB,UAAlBtB,EAAM1C,QAAqB,CAC3ByH,GAAW,EACX,MAIR,IAAKA,EAAU,CACX,MAAMC,EAAQ5K,KAAKsI,cAAcC,gBAAgB,CAC7CrF,QAAS,QACTgC,MAAO,GACPZ,SAAUlB,EAAKmB,aACfjF,OAAQ,KAAKmE,EAAKrC,UAGtBwJ,EAAMnC,YAAY2B,GAClBpK,KAAKyI,YAAYmC,SAGrB5K,KAAKyI,YAAY2B,GAIzB,gBACI,OAAOpK,KAAKgI,eAAehI,MAG/B,cAAcsH,GACV,GAAoB,iBAATA,EAAmB,OAG9B,IAAIgD,EAAM,KACV,IACIA,EAAM9G,EAAO+G,MAAMjD,GAAM,GAC3B,MAAOkD,GACLrI,QAAQC,MAAMoI,GAGlB,GAAIF,EAAK,CAEL,MAAM3D,EAAO3G,KAAKwI,kBAAkB8B,GAGpCtK,KAAKoE,WAAW9B,QAAQqE,IACpBA,EAAK+D,eAAe,MAGpB1K,KAAKmH,sBAAsBR,GAAM,KAErC3G,KAAKoE,WAAWjE,OAAS,EAEzBH,KAAK0E,oBAAqB,EAG1B,MAAMwD,EAAW,GAAG2C,OAAOlE,EAAKO,YAChC,IAAK,MAAMtB,KAASsC,EAChBlI,KAAKyI,YAAY7C,GAGrB5F,KAAKmE,UAAYwC,EAAKzD,QAAQlC,cAC9BhB,KAAK6G,GAAKF,EAAKE,IAAM,GACrB7G,KAAKuH,UAAYZ,EAAKY,WAAa,GACnCvH,KAAKyH,MAAMC,QAAUf,EAAKc,MAAMC,SAAW,GAC3C1H,KAAK2H,IAAMhB,EAAKgB,KAAO,GACvB3H,KAAK2E,UAAY3H,OAAO8N,OAAO,GAAInE,EAAKiB,SAExC5H,KAAK+K,4BAA4BpE,GAEjC3G,KAAK0E,oBAAqB,EAC1B1E,KAAKoG,yBAIb,gBAEI,OAAOpG,KAAKqH,YAGhB,cAAc2D,GACVhL,KAAKqH,YAAc2D,EAGvB,kBACI,OAAOhL,KAAKoE,WAAWhF,IAAIwG,GAASA,EAAMyB,aAAaY,KAAK,IAGhE,gBAAgB+C,GAaZ,GAZAA,EAAO,GAAKA,EAGZhL,KAAKoE,WAAW9B,QAAQqE,IACpBA,EAAK+D,eAAe,MAGpB1K,KAAKmH,sBAAsBR,GAAM,KAErC3G,KAAKoE,WAAWjE,OAAS,GAGpB6K,EAAM,OAEX,MAAM1L,EAAS,KAAKmE,EAAKrC,QACnBwE,EAAQ5F,KAAKsI,cAAcI,iBAAiB,CAAC1F,QAASgI,EAAM1L,WAElEU,KAAKyI,YAAY7C,GAGrB,YACI,OAAO5F,KAAK6E,QAGhB,UAAUtH,GACNyC,KAAK6E,QAAQ6C,QAAUnK,EAG3B,cACI,OAAOyC,KAAK2E,UAGhB,iBACI,OAAO3E,KAAK8E,QAAQmG,KAGxB,UACI,OAAKjL,KAAKmG,SAEHnG,KAAK8E,QAAQ3H,IAAI,OAFG,GAK/B,QAAQI,GACJA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,MAAOtM,GAG5B,gBAEI,OAAOyC,KAAK+E,YAGhB,cAAcxH,GACa,SAAnByC,KAAKmE,aACJ,IAAI3D,KAASR,KAAKgF,kBAAoB,MAE3CzH,EAAQ2N,SAAS3N,EAAO,IACxBiM,GAAG2B,aAAa,CAACC,UAAW7N,EAAO8N,SAAU,IAC7CrL,KAAK+E,YAAcxH,IAGvB,UAAU+N,GACN,MAAM1D,EAAU,GAChB5K,OAAOmC,KAAKa,KAAK2E,WAAWrC,QAAQzF,IAChC+K,EAAQ,QAAQnE,EAAK7C,OAAO/D,IAAWmD,KAAK2E,UAAU9H,KAG1D,MAAM0O,EAAUvL,KAAKsI,cAAcC,gBAAgB,CAC/CrF,QAASlD,KAAKmE,UACde,MAAO,CACH2B,GAAI7G,KAAK6G,GACT2E,MAAOxL,KAAKuH,UACZE,MAAOzH,KAAKyH,MAAMC,QAClBC,IAAK3H,KAAK2H,OAEPC,KACA5H,KAAKyL,+BAEZnH,SAAUtE,KAAKqE,WACf/E,OAAQ,KAAKmE,EAAKrC,UAGtB,GAAIkK,EAEA,IAAK,MAAM1F,KAAS5F,KAAKoE,WACrBmH,EAAQ9C,YAAY7C,EAAM8F,UAAUJ,IAI5C,OAAOC,EAGX,YAAY5E,GACR,KAAMA,aAAgBvD,GAAO,OAE7B,IAAIuI,EACAC,GAAY,EAIZD,EAFAhF,EAAKrC,WAAalB,EAAKiH,uBAEf,GAAGQ,OAAOlE,EAAKO,YAEf,CAACP,GAGb,IAAK,MAAMA,KAAQgF,EACXhF,IAAS3G,OACT2G,EAAKnH,YAAYmH,EAAKnH,WAAWqM,YAAYlF,GAEjD3G,KAAKoE,WAAWhE,KAAKuG,GACrBA,EAAK+D,eAAe1K,MAGpBA,KAAKmH,sBAAsBR,GAE3BiF,GAAY,GAMhB,OAFIA,GAAW5L,KAAK8L,oBAEb9L,KAGX,YAAY2G,GACR,KAAMA,aAAgBvD,GAAO,OAE7B,MAAM2I,EAAQ/L,KAAKoE,WAAWvB,QAAQ8D,GAetC,OAbIoF,GAAS,IAET/L,KAAKoE,WAAW4H,OAAOD,EAAO,GAE9BpF,EAAK+D,eAAe,MAGpB1K,KAAKmH,sBAAsBR,GAAM,GAGjC3G,KAAK8L,qBAGFnF,EAGX,aAAaA,EAAMsF,GACf,KAAMtF,aAAgBvD,GAAO,OAC7B,GAAI6I,KAASA,aAAe7I,GAAO,OAEnC,IAAIuI,EACAC,GAAY,EAEhB,GAAIjF,EAAKrC,WAAalB,EAAKiH,uBAAwB,CAE/CsB,EAAQ,GACR,IAAK,IAAIrP,EAAI,EAAGA,EAAIqK,EAAKO,WAAW/G,OAAQ7D,IAExCqP,EAAMvL,KAAKuG,EAAKO,WAAW5K,SAG/BqP,EAAQ,CAAChF,GAGb,IAAK,MAAMA,KAAQgF,EAAO,CACtB,GAAIhF,IAAS3G,KAAM,SACf2G,EAAKnH,YAAYmH,EAAKnH,WAAWqM,YAAYlF,GAEjD,MAAMuF,EAAcD,EAAMjM,KAAKoE,WAAWvB,QAAQoJ,IAAQ,GAErC,IAAjBC,EAEAlM,KAAKoE,WAAWhE,KAAKuG,GAGrB3G,KAAKoE,WAAW4H,OAAOE,EAAa,EAAGvF,GAG3CA,EAAK+D,eAAe1K,MAGpBA,KAAKmH,sBAAsBR,GAE3BiF,GAAY,EAOhB,OAFIA,GAAW5L,KAAK8L,oBAEbnF,EAGX,aAAaA,EAAMwF,GACf,KAAMxF,aAAgBvD,GAAW+I,aAAe/I,GAAO,OAEvD,IAAIuI,EACAC,GAAY,EAEhB,GAAIjF,EAAKrC,WAAalB,EAAKiH,uBAAwB,CAE/CsB,EAAQ,GACR,IAAK,IAAIrP,EAAIqK,EAAKO,WAAW/G,OAAS,EAAG7D,GAAK,EAAGA,IAE7CqP,EAAMvL,KAAKuG,EAAKO,WAAW5K,SAG/BqP,EAAQ,CAAChF,GAGb,MAAMyF,EAAepM,KAAKoE,WAAWvB,QAAQsJ,IACvB,IAAlBC,GAAqBpM,KAAKoE,WAAW4H,OAAOI,EAAc,GAE9D,IAAK,MAAMzF,KAAQgF,EACXhF,IAAS3G,OACT2G,EAAKnH,YAAYmH,EAAKnH,WAAWqM,YAAYlF,IAE3B,IAAlByF,EAEApM,KAAKoE,WAAWhE,KAAKuG,GAGrB3G,KAAKoE,WAAW4H,OAAOI,EAAc,EAAGzF,GAG5CA,EAAK+D,eAAe1K,MAGpBA,KAAKmH,sBAAsBR,GAC3B3G,KAAKmH,sBAAsBgF,GAAK,GAEhCP,GAAY,GAMhB,OAFIA,GAAW5L,KAAK8L,oBAEbK,EAGX,gBACI,OAAOnM,KAAKoE,WAAWjE,OAAS,EAGpC,qBAAqB+C,GACjB,MAAuB,iBAAZA,EAA6B,GAEjClD,KAAKgH,OAAOqF,aAAanJ,EAASlD,MAG7C,uBAAuBuH,GACnB,MAAyB,iBAAdA,EAA+B,GAEnCvH,KAAKgH,OAAOsF,eAAe/E,EAAWvH,MAGjD,cAAcuM,GACV,GAAwB,iBAAbA,EAEX,OAAOvM,KAAKgH,OAAOwF,MAAMD,EAAUvM,MAAM,IAAM,KAGnD,iBAAiBuM,GACb,MAAwB,iBAAbA,EAA8B,GAElCvM,KAAKgH,OAAOwF,MAAMD,EAAUvM,MAGvC,aAAanD,EAAMU,GACf,GAAoB,iBAATV,EAAmB,OAG9B,MAAM4P,SAAmBlP,EAGzB,GAFkB,WAAdkP,GAAwC,YAAdA,QAAqCC,IAAVnP,GAAwBoP,MAAMC,QAAQrP,KAAQA,EAAQ,GAAKA,GAEvG,wBAATV,GAA2C,oBAATA,EAA4B,CAEzC,iBADrBU,EAAQA,GAAS,MACcA,EAAQsP,KAAKtC,MAAMhN,IAClD,MAAMuP,EAAW9M,KAAK+M,aAAalQ,GAC7BsC,EAAOnC,OAAOmC,KAAK5B,GACnByP,EAAUF,EAAW9P,OAAOmC,KAAK2N,GAAY,KAEnD,GAAa,wBAATjQ,EAEAsC,EAAKmD,QAAQzE,GAAOmC,KAAKwG,aAAa3I,EAAKN,EAAMM,KAC7CmP,GACAA,EAAQ1K,QAAQzE,IACPb,OAAOkB,UAAUC,eAAe1B,KAAKc,EAAOM,IAAMmC,KAAKiN,gBAAgBpP,SAGjF,CAEH,MAAMe,EAAS0B,EAAMrB,UAAUe,KAAK8G,UAEhCkG,GACAA,EAAQ1K,QAAQzE,IAEZ,IAAIqP,EAAUJ,EAASjP,GACvBqP,EAA6B,mBAAZA,EAAyBtO,EAAOsO,GAAWA,EAC5DlN,KAAKmN,oBAAoBtP,EAAKqP,KAGtC/N,EAAKmD,QAAQzE,IACT,IAAIqP,EAAU3P,EAAMM,GACpBqP,EAA6B,mBAAZA,EAAyBtO,EAAOsO,GAAWA,EAC5DlN,KAAKoN,iBAAiBvP,EAAKqP,MAK1B,OAATrQ,EAEAmD,KAAK6G,GAAKtJ,EAEVyC,KAAK8E,QAAQ+E,IAAIhN,EAAMU,GAI/B,aAAaV,GACT,MAAoB,iBAATA,EAA0B,GAChCmD,KAAKmG,SAEHnG,KAAK8E,QAAQ3H,IAAIN,GAFY,OAATA,GAA0B,UAATA,GAA6B,UAATA,EAAmB,QAAK6P,EAK5F,aAAa7P,GACT,MAAoB,iBAATA,MACNmD,KAAKmG,UAEHnG,KAAK8E,QAAQlD,IAAI/E,IAG5B,gBAAgBA,GACZ,MAAoB,iBAATA,GAEJmD,KAAK8E,QAAQuI,OAAOxQ,GAG/B,eAAeyQ,EAAWzQ,EAAMU,GAE5B4E,QAAQoL,KAAK,aAAaD,sBAC1BtN,KAAKwG,aAAa3J,EAAMU,GAG5B,eAAe+P,EAAWzQ,GAGtB,OADAsF,QAAQoL,KAAK,aAAaD,sBACnBtN,KAAK+M,aAAalQ,GAG7B,eAAeyQ,EAAWzQ,GAGtB,OADAsF,QAAQoL,KAAK,aAAaD,sBACnBtN,KAAKwN,aAAa3Q,GAG7B,kBAAkByQ,EAAWzQ,GAGzB,OADAsF,QAAQoL,KAAK,aAAaD,sBACnBtN,KAAKiN,gBAAgBpQ,GAGhC,SAAS4Q,GACL,MAAMC,EAAQ,GACd,IAAIC,EAAe3N,KAEnB,KAAO2N,GAAc,CACjB,GAAIA,IAAiBF,EAAc,OAAO,EAE1C,MAAMvG,EAAayG,EAAazG,WAC5BA,GAAcA,EAAW/G,QAAQ+G,EAAW5E,QAAQsD,GAAS8H,EAAMtN,KAAKwF,IAE5E+H,EAAeD,EAAMrN,MAGzB,OAAO,EAGX,wBAGI,OADA8B,QAAQoL,KAAK,gGACN,CACHK,KAAM,EACNC,IAAK,IAKjBxR,EAAOD,QAAUuH,G,gBCr/BjB,MAAMmK,EAAQ,EAAQ,GAChBC,EAAc,EAAQ,GAK5B,SAASC,EAAiBC,EAAGC,GACzB,GAAID,EAAE9N,SAAW+N,EAAE/N,OAAQ,OAAO,EAElC,IAAK,IAAI7D,EAAG6R,EAAMF,EAAE9N,OAAQ7D,EAAI6R,EAAK7R,IAAK,CACtC,MAAM8R,EAAQH,EAAE3R,GACV+R,EAAQH,EAAE5R,GAEhB,GAAI8R,EAAME,aAAeD,EAAMC,WAAY,OAAO,EAClD,GAAIF,EAAMG,QAAUF,EAAME,OAASH,EAAMI,QAAUH,EAAMG,OAASJ,EAAMK,UAAYJ,EAAMI,SAAWL,EAAMM,UAAYL,EAAMK,QAAS,OAAO,EAGjJ,OAAO,EAGX,MAAMC,EACF,eAAeC,GACX5O,KAAKgE,UAAU4K,GAMnB,SAEI5O,KAAKoF,aAAe,KACpBpF,KAAKqF,YAAc,KACnBrF,KAAKsF,WAAa,KAClBtF,KAAKuF,cAAgB,KACrBvF,KAAK6O,QAAU,KACf7O,KAAK8O,QAAU,KACf9O,KAAK+O,OAAS,KACd/O,KAAKgP,SAAW,KAEhBhP,KAAKiP,mBAAqB,KAC1BjP,KAAKkP,kBAAoB,KAM7B,YACIlS,OAAOmC,KAAKa,MAAMsC,QAAQzE,IAEI,IAAtBA,EAAIgF,QAAQ,QAAa7C,KAAKnC,GAAO,MAE1B,MAAXA,EAAI,KAAYmC,KAAKnC,GAAO,MACjB,MAAXA,EAAI,IAA0B,MAAXA,EAAI,IAAyB,MAAXA,EAAI,KAAamC,KAAKnC,GAAO,QAG1EmC,KAAKiP,mBAAqB,KAC1BjP,KAAKkP,kBAAoB,KAG7B,sBAAsB3R,GAClByC,KAAKmP,mBAAqB5R,EAG9B,wBAEI,OADKyC,KAAKmP,qBAAoBnP,KAAKmP,mBAAqBnS,OAAOY,OAAO,OAC/DoC,KAAKmP,mBAMhB,iBAAiBC,EAAQC,EAAWC,EAAkBC,EAAOC,GACzD,IAAIC,GAEAJ,aAAqBtB,GAAesB,aAAqBvB,KAEzD2B,EAAQJ,EACRA,EAAYI,EAAMxL,MAGtBoL,EAAYA,EAAUrO,cAEtB,MAAM0O,EAAO,CAACN,GACd,IAAI5P,EAAa4P,EAAO5P,WAExB,KAAOA,GAAqC,SAAvBA,EAAW0D,SAC5BwM,EAAKtP,KAAKZ,GACVA,EAAaA,EAAWA,WAGU,SAAlCkQ,EAAKA,EAAKvP,OAAS,GAAG+C,SAEtBwM,EAAKtP,KAAKZ,GAGTiQ,IAEDA,EAAQ,IAAI3B,EAAM,CACdjR,KAAMwS,EACND,SACAO,UAAWL,EAAiBK,UAC5BC,QAASN,EAAiBM,QAC1BC,eAAgBP,EAAiBO,eACjCC,SAAS,EACTC,QAASR,KAKjB,IAAK,IAAIjT,EAAIoT,EAAKvP,OAAS,EAAG7D,GAAK,EAAGA,IAAK,CACvC,MAAM0T,EAAgBN,EAAKpT,GAE3B,IAAKmT,EAAMQ,YAAa,MACpBD,IAAkBZ,IAGQ,iBAA1BY,EAAc9M,SAAyD,YAA3B8M,EAAcE,WAE9DT,EAAMU,mBAAmBH,GACzBP,EAAMW,gBAAgBtC,EAAMuC,iBAE5BL,EAActJ,UAAU2I,EAAW,CAC/BI,QACAa,WAAW,IAEXd,GAAUA,EAASQ,EAAeP,GAAO,KAwBjD,GApBIA,EAAMQ,cACNR,EAAMU,mBAAmBf,GACzBK,EAAMW,gBAAgBtC,EAAMyC,WAG5BnB,EAAO1I,UAAU2I,EAAW,CACxBI,QACAa,WAAW,EACXE,UAAU,IAEVhB,GAAUA,EAASJ,EAAQK,GAAO,GAEtCL,EAAO1I,UAAU2I,EAAW,CACxBI,QACAa,WAAW,EACXE,UAAU,IAEVhB,GAAUA,EAASJ,EAAQK,GAAO,IAGtCA,EAAMK,QAEN,IAAK,MAAME,KAAiBN,EAAM,CAC9B,IAAKD,EAAMQ,YAAa,MACpBD,IAAkBZ,IAGQ,iBAA1BY,EAAc9M,SAAyD,YAA3B8M,EAAcE,WAE9DT,EAAMU,mBAAmBH,GACzBP,EAAMW,gBAAgBtC,EAAM2C,gBAE5BT,EAActJ,UAAU2I,EAAW,CAC/BI,QACAa,WAAW,IAEXd,GAAUA,EAASQ,EAAeP,GAAO,GAGf,iBAA1BO,EAAc9M,SAAyD,UAA3B8M,EAAcE,UAAsBT,EAAMiB,oBAQlG,OAHAjB,EAAMU,mBAAmB,MACzBV,EAAMW,gBAAgBtC,EAAM6C,MAErBlB,EAMX,cAAcJ,EAAWiB,EAAWM,GAChC,MAAMC,EAAa7Q,KAAKkP,kBAExB,GAAI0B,EAAQ,CACR,MAAME,EAAaD,EAAWxB,GAAawB,EAAWxB,IAAc,GAKpE,OAHAyB,EAAWC,QAAUD,EAAWC,SAAW,GAC3CD,EAAWE,OAASF,EAAWE,QAAU,GAElCV,EAAYQ,EAAWC,QAAUD,EAAWE,OAChD,CACH,MAAMF,EAAaD,EAAWxB,GAE9B,OAAKyB,EAEER,EAAYQ,EAAWC,QAAUD,EAAWE,OAF3B,MAShC,UAAU3B,GAAW,MACjBI,EAAK,KAAEb,EAAO,GAAE,UAAE0B,EAAS,SAAEE,GAC7B,IACAnB,EAAYA,EAAUrO,cACtB,MAAMiQ,EAAWjR,KAAKkR,cAAc7B,EAAWiB,GACzCa,EAAc,KAAK9B,EAEzB,KAAMiB,GAAcE,GAA0C,mBAAtBxQ,KAAKmR,IAA6B,CAEtE,GAAI1B,GAASA,EAAM2B,gBAAiB,OACpC,IACIpR,KAAKmR,GAAa1U,KAAKuD,MAAQ,KAAMyP,KAAUb,GACjD,MAAOpE,GACLrI,QAAQC,MAAMoI,IAIjByG,IAGDA,EAAS9Q,QACT8Q,EAAS3O,QAAQ4K,IACb,IAAIuC,IAASA,EAAM2B,gBACnB,IACIlE,EAAQzQ,KAAKuD,MAAQ,KAAMyP,KAAUb,GACvC,MAAOpE,GACLrI,QAAQC,MAAMoI,MAMtByG,EAASI,YACTrU,OAAOmC,KAAK8R,EAASI,YAAY/O,QAAQgL,IACrC,MAAMgE,EAAoBL,EAASI,WAAW/D,GAC1CgE,GACAA,EAAkBhP,QAAQ4K,IACtB,IAAIuC,IAASA,EAAM2B,gBACnB,IACIlE,EAAQzQ,KAAKuD,MAAQ,KAAMyP,KAAUb,GACvC,MAAOpE,GACLrI,QAAQC,MAAMoI,SAWtC,aAAa8E,GACT,MAAMiC,EAAOvR,KAAKiP,mBACZuC,EAAMlC,EAEZ,IAAImC,GAAO,EAwBX,OAtBKF,GAAQA,EAAK5B,YAAc6B,EAAI7B,YAI5B4B,EAAK3B,SAAW4B,EAAI5B,UAAY5B,EAAiBuD,EAAK3B,QAAS4B,EAAI5B,WAG1D2B,EAAK3B,SAAW4B,EAAI5B,SAAa2B,EAAK3B,UAAY4B,EAAI5B,WAD/D6B,GAAO,IAMPF,EAAK1B,gBAAkB2B,EAAI3B,iBAAmB7B,EAAiBuD,EAAK1B,eAAgB2B,EAAI3B,kBAG/E0B,EAAK1B,gBAAkB2B,EAAI3B,gBAAoB0B,EAAK1B,iBAAmB2B,EAAI3B,kBADpF4B,GAAO,IAZXA,GAAO,EAmBPA,IAAMzR,KAAKiP,mBAAqBuC,GAC7BC,EAMX,aAAapC,EAAW1Q,GACpB,GAAyB,iBAAd0Q,EAAwB,OAEnC,IAAIiB,GAAY,EACZhD,EAAY,KAEO,kBAAZ3O,EAAuB2R,EAAY3R,EAClB,iBAAZA,IACZ2R,IAAc3R,EAAQoS,QACtBzD,EAAY3O,EAAQ+S,aAGxBrC,EAAYA,EAAUrO,cACtB,MAAMiQ,EAAWjR,KAAKkR,cAAc7B,EAAWiB,GAE1CW,IAEDA,EAAS9Q,SAAQ8Q,EAAS9Q,OAAS,GACnC8Q,EAASI,aAAYJ,EAASI,WAAW/D,GAAa,OAM9D,kBAAkB+B,GACdA,EAAYA,EAAUrO,cACtB,MAAM2Q,EAAiB3R,KAAKkR,cAAc7B,GAAW,GAC/CuC,EAAkB5R,KAAKkR,cAAc7B,GAAW,GACtD,OAAQsC,GAAkBA,EAAexR,QAAYyR,GAAmBA,EAAgBzR,OAM5F,iBAAiBkP,EAAWnC,EAASvO,GACjC,GAAyB,iBAAd0Q,GAA6C,mBAAZnC,EAAwB,OAEpE,IAAIoD,GAAY,EACZhD,EAAY,KAEO,kBAAZ3O,EAAuB2R,EAAY3R,EAClB,iBAAZA,IACZ2R,IAAc3R,EAAQoS,QACtBzD,EAAY3O,EAAQ+S,aAGxBrC,EAAYA,EAAUrO,cACtB,MAAMiQ,EAAWjR,KAAKkR,cAAc7B,EAAWiB,GAAW,GAEtDhD,GAEA2D,EAASI,WAAaJ,EAASI,YAAc,GAC7CJ,EAASI,WAAW/D,GAAa2D,EAASI,WAAW/D,IAAc,GACnE2D,EAASI,WAAW/D,GAAWlN,KAAK8M,IAEpC+D,EAAS7Q,KAAK8M,GAItB,oBAAoBmC,EAAWnC,EAASvO,GACpC,GAAyB,iBAAd0Q,GAA6C,mBAAZnC,EAAwB,OAEpE,IAAIoD,GAAY,EACZhD,EAAY,KAEO,kBAAZ3O,EAAuB2R,EAAY3R,EAClB,iBAAZA,IACZ2R,IAAc3R,EAAQoS,QACtBzD,EAAY3O,EAAQ+S,aAGxBrC,EAAYA,EAAUrO,cACtB,MAAMiQ,EAAWjR,KAAKkR,cAAc7B,EAAWiB,GAAW,GAE1D,GAAKW,EAEL,GAAI3D,EAAW,CAEX,IAAK2D,EAASI,aAAeJ,EAASI,WAAW/D,GAAY,OAE7D,MAAMvB,EAAQkF,EAASI,WAAW/D,GAAWzK,QAAQqK,GACjDnB,GAAS,GAAGkF,EAASI,WAAW/D,GAAWtB,OAAOD,EAAO,OAC1D,CACH,MAAMA,EAAQkF,EAASpO,QAAQqK,GAC3BnB,GAAS,GAAGkF,EAASjF,OAAOD,EAAO,IAI/C,cAAc8F,GAMV,OALIA,aAAe9D,GACfY,EAAYmD,UAAU9R,KAAM6R,IAIzB,GAIfxV,EAAOD,QAAUuS,G,cCrXjB,MAAMb,EACF,YAAYnP,GACRqB,KAAK+R,OAASpT,EAAQ9B,KAAKmE,cAC3BhB,KAAKgS,SAAWrT,EAAQyQ,OACxBpP,KAAKiS,YAActT,EAAQgR,WAAanP,KAAKgR,MAC7CxR,KAAKkS,gBAAkBvT,EAAQqR,eAAiBrR,EAAQyQ,OACxDpP,KAAKmS,aAAexT,EAAQyT,YAActE,EAAM6C,KAChD3Q,KAAKqS,SAAW1T,EAAQ2T,QAAU,KAClCtS,KAAKuS,iBAAkB,EACvBvS,KAAKwS,aAAc,EACnBxS,KAAKyS,UAAY9T,EAAQmR,UAAW,EACpC9P,KAAK0S,UAAY,KACjB1S,KAAK2S,gBAAkB,KACvB3S,KAAK4S,iBAAmB,KACxB5S,KAAK6S,cAAe,EAGpB,MAAMtD,EAAQ5Q,EAAQoR,QAClBR,GACAvS,OAAOmC,KAAKoQ,GAAOjN,QAAQzE,IACvBmC,KAAKnC,GAAO0R,EAAM1R,KAKtBc,EAAQiR,SAAWjR,EAAQiR,QAAQzP,QACnCH,KAAK0S,UAAY/T,EAAQiR,QAAQxQ,IAAI0T,IAAS,IAAKA,EAAO1D,OAAQzQ,EAAQyQ,UAE1EpP,KAAK+S,wBACEpU,EAAQiR,UACf5P,KAAK0S,UAAY,GACjB1S,KAAK2S,gBAAkB,IAIvBhU,EAAQkR,gBAAkBlR,EAAQkR,eAAe1P,OACjDH,KAAK4S,iBAAmBjU,EAAQkR,eAAezQ,IAAI0T,IAAS,IAAKA,EAAO1D,OAAQzQ,EAAQyQ,UACjFzQ,EAAQkR,iBACf7P,KAAK4S,iBAAmB,IAOhC,sBACI,OAAO5S,KAAKuS,gBAMhB,kBACI,OAAOvS,KAAKwS,YAMhB,YAAYpD,GACRpP,KAAKgS,SAAW5C,EAMpB,mBAAmBY,GACfhQ,KAAKkS,gBAAkBlC,EACvBhQ,KAAK+S,uBAMT,gBAAgBX,GACZpS,KAAKmS,aAAeC,EAMxB,uBACQpS,KAAK0S,WAAa1S,KAAK0S,UAAUvS,SACjCH,KAAK2S,gBAAkB3S,KAAK0S,UAAUvI,OAAO2I,GA/FzD,SAAuBE,EAAOC,GAC1B,GAAID,IAAUC,EAAO,OAAO,EAE5B,KAAOD,GAAO,CACV,GAAIA,IAAUC,EAAO,OAAO,EAE5BD,EAAQA,EAAMxT,WAGlB,OAAO,EAsFuD0T,CAAcJ,EAAM1D,OAAQpP,KAAKkS,mBAO/F,cACI,OAAOlS,KAAKyS,UAGhB,iBACI,OAAOzS,KAAK6S,aAGhB,aACI,OAAO7S,KAAKgS,SAGhB,oBACI,OAAOhS,KAAKkS,gBAGhB,iBACI,OAAOlS,KAAKmS,aAGhB,WACI,OAAOnS,KAAK+R,OAGhB,gBACI,OAAO/R,KAAKiS,YAGhB,cACI,OAAOjS,KAAK0S,UAGhB,oBACI,OAAO1S,KAAK2S,gBAGhB,qBACI,OAAO3S,KAAK4S,iBAGhB,WAAWrV,GACPyC,KAAKqS,SAAW9U,EAGpB,aACI,OAAOyC,KAAKqS,SAGhB,iBAEIrS,KAAK6S,cAAe,EAGxB,kBACQ7S,KAAKoS,aAAetE,EAAM6C,OAE9B3Q,KAAKwS,aAAc,GAGvB,2BACQxS,KAAKoS,aAAetE,EAAM6C,OAE9B3Q,KAAKuS,iBAAkB,EACvBvS,KAAKwS,aAAc,GAGvB,UAAU3V,EAAO,GAAIiT,GACG,iBAATjT,IAEXmD,KAAK+R,OAASlV,EAAKmE,cACnBhB,KAAKyS,eAAwB/F,IAAZoD,EAAwB9P,KAAKyS,YAAc3C,IAKpEhC,EAAM6C,KAAO,EACb7C,EAAMuC,gBAAkB,EACxBvC,EAAMyC,UAAY,EAClBzC,EAAM2C,eAAiB,EAEvBpU,EAAOD,QAAU0R,G,gBCzLjB,MAAMa,EAAc,EAAQ,GACtBrO,EAAQ,EAAQ,GAEtB,MAAM8C,UAAauL,EAIf,OAAOhQ,EAASiF,GACZM,MAAMF,SAENhE,KAAKsJ,SAAW3K,EAAQW,OACxBU,KAAK6I,OAASlK,EAAQsF,KACtBjE,KAAKmT,aAAe,KACpBnT,KAAKgH,OAASpD,EACd5D,KAAK8G,SAAWlD,EAAKlF,OAMzB,YACIwF,MAAMwB,YAEN1F,KAAKsJ,SAAW,KAChBtJ,KAAK6I,OAAS,KACd7I,KAAKmT,aAAe,KACpBnT,KAAKgH,OAAS,KACdhH,KAAK8G,SAAW,KAMpB,eACI,OAAO9G,KAAKsJ,SAMhB,eACI,OAAOtJ,KAAK8G,SAMhB,eAAetH,EAAa,MACxBQ,KAAKmT,aAAe3T,EAMxB,iBACI,OAAOQ,KAAKmT,aAGhB,gBACI,OAAO,KAGX,sBACI,MAAMjM,EAAalH,KAAKR,YAAcQ,KAAKR,WAAW0H,YAAc,GAC9D6E,EAAQ7E,EAAWrE,QAAQ7C,MAEjC,OAAI+L,EAAQ,EACD7E,EAAW6E,EAAQ,GAGvB,KAGX,6BACI,MAAM7E,EAAalH,KAAKR,YAAcQ,KAAKR,WAAW0H,YAAc,GAC9D6E,EAAQ7E,EAAWrE,QAAQ7C,MAEjC,GAAI+L,EAAQ,EACR,IAAK,IAAIzP,EAAIyP,EAAQ,EAAGzP,GAAK,EAAGA,IAC5B,GAAI4K,EAAW5K,GAAGgI,WAAalB,EAAKmB,aAChC,OAAO2C,EAAW5K,GAK9B,OAAO,KAGX,kBACI,MAAM4K,EAAalH,KAAKR,YAAcQ,KAAKR,WAAW0H,YAAc,GAC9D6E,EAAQ7E,EAAWrE,QAAQ7C,MAEjC,OAAOkH,EAAW6E,EAAQ,IAAM,KAGpC,yBACI,MAAM7E,EAAalH,KAAKR,YAAcQ,KAAKR,WAAW0H,YAAc,GAC9D6E,EAAQ7E,EAAWrE,QAAQ7C,MAEjC,GAAI+L,EAAQ7E,EAAW/G,OAAS,EAC5B,IAAK,IAAI7D,EAAIyP,EAAQ,EAAGoC,EAAMjH,EAAW/G,OAAQ7D,EAAI6R,EAAK7R,IACtD,GAAI4K,EAAW5K,GAAGgI,WAAalB,EAAKmB,aAChC,OAAO2C,EAAW5K,GAK9B,OAAO,KAGX,oBACI,OAAOgE,EAAMtB,YAAYgB,KAAK8G,WAAa,KAG/C,iBACI,MAAO,GAGX,gBACI,OAAO,EAGX,SACI,OAAK9G,KAAKR,YAAeQ,KAAKR,WAAWqM,YAElC7L,KAAKR,WAAWqM,YAAY7L,MAF0BA,MAOrEoD,EAAKmB,aAAe,EACpBnB,EAAKgE,UAAY,EACjBhE,EAAKgQ,mBAAqB,EAC1BhQ,EAAKiQ,4BAA8B,EACnCjQ,EAAKkQ,aAAe,EACpBlQ,EAAKmQ,cAAgB,EACrBnQ,EAAKoQ,mBAAqB,GAC1BpQ,EAAKiH,uBAAyB,GAE9BhO,EAAOD,QAAUgH,G,gBCxIjB,MAAMuL,EAAc,EAAQ,GACtBlL,EAAO,EAAQ,GACfnD,EAAQ,EAAQ,GAEtB,MAAMmT,UAAiB9E,EACnB,YAAYjQ,GACRwF,QAEAlE,KAAK8G,SAAWpI,EAChBsB,KAAK0T,YAAcjQ,EAAKpC,aAAa3C,GAErCsB,KAAK2T,WAAa,SAClB3T,KAAK4T,WAAa,GAClB5T,KAAK6T,OAAS,GACd7T,KAAK8T,WAAa,IAClB9T,KAAK+T,SAAW,GAChB/T,KAAKgU,OAAS,GAEdhU,KAAKiU,WAAa,GAClBjU,KAAKkU,eAAiB,GACtBlU,KAAKmU,aAAe,GACpBnU,KAAKoU,WAAa,GAClBpU,KAAKqU,cAAe,EAMxB,iBACI,MAAO,CACHC,SAAUtU,KAAK2T,WACfY,SAAUvU,KAAK4T,WACfY,KAAMxU,KAAK6T,OACXY,SAAUzU,KAAK8T,WACfY,OAAQ1U,KAAK+T,SACbY,KAAM3U,KAAKgU,QAOnB,6BAA6BzW,GACzB,IAAKA,GAA0B,iBAAVA,EAAoB,OAIzC,GAFAyC,KAAK4U,oBAEA,6BAA6BC,KAAKtX,GAEnC,GAA2B,IAAvBA,EAAMsF,QAAQ,KAEdtF,EAAQ,GAAGyC,KAAK8C,SAASvF,SACtB,GAA2B,IAAvBA,EAAMsF,QAAQ,KAErBtF,EAAQ,GAAGyC,KAAK8C,SAAS9C,KAAK8T,aAAa9T,KAAK+T,WAAWxW,QACxD,CAEH,IAAIkX,EAAWzU,KAAK8T,WAAWxS,MAAM,KACrCmT,EAASpU,MACToU,EAAWA,EAASxM,KAAK,KAEzB1K,EAAQ,GAAGyC,KAAK8C,SAAS2R,KAAYlX,IAI7C,MAAM,SACF+W,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,KAAEG,EAAI,OAAED,EAAM,SAAED,GACxChB,EAASvJ,QAAQ3M,GACfuX,EAAY9U,KAAK+U,iBAEvB/U,KAAK2T,WAAaW,GAAYtU,KAAK2T,WACnC3T,KAAK4T,WAAaW,GAAYvU,KAAK4T,WACnC5T,KAAK6T,OAASW,GAAQ,GACtBxU,KAAK8T,WAAaW,GAAY,IAC9BzU,KAAK+T,SAAWW,GAAU,GAC1B1U,KAAKgU,OAASW,GAAQ,GAEtB3U,KAAKgV,iBACLhV,KAAKiV,WAAWH,GAMpB,iBACI9U,KAAK0G,UAAU,iBAAkB,CAC7B+I,MAAO,CACHyF,KAAMlV,KAAKkV,QAQvB,WAAWJ,GACP,IAAK9U,KAAKqU,aAAc,OAAO,EAE/B,MAAMzV,EAAS0B,EAAMrB,UAAUe,KAAK8G,UAEpC,GAAI9G,KAAK2T,aAAemB,EAAUR,UAAYtU,KAAK4T,aAAekB,EAAUP,UAAYvU,KAAK6T,SAAWiB,EAAUN,KAAM,CAEpH,MAAMW,EAAUnV,KAAKkV,KAiBrB,OAdAlV,KAAK2T,WAAamB,EAAUR,SAC5BtU,KAAK4T,WAAakB,EAAUP,SAC5BvU,KAAK6T,OAASiB,EAAUN,KACxBxU,KAAK8T,WAAagB,EAAUL,SAC5BzU,KAAK+T,SAAWe,EAAUJ,OAC1B1U,KAAKgU,OAASc,EAAUH,KAExB/V,EAAO8H,UAAU,mBAAoB,CACjC+I,MAAO,CACH/M,IAAKyS,EACLlR,KAAM,WAIP,EAGX,GAAIjE,KAAK8T,aAAegB,EAAUL,UAAYzU,KAAK+T,WAAae,EAAUJ,OAAQ,CAC9E,MAAMU,EAAaxW,EAAOyW,cAAcC,cAActV,KAAK8T,YAE3D,GAAIsB,EAAY,CACZ,IAAIG,EAAQ,CAAC,YAAa,aAAaC,mBAAmBxV,KAAKkV,OAC3DlV,KAAK+T,UAAUwB,EAAMnV,KAAK,UAAUoV,mBAAmBxV,KAAK+T,WAC5D/T,KAAKgU,QAAQuB,EAAMnV,KAAK,QAAQoV,mBAAmBxV,KAAKgU,SAE5DuB,EAAQ,IAAMA,EAAMtN,KAAK,KAEzB,MAAMwN,EAAa7W,EAAOyW,cAAcK,aAAaN,GAAc,YAAc,aAejF,OAdA5L,GAAGiM,GAAY,CACX/S,IAAK,GAAG0S,IAAaG,MAGN,cAAfE,IAEAzV,KAAK2T,WAAamB,EAAUR,SAC5BtU,KAAK4T,WAAakB,EAAUP,SAC5BvU,KAAK6T,OAASiB,EAAUN,KACxBxU,KAAK8T,WAAagB,EAAUL,SAC5BzU,KAAK+T,SAAWe,EAAUJ,OAC1B1U,KAAKgU,OAASc,EAAUH,OAGrB,EACJ,CACH,MAAMQ,EAAUnV,KAAKkV,KAiBrB,OAdAlV,KAAK2T,WAAamB,EAAUR,SAC5BtU,KAAK4T,WAAakB,EAAUP,SAC5BvU,KAAK6T,OAASiB,EAAUN,KACxBxU,KAAK8T,WAAagB,EAAUL,SAC5BzU,KAAK+T,SAAWe,EAAUJ,OAC1B1U,KAAKgU,OAASc,EAAUH,KAExB/V,EAAO8H,UAAU,eAAgB,CAC7B+I,MAAO,CACH/M,IAAKyS,EACLlR,KAAM,WAIP,GAIf,OAAO,EAMX,OAAOvB,GACHA,EAAMe,EAAKhB,YAAYC,EAAK1C,KAAK8C,QAAQ,GAEzC,MAAMlE,EAAS0B,EAAMrB,UAAUe,KAAK8G,UAC9B6O,EAAWlC,EAASvJ,QAAQxH,GAElC,GAAIiT,EAASrB,WAAatU,KAAK2T,YAAcgC,EAASpB,WAAavU,KAAK4T,YAAc+B,EAASnB,OAASxU,KAAK6T,OAEzG,OAAOjV,EAAO8H,UAAU,mBAAoB,CACxC+I,MAAO,CACH/M,MACAuB,KAAM,UAKlB,MAAMmR,EAAaxW,EAAOyW,cAAcC,cAAcK,EAASlB,UAAY,KAE3E,GAAIW,EAAY,CACZ,IAAIG,EAAQ,CAAC,YAAa,aAAaC,mBAAmB9S,IACtD1C,KAAK+T,UAAUwB,EAAMnV,KAAK,UAAUoV,mBAAmBG,EAASjB,QAAU,KAC1E1U,KAAKgU,QAAQuB,EAAMnV,KAAK,QAAQoV,mBAAmBG,EAAShB,MAAQ,KAExEY,EAAQ,IAAMA,EAAMtN,KAAK,KAEzB,MAAMwN,EAAa7W,EAAOyW,cAAcK,aAAaN,GAAc,YAAc,aACjF5L,GAAGiM,GAAY,CACX/S,IAAK,GAAG0S,IAAaG,WAGzB3W,EAAO8H,UAAU,eAAgB,CAC7B+I,MAAO,CACH/M,MACAuB,KAAM,UAStB,QAAQvB,EAAM,IACV,MAAM,SACF4R,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,SAAEC,EAAQ,KAAEE,EAAI,OAAED,GAC1CjB,EAASvJ,QAAQxH,GAErB1C,KAAK2T,WAAaW,GAAY,SAC9BtU,KAAK4T,WAAaW,GAAY,GAC9BvU,KAAK6T,OAASW,GAAQ,GACtBxU,KAAK8T,WAAaW,GAAY,IAC9BzU,KAAK+T,SAAWW,GAAU,GAC1B1U,KAAKgU,OAASW,GAAQ,GAM1B,eAAeO,EAAO,IAClBA,EAAOA,EAAKpL,OAGZ,IAAIwK,EAAW,kBAAkBlL,KAAK8L,GAClCZ,IACAA,EAAWA,EAAS,GAAGtT,cACvBkU,EAAOA,EAAKU,MAAMtB,EAASnU,SAIJ,IAAvB+U,EAAKrS,QAAQ,QACbqS,EAAOA,EAAKU,MAAM,IAGtB,IAGIC,EAHAC,EAAY,EACZC,GAAW,EACXC,GAAQ,EAEZ,IAAK,IAAI1Z,EAAI,EAAG6R,EAAM+G,EAAK/U,OAAQ7D,EAAI6R,EAAK7R,IAAK,CAC7C,MAAM2Z,EAAOf,EAAK5Y,GAalB,GAZI,wBAAwBuG,QAAQoT,IAAS,GAExB,IAAbF,IAAgBA,EAAUzZ,GACvB,MAAMuG,QAAQoT,IAAS,IAEb,IAAbF,IAAgBA,EAAUzZ,GAC9B0Z,GAAQ,GACQ,MAATC,IACPH,EAAYxZ,EAAI,EAChByZ,GAAW,GAGXC,EAAO,OAGE,IAAbD,GACAF,EAAOX,EAAKU,MAAME,GAClBZ,EAAO,KAEPW,EAAOX,EAAKU,MAAME,EAAWC,GAC7Bb,EAAOA,EAAKU,MAAMG,IAKtB,IAAIvB,EAAO,WAAWpL,KAAKyM,GACvBrB,GACAA,EAAOA,EAAK,GACZqB,EAAOA,EAAKD,MAAM,EAAGC,EAAK1V,OAASqU,EAAKrU,QAE3B,MAATqU,IAAcA,EAAOA,EAAKoB,MAAM,KAEpCpB,EAAO,GAIX,IAAK,IAAIlY,EAAI,EAAG6R,EAAM0H,EAAK1V,OAAQ7D,EAAI6R,EAAK7R,IAAK,CAC7C,MAAM2Z,EAAOJ,EAAKvZ,GACD2Z,GAAQ,KAAOA,GAAQ,KAASA,GAAQ,KAAOA,GAAQ,KAASA,GAAQ,KAAOA,GAAQ,KAAQ,OAAOpT,QAAQoT,IAAS,GAAKA,EAAKC,WAAW,GAAK,MAI9JL,EAAOA,EAAKD,MAAM,EAAGtZ,GAErB4Y,EAAO,IAAIW,EAAKD,MAAMtZ,KAAK4Y,KAGnC,MAAMX,EAAWsB,EAAK1V,OAAS,IAAM,GAAK0V,EAAK7U,cAG/C,IAAI2T,EAeAD,EAWAD,EAzBA0B,GAAe,EACfC,GAAa,EACjB,IAAK,IAAI9Z,EAAI,EAAG6R,EAAM+G,EAAK/U,OAAQ7D,EAAI6R,EAAK7R,IAAK,CAC7C,GAAgB,MAAZ4Y,EAAK5Y,GAAY,CACjBqY,EAAOO,EAAKU,MAAMtZ,GAClB8Z,EAAY9Z,EACZ,MACmB,MAAZ4Y,EAAK5Y,KAA+B,IAAjB6Z,IAC1BA,EAAc7Z,GAGtBqY,EAAgB,MAATA,EAAe,GAAKA,GAIN,IAAjBwB,IAEIzB,GADe,IAAf0B,EACSlB,EAAKU,MAAMO,GAEXjB,EAAKU,MAAMO,EAAaC,IAGzC1B,EAAoB,MAAXA,EAAiB,GAAKA,EAI/B,MAAM2B,GAA8B,IAAjBF,KAAsC,IAAfC,GAAoBD,EAAcC,GAAaD,EAAcC,EAUvG,OATIC,EAAa,EACb5B,EAAWS,EAAKU,MAAM,EAAGS,IACF,IAAhBA,GAAqBnB,EAAK/U,OAAS,IAC1CsU,EAAWS,GAEXX,IAAaE,IACbA,EAAW,KAGR,CACHH,WACAC,WACAC,OACAC,WACAE,OACAD,UAOR,sBAAsBnX,GAClByC,KAAKqU,cAAe,EACpBrU,KAAKc,QAAQvD,GACbyC,KAAKqU,cAAe,EAMxB,mBACSrU,KAAKqU,eAEVrU,KAAKiU,WAAajU,KAAKgU,OACvBhU,KAAKkU,eAAiBlU,KAAK8T,WAC3B9T,KAAKmU,aAAenU,KAAK+T,SACzB/T,KAAKoU,WAAapU,KAAKkV,MAM3B,eAAeoB,GACNtW,KAAKqU,gBAELiC,GAAuBtW,KAAKkU,iBAAmBlU,KAAK8T,YAAc9T,KAAKmU,eAAiBnU,KAAK+T,WAAc/T,KAAKiU,aAAejU,KAAKgU,QACrIhU,KAAK0G,UAAU,aAAc,CACzB+I,MAAO,CACH8G,OAAQvW,KAAKoU,WACboC,OAAQxW,KAAKkV,QAKzBlV,KAAKiU,WAAa,GAClBjU,KAAKkU,eAAiB,GACtBlU,KAAKmU,aAAe,GACpBnU,KAAKoU,WAAa,IAMtB,eACI,OAAOpU,KAAK2T,WAGhB,aAAapW,GACT,IAAKA,GAA0B,iBAAVA,EAAoB,OAEzC,MAAMoY,EAAW,wBAAwBvM,KAAK7L,GACxCuX,EAAY9U,KAAK+U,iBAEnBY,IACoB,MAAhBA,EAAS,GACT3V,KAAK2T,WAAapW,EAElByC,KAAK2T,WAAgBgC,EAAS,GAAZ,IAGlB3V,KAAKiV,WAAWH,IAAY9U,KAAKyW,kBAI7C,WACI,OAAQzW,KAAK4T,YAAc,KAAO5T,KAAK6T,OAAS,IAAM7T,KAAK6T,OAAS,IAGxE,SAAStW,GACL,IAAKA,GAA0B,iBAAVA,EAAoB,OAEzC,MAAM,SAACgX,EAAQ,KAAEC,GAAQf,EAASvJ,QAAQ,KAAK3M,GACzCuX,EAAY9U,KAAK+U,iBAEvB/U,KAAK4T,WAAaW,GAAYvU,KAAK4T,WACnC5T,KAAK6T,OAASW,GAAQ,GAElBxU,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,eACI,OAAOzW,KAAK4T,WAGhB,aAAarW,GACT,IAAKA,GAA0B,iBAAVA,EAAoB,OAEzC,MAAM,SAACgX,GAAYd,EAASvJ,QAAQ,KAAK3M,GACnCuX,EAAY9U,KAAK+U,iBAEvB/U,KAAK4T,WAAaW,GAAYvU,KAAK4T,WAE/B5T,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,WACI,OAAOzW,KAAK6T,OAGhB,SAAStW,GAGL,GAAqB,iBAFrBA,GAASA,KAEyBmZ,SAASnZ,IAAUA,GAAS,EAAG,OAEjE,MAAMiX,EAAiB,KAAVjX,EAAe,GAAKA,EAAQ,GACnCuX,EAAY9U,KAAK+U,iBAEvB/U,KAAK6T,OAASW,EAEVxU,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,aACI,MAAO,GAAGzW,KAAK2T,eAAe3T,KAAK6V,OAGvC,WAAWtY,GACP,IAAKA,GAA0B,iBAAVA,EAAoB,OACzC,IAAK,6BAA6BsX,KAAKtX,GAAQ,OAE/C,MAAM,SAAC+W,EAAQ,SAAEC,EAAQ,KAAEC,GAAQf,EAASvJ,QAAQ3M,GAC9CuX,EAAY9U,KAAK+U,iBAEvB/U,KAAK2T,WAAaW,GAAYtU,KAAK2T,WACnC3T,KAAK4T,WAAaW,GAAYvU,KAAK4T,WACnC5T,KAAK6T,OAASW,GAAQ,GAElBxU,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,eACI,OAAOzW,KAAK8T,WAGhB,aAAavW,GACT,GAAqB,iBAAVA,EAAoB,OAE/B,MAAMuX,EAAY9U,KAAK+U,iBAEvB,GAAKxX,GAAmB,MAAVA,EAEP,CACc,MAAbA,EAAM,KAAYA,EAAQ,IAAIA,GAElC,MAAM,SAACkX,GAAYhB,EAASvJ,QAAQ,gBAAgB3M,GAEpDyC,KAAK8T,WAAaW,GAAY,SAN9BzU,KAAK8T,WAAa,IASlB9T,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,aACI,OAAOzW,KAAK+T,SAGhB,WAAWxW,GACP,GAAqB,iBAAVA,EAAoB,OAE/B,MAAMuX,EAAY9U,KAAK+U,iBAEvB,GAAKxX,GAAmB,MAAVA,EAEP,CACc,MAAbA,EAAM,KAAYA,EAAQ,IAAIA,GAElC,MAAM,OAACmX,GAAUjB,EAASvJ,QAAQ,gBAAgB3M,GAElDyC,KAAK+T,SAAWW,GAAU,QAN1B1U,KAAK+T,SAAW,GAShB/T,KAAKiV,WAAWH,IAAY9U,KAAKyW,iBAGzC,WACI,OAAOzW,KAAKgU,OAGhB,SAASzW,GACL,GAAqB,iBAAVA,EAAX,CAIA,GAFAyC,KAAK4U,mBAEArX,GAAmB,MAAVA,EAEP,CACc,MAAbA,EAAM,KAAYA,EAAQ,IAAIA,GAElC,MAAM,KAACoX,GAAQlB,EAASvJ,QAAQ,gBAAgB3M,GAEhDyC,KAAKgU,OAASW,GAAQ,QANtB3U,KAAKgU,OAAS,GASlBhU,KAAKgV,iBACLhV,KAAKyW,kBAGT,WACI,MAAO,GAAGzW,KAAK2T,eAAe3T,KAAK6V,OAAO7V,KAAK8T,aAAa9T,KAAK+T,WAAW/T,KAAKgU,SAGrF,SAASzW,GACLyC,KAAK2W,6BAA6BpZ,GAClCyC,KAAKyW,iBAGT,SACI,MAAM7X,EAAS0B,EAAMrB,UAAUe,KAAK8G,UACpC,IAAIyO,EAAQ,CAAC,YAAa,aAAaC,mBAAmBxV,KAAKkV,OAC3DlV,KAAK+T,UAAUwB,EAAMnV,KAAK,UAAUoV,mBAAmBxV,KAAK+T,WAC5D/T,KAAKgU,QAAQuB,EAAMnV,KAAK,QAAQoV,mBAAmBxV,KAAKgU,SAE5DuB,EAAQ,IAAMA,EAAMtN,KAAK,KAEzB,MAAMwN,EAAa7W,EAAOyW,cAAcK,aAAa1V,KAAK0T,aAAe,YAAc,aACvFlK,GAAGiM,GAAY,CACX/S,IAAK,GAAG1C,KAAK0T,cAAc6B,MAInC,QAAQhY,GAEJyC,KAAK2W,6BAA6BpZ,GAGtC,WACI,OAAOyC,KAAKkV,MAIpB7Y,EAAOD,QAAUqX,G,gBC3kBjB,MAAM9E,EAAc,EAAQ,GACtBiI,EAAO,EAAQ,IACfxT,EAAO,EAAQ,GACfO,EAAU,EAAQ,GAClBkT,EAAW,EAAQ,IACnBC,EAAU,EAAQ,IAClBrT,EAAO,EAAQ,GACfnD,EAAQ,EAAQ,GAChByW,EAAI,EAAQ,IACZC,EAAQ,EAAQ,IAChBC,EAAQ,EAAQ,IAChBC,EAAW,EAAQ,IACnBC,EAAQ,EAAQ,IAChBC,EAAS,EAAQ,IACjBC,EAAS,EAAQ,IACjBC,EAAS,EAAQ,IACjBC,EAAa,EAAQ,IACrBC,EAAc,EAAQ,IACtBC,EAAoB,EAAQ,IAC5BC,EAAS,EAAQ,IAEjBC,EAAkB,CACpBZ,IACAa,IAAKZ,EACLa,MAAOZ,EACPa,SAAUZ,EACVa,MAAOZ,EACPa,OAAQZ,EACRa,OAAQZ,EACRa,OAAQZ,EACR,eAAgBE,GAEdW,EAAmB,GACC,CACtB,cAAe,aAAc,cAAe,eAAgB,eAAgB,cAAe,SAAU,cAAe,OACpH,OAAQ,WAAY,YAAa,OACjC,SAAU,WAAY,iBAAkB,SAAU,OAAQ,QAAS,QAAS,SAAU,cAAe,qBAAsB,QAAS,cAAe,SAAU,SAAU,WACvK,4BAA6B,YAC7B,QAAS,SAAU,QAAS,cAAe,cAAe,QAAS,YACnE,MACA,SACA,KAAM,mBAAoB,YAAa,WAEvC,UAAW,QAAS,aAEN7V,QAAQzF,GAAQsb,EAAiBtb,GAAQA,GAC3D,IAAIub,EAA0B,GA6V9B/b,EAAOD,QA/UP,cAAuBuS,EACnB,YAAYjQ,EAAQI,GAChBoF,QAEA,MACMmU,EADS/X,EAAMT,YACEwY,SAAW,GAC5BC,EAAcD,EAAQC,YAC5BF,EAA0BC,EAAQE,iBAAmB,GAErDvY,KAAK8G,SAAWpI,EAChB,MAAM8C,EAAYiC,EAAKpC,aAAa3C,GAC9B8Z,EAAW/U,EAAKlC,YAAYC,GAG5BiX,EAAOzY,KAuCb,GAtCAA,KAAK0Y,mBAAqB,SAA0BC,EAAOC,GACvD,OAAO5B,EAAMhR,SAAS,CAClB9C,QAAS,MACT5D,OAAQ,KAAKmE,EAAKrC,QAClB8D,MAAO,GACPyT,QACAC,UACDH,EAAKzR,SAGZhH,KAAK8G,SAAWpI,EAChBsB,KAAKgH,OAAS,IAAI4P,EAAKlY,EAAQ,CAC3BuF,KAAM,UACNf,QAAS,OACTgC,MAAO,GACP2T,OAAO,EACPvZ,OAAQ,SACR4I,SAAU,IACXpJ,EAAWkB,MACdA,KAAK8Y,SAAW,IAAIpB,EAAOc,GAC3BxY,KAAK+Y,SAAW,KAGhB/Y,KAAKgZ,OAAShZ,KAAKuI,gBAAgB,CAC/BrF,QAAS,OACTgC,MAAO,GACP5F,OAAQ,KAAKmE,EAAKrC,QAClB6C,KAAMb,EAAKmQ,gBAEfvT,KAAKgZ,OAAOtO,eAAe1K,MAG3BA,KAAKiZ,OAASjZ,KAAKkZ,cAAc,QAGjClZ,KAAKgH,OAAOmS,KAAKzO,eAAe1K,KAAKgZ,QAGjB,WAAhBV,GAA4C,iBAAhBA,EAC5B,IACI,MAAMza,EAAsB,YAAhBya,EAA4B,eAAeE,EAAa,cAC9DY,EAAS5P,GAAG6P,eAAexb,GAC7Bub,GAAQpZ,KAAKsZ,iBAAiBC,YAAYH,GAChD,MAAO5O,KASjB,yBACI,OAAOxK,KAAK0Y,mBAGhB,eACI,OAAO1Y,KAAK8G,SAMhB,eACI,OAAO9G,KAAK8Y,SAAShZ,UAAUE,KAAKwZ,KAAK,GAM7C,uBACI,OAAOxZ,KAAK8Y,SAMhB,sBAEI,OADK9Y,KAAK+Y,WAAU/Y,KAAK+Y,SAAWzY,EAAMT,aACnCG,KAAK+Y,UAAY/Y,KAAK+Y,SAASV,SAAiD,aAAtCrY,KAAK+Y,SAASV,QAAQoB,YAM3E,sBAAsBlc,GAClByC,KAAK0Z,kBAAoBnc,EAM7B,UAAU8R,EAAW1Q,GACjBqB,KAAK2Z,gBAAgBjT,UAAU2I,EAAW1Q,GAM9C,gBAAgBA,EAASiF,GACrB,MAAMgW,EAAgBjb,EAAQuE,QACxBA,EAAU0W,EAAczY,cAC9B,IAAI0Y,EAAkB,KACtBjW,EAAOA,GAAQ5D,KAAKgH,OAEpB,MAAM8S,EAAmBnC,EAAgBzU,GACzC,OAAI4W,EACOA,EAAiB9T,SAASrH,EAASiF,IAEnCiW,EArInB,SAA4B3W,EAAS6W,GACjC,MAAMC,EAAuC,IAA3B9W,EAAQL,QAAQ,OAClC,OAAIkX,EACOC,EAAY7B,EAAiBjV,EAAQ0S,MAAM,IAAMuC,EAAiBjV,KAElE8W,GAAY7B,EAAiBjV,EAAQ0S,MAAM,IAgIrBqE,CAAmBL,EAAe5Z,KAAKka,mBAEhEvb,EAAQuE,QAAU,eAClBvE,EAAQuG,MAAQvG,EAAQuG,OAAS,GACjCvG,EAAQuG,MAAMgL,SAAW2J,EAClBrC,EAAYxR,SAASrH,EAASiF,IAC9BwU,EAAwBwB,IAE/Bjb,EAAQuE,QAAU,sBAClBvE,EAAQuG,MAAQvG,EAAQuG,OAAS,GACjCvG,EAAQwb,cAAgBP,EACjBnC,EAAkBzR,SAASrH,EAASiF,IACnCH,EAAKR,iBAAiBC,GAGvBS,EAAQqC,SAASrH,EAASiF,GAF1B2T,EAAWvR,SAASrH,EAASiF,GAS5C,iBAAiBjF,EAASiF,GACtB,OAAOiT,EAAS7Q,SAASrH,EAASiF,GAAQ5D,KAAKgH,QAMnD,gBAAgBrI,EAASiF,GACrB,OAAOkT,EAAQ9Q,SAASrH,EAASiF,GAAQ5D,KAAKgH,QAMlD,YAAYnG,GACR,GAAIA,GAAsB,iBAARA,EAAkB,CAChC,IAAIuZ,EAAQ,EACRC,EAAa,EACbC,EAAYzZ,EAAIgC,QAAQ,IAAKwX,GACjC,MAAME,EAAU,GAEhB,KAAOD,GAAa,GAAG,CACnB,MAAME,EAAe3Z,EAAI4Z,UAAUL,EAAOE,GACpCI,EAAW7Z,EAAI0F,OAAO+T,GAExB,mDAAmDzF,KAAK6F,KAExDH,EAAQna,KAAKoa,GACbJ,EAAQE,EAAY,GAGxBD,EAAaC,EAAY,EACzBA,EAAYzZ,EAAIgC,QAAQ,IAAKwX,GAIjCE,EAAQna,KAAKS,EAAI0F,OAAO6T,IAExBG,EAAQjY,QAAQ8W,GAAUpZ,KAAKoZ,OAASA,IAOhD,eACI,OAAOhW,EAAKmQ,cAGhB,sBACI,OAAOvT,KAAKgZ,OAGhB,WACI,OAAOhZ,KAAKgH,OAAOmS,KAGvB,eACI,MAAO,YAGX,WACI,OAAOnZ,KAAKiZ,OAGhB,kBACI,OAAO3Y,EAAMrB,UAAUe,KAAK8G,WAAa,KAG7C,UACI,OAAI9G,KAAK2a,YAAoB3a,KAAK2a,YAAYC,SAAS1F,KAEhD,GAGX,aACI,OAAOlV,KAAK8Y,SAAShZ,UAAUE,KAAKwZ,KAGxC,WAAWjc,GACFA,GAA0B,iBAAVA,GAErByC,KAAK8Y,SAAS+B,UAAUtd,EAAOyC,KAAKwZ,KAGxC,sBACI,OAAOxZ,KAAK0Z,kBAGhB,aACI,MAAkC,YAA3B1Z,KAAK0Z,kBAGhB,eAAe7S,GACX,GAAkB,iBAAPA,EAEX,OAAO7G,KAAKgH,OAAOgD,QAAQnD,IAAO,KAGtC,qBAAqB3D,GACjB,MAAuB,iBAAZA,EAA6B,GAEjClD,KAAKgH,OAAOqF,aAAanJ,GAGpC,uBAAuBqE,GACnB,MAAyB,iBAAdA,EAA+B,GAEnCvH,KAAKgH,OAAOsF,eAAe/E,GAGtC,kBAAkB1K,GACd,MAAoB,iBAATA,EAA0B,GAE9BmD,KAAKgH,OAAOwF,MAAM,UAAU3P,MAGvC,cAAc0P,GACV,GAAwB,iBAAbA,EAEX,OAAOvM,KAAKgH,OAAOwF,MAAMD,GAAU,IAAM,KAG7C,iBAAiBA,GACb,MAAwB,iBAAbA,EAA8B,GAElCvM,KAAKgH,OAAOwF,MAAMD,GAG7B,cAAcrJ,GACV,GAAuB,iBAAZA,IAEXA,EAAUA,EAAQ4G,QAGlB,OAAO9J,KAAKuI,gBAAgB,CACxBrF,UACA5D,OAAQ,KAAKmE,EAAKrC,UAI1B,gBAAgBzD,EAAIuF,GAEhB,OAAOlD,KAAKkZ,cAAchW,GAG9B,eAAeF,GAGX,OAFAA,EAAU,GAAKA,EAERhD,KAAK0I,iBAAiB,CACzB1F,UACA1D,OAAQ,KAAKmE,EAAKrC,UAI1B,gBAEI,OAAOpB,KAAK8a,gBAAgB,CACxBxb,OAAQ,KAAKmE,EAAKrC,UAI1B,yBACI,OAAOuC,EAAQqC,SAAS,CACpB9C,QAAS,mBACT5D,OAAQ,KAAKmE,EAAKrC,QAClBkD,SAAUlB,EAAKiH,wBAChBrK,KAAKgH,QAGZ,cAGI,OAAO,IAFQ1G,EAAMrB,UAAUe,KAAK8G,UAElBiH,aAGtB,iBAAiBsB,EAAWnC,EAASvO,GACjCqB,KAAK2Z,gBAAgBvM,iBAAiBiC,EAAWnC,EAASvO,GAG9D,oBAAoB0Q,EAAWnC,EAASoD,GACpCtQ,KAAK2Z,gBAAgBxM,oBAAoBkC,EAAWnC,EAASoD,GAGjE,cAAcuB,GACV7R,KAAK2Z,gBAAgBoB,cAAclJ,M,gBCvY3C,MAAM/D,EAAQ,EAAQ,GAWtBzR,EAAOD,QATP,cAA0B0R,EACtB,YAAYjR,EAAO,GAAI8B,EAAU,IAC7BuF,MAAM,CACFrH,UACG8B,O,gBCHf,MAAMqc,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,SAAS3X,EAAU4X,GACfjb,KAAKgE,OAAOiX,GAMhB5X,EAAU2C,SAAW,SAASiV,GAG1B,GAFe3a,EAAMT,YAEVgE,aAAaqX,sBAAuB,CAE3C,MAAMnX,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOiX,GACTlX,EAIf,OAAO,IAAIV,EAAU4X,IAGzB5X,EAAUnF,UAAYlB,OAAO8N,OAAO,GAAI,CAIpC,OAAOmQ,GACHjb,KAAKmb,WAAaF,GAMtB,YACIjb,KAAKmb,WAAa,KAClBnb,KAAKG,OAAS,GAMlB,YACIH,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaqX,uBAEpBxX,EAAK7B,IAAI7B,OAOjB,QAAQuH,EAAY,IAChBvH,KAAKG,OAAS,EAGdoH,GADAA,EAAYA,EAAUuC,QACEvC,EAAUjG,MAAM,OAAS,GAEjD,IAAK,MAAMmJ,KAAQlD,EACfvH,KAAKI,KAAKqK,GAGdzK,KAAKmb,cAMT,KAAKpP,GACD,OAAO/L,KAAK+L,IAGhB,SAASxE,GACL,MAAyB,iBAAdA,IAEyB,IAA7BvH,KAAK6C,QAAQ0E,IAGxB,OAAOqH,GACH,IAAIwM,GAAW,EAEf,IAAK,IAAI7T,KAAaqH,EACO,iBAAdrH,IAEXA,EAAYA,EAAUuC,OAElBvC,IAA0C,IAA7BvH,KAAK6C,QAAQ0E,KAC1BvH,KAAKI,KAAKmH,GACV6T,GAAW,IAIfA,GAAUpb,KAAKmb,cAGvB,UAAUvM,GACN,IAAIwM,GAAW,EAEf,IAAK,IAAI7T,KAAaqH,EAAM,CACxB,GAAyB,iBAAdrH,EAAwB,SAInC,GAFAA,EAAYA,EAAUuC,QAEjBvC,EAAW,SAEhB,MAAMwE,EAAQ/L,KAAK6C,QAAQ0E,GACvBwE,GAAS,IACT/L,KAAKgM,OAAOD,EAAO,GACnBqP,GAAW,GAIfA,GAAUpb,KAAKmb,cAGvB,OAAO5T,EAAW8T,GACd,GAAyB,iBAAd9T,EAAwB,OAAO,EAI1C,KAFAA,EAAYA,EAAUuC,QAEN,OAAO,EAEvB,MAAMwR,GAA4C,IAA7Btb,KAAK6C,QAAQ0E,GAClC,IAAIgU,EAASD,EAAe,MAAQ,SASpC,OARAC,GAAmB,IAAVF,EAAiB,OAAkB,IAAVA,EAAkB,SAAWE,EAEhD,QAAXA,EACAvb,KAAK6B,IAAI0F,GAETvH,KAAKqN,OAAO9F,IAGC,IAAV8T,IAA4B,IAAVA,EAAkBA,EAAQC,GAGvD,WACI,OAAOtb,KAAKiI,KAAK,QAIzB5L,EAAOD,QAAUiH,G,gBCxJjB,MAAMmY,EAAY,EAAQ,IACpB/X,EAAO,EAAQ,GACfuX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EA0BjB,MAAM1X,EACF,YAAY2X,GACRjb,KAAKgE,OAAOiX,GAMhB,gBAAgBA,GAGZ,GAFe3a,EAAMT,YAEVgE,aAAaqX,sBAAuB,CAE3C,MAAMnX,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOiX,GACTlX,EAIf,OAAO,IAAIT,EAAM2X,GAMrB,OAAOA,GACHjb,KAAKmb,WAAaF,GAAY,SAC9Bjb,KAAKyb,sBAAuB,EAMhC,YACIzb,KAAKmb,WAAa,KAClBnb,KAAKyb,sBAAuB,EAE5BD,EAAUlZ,QAAQzF,IACdmD,KAAK,KAAKnD,QAAU6P,IAO5B,YACI1M,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaqX,uBAEpBxX,EAAK7B,IAAI7B,MAOjB,gBACSA,KAAKyb,sBACNzb,KAAKmb,aAOb,cACI,MAAMO,EAAWF,EAAUrR,OAAOtN,GAAQmD,KAAK,KAAKnD,IAASuC,IAAIvC,GAAQ,GAAG4G,EAAK7C,OAAO/D,MAASmD,KAAK,KAAOnD,MAASoL,KAAK,KAAK6B,OAChI,OAAO4R,EAAcA,EAAH,IAAiB,GAGvC,YAAYlU,GACR,GAAyB,iBAAdA,EAAwB,OAKnC,MAAMmU,EAtGd,SAAenU,GACX,MAAMmU,EAAQ,GAiBd,OAfInU,IAEAA,GADAA,EAAY/D,EAAKV,cAAcyE,IACT1G,QAAQ,iBAAkBC,GAAOA,EAAID,QAAQ,MAAO,YAChEQ,MAAM,KAAKgB,QAAQsZ,IAEzB,KADAA,EAAOA,EAAK9R,QACD,OAEX,MAAMxI,EAAQsa,EAAK/Y,QAAQ,KAC3B,IAAe,IAAXvB,EAAc,OAElB,MAAMzE,EAAO4G,EAAKxC,QAAQ2a,EAAKrV,OAAO,EAAGjF,GAAOwI,QAChD6R,EAAM9e,GAAQ+e,EAAKrV,OAAOjF,EAAQ,GAAGR,QAAQ,aAAc,KAAKgJ,SAIjE6R,EAoFWpR,CAHd/C,EAAYA,EAAU1G,QAAQ,KAAM,MAKpCd,KAAKyb,sBAAuB,EAC5B,IAAK,MAAM5e,KAAQ2e,EACfxb,KAAKnD,GAAQ8e,EAAM9e,GAEvBmD,KAAKyb,sBAAuB,EAC5Bzb,KAAK6b,gBAGT,iBAAiBhf,GACb,MAAoB,iBAATA,EAA0B,GAG9BmD,KADPnD,EAAO4G,EAAKxC,QAAQpE,KACC,IAO7B,MAAMif,EAAa,GACnBN,EAAUlZ,QAAQzF,IACdif,EAAWjf,GAAQ,CACf,MACI,OAAOmD,KAAK,KAAKnD,IAAW,IAEhC,IAAIU,GACA,MAAMqC,EAASU,EAAMT,YACfiN,EAAW9M,KAAK,KAAKnD,IAC3BU,OAAkBmP,IAAVnP,EAAsB,GAAKA,OAAQmP,IAG9B9M,EAAOiE,aAAakY,kBAAoBxe,EAAM4C,OAASP,EAAOiE,aAAakY,mBACpF5Z,QAAQoL,KAAK,aAAa1Q,iDAAoD+C,EAAOiE,aAAakY,oBAClGxe,OAAQmP,GAGZ1M,KAAK,KAAKnD,GAAUU,EAChBuP,IAAavP,GAAOyC,KAAK6b,oBAIzC7e,OAAOgf,iBAAiB1Y,EAAMpF,UAAW4d,GAEzCzf,EAAOD,QAAUkH,G,gBC7JjB,MAAM0X,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAMzX,EACF,YAAY8E,EAAS4S,GACjBjb,KAAKgE,OAAOqE,EAAS4S,GAMzB,gBAAgB5S,EAAS4S,GAGrB,GAFe3a,EAAMT,YAEVgE,aAAaqX,sBAAuB,CAE3C,MAAMnX,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOqE,EAAS4S,GAClBlX,EAIf,OAAO,IAAIR,EAAU8E,EAAS4S,GAMlC,OAAO5S,EAAS4S,GACZjb,KAAKic,UAAY5T,EACjBrI,KAAKmb,WAAaF,EAClBjb,KAAKkc,MAAQ,GACblc,KAAKmc,OAAS,GAEdnc,KAAKyG,gBAMT,YACIzG,KAAKic,UAAY,KACjBjc,KAAKmb,WAAa,KAClBnb,KAAKkc,MAAQ,KACblc,KAAKmc,OAAS,KAMlB,YACInc,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaqX,uBAEpBxX,EAAK7B,IAAI7B,MAOjB,WACI,OAAOA,KAAKmc,OAMhB,IAAItf,EAAMU,GACN,MAAM8K,EAAUrI,KAAKic,UACf7c,EAAMY,KAAKkc,MAEjB,GAAa,OAATrf,EACAuC,EAAIyH,GAAKtJ,OACN,GAAa,UAATV,GAAyC,iBAApBwL,EAAQnF,SAAuC,cAATrG,EAClEwL,EAAQd,UAAYhK,OACjB,GAAa,UAATV,EACPwL,EAAQZ,MAAMC,QAAUnK,OACrB,GAA8B,IAA1BV,EAAKgG,QAAQ,SAAgB,CACpC,MAAMyD,EAAc7C,EAAKxC,QAAQpE,EAAK0J,OAAO,IAC7C8B,EAAQT,QAAQtB,GAAe/I,MAC5B,CACH,MAAMqC,EAASU,EAAMT,YAGA,iBAAVtC,GAAsBqC,EAAOiE,aAAauY,iBAAmB7e,EAAM4C,OAASP,EAAOiE,aAAauY,kBACvGja,QAAQoL,KAAK,aAAa1Q,iDAAoD+C,EAAOiE,aAAauY,mBAClG7e,EAAQ,IAGZ6B,EAAIvC,GAAQU,EAGE,UAATV,GAA6B,WAATA,GAA0C,WAApBwL,EAAQnF,UAAwBmF,EAAQgU,SACnFhU,EAAQgU,OAAOxf,GAAQU,GAI3ByC,KAAKmb,aAGTnb,KAAKyG,gBAMT,IAAI5J,GACA,MAAMwL,EAAUrI,KAAKic,UACf7c,EAAMY,KAAKkc,MAEjB,GAAa,OAATrf,EACA,OAAOuC,EAAIyH,IAAM,GACnB,GAAa,UAAThK,EACF,OAAOwL,EAAQd,UACZ,GAAa,UAAT1K,EACP,OAAOwL,EAAQZ,MAAMC,QAClB,GAA8B,IAA1B7K,EAAKgG,QAAQ,SAAgB,CACpC,MAAMyD,EAAc7C,EAAKxC,QAAQpE,EAAK0J,OAAO,IAC7C,IAAK8B,EAAQvC,WAAY,OACzB,OAAOuC,EAAQT,QAAQtB,GAEvB,OAAOlH,EAAIvC,GAOnB,IAAIA,GACA,MAAMwL,EAAUrI,KAAKic,UACf7c,EAAMY,KAAKkc,MAEjB,GAAa,OAATrf,EACA,QAASwL,EAAQxB,GACd,GAAa,UAAThK,EACP,QAASwL,EAAQd,UACd,GAAa,UAAT1K,EACP,QAASwL,EAAQZ,MAAMC,QACpB,GAA8B,IAA1B7K,EAAKgG,QAAQ,SAAgB,CACpC,MAAMyD,EAAc7C,EAAKxC,QAAQpE,EAAK0J,OAAO,IAC7C,QAAK8B,EAAQvC,YACN9I,OAAOkB,UAAUC,eAAe1B,KAAK4L,EAAQT,QAAStB,GAE7D,OAAOtJ,OAAOkB,UAAUC,eAAe1B,KAAK2C,EAAKvC,GAOzD,OAAOA,GACH,MAAMwL,EAAUrI,KAAKic,UACf7c,EAAMY,KAAKkc,MAEjB,GAAa,OAATrf,EACAwL,EAAQxB,GAAK,QACV,GAAa,UAAThK,GAA6B,UAATA,EAC3BmD,KAAK6J,IAAIhN,EAAM,SACZ,GAA8B,IAA1BA,EAAKgG,QAAQ,SAAgB,CACpC,MAAMyD,EAAc7C,EAAKxC,QAAQpE,EAAK0J,OAAO,IACzC8B,EAAQvC,mBAAmBuC,EAAQT,QAAQtB,eAGxClH,EAAIvC,GACXmD,KAAKmb,aAGTnb,KAAKyG,gBAMT,gBACI,MAAMrH,EAAMY,KAAKkc,MACXjR,EAAOjL,KAAKmc,OAGlBlR,EAAK3I,QAAQmI,WACFQ,EAAKR,EAAK5N,eAEdoO,EAAKO,aACLP,EAAKxD,MACZwD,EAAK9K,OAAS,EAGdnD,OAAOmC,KAAKC,GAAKkD,QAAQzF,IACrB,GAAa,OAATA,EAAe,CACf,MAAM4N,EAAO,CAAC5N,OAAMU,MAAO6B,EAAIvC,IAE/BoO,EAAK7K,KAAKqK,GACVQ,EAAKpO,GAAQ4N,KAIrB,MAAM6R,EAAUtc,KAAK7C,IAAI,MACnBof,EAAavc,KAAK7C,IAAI,SACtBqf,EAAaxc,KAAK7C,IAAI,SAC5B,GAAImf,EAAS,CACT,MAAM7R,EAAO,CAAC5N,KAAM,KAAMU,MAAO+e,GACjCrR,EAAK7K,KAAKqK,GACVQ,EAAKpE,GAAK4D,EAEd,GAAI8R,EAAY,CACZ,MAAM9R,EAAO,CAAC5N,KAAM,QAASU,MAAOgf,GACpCtR,EAAK7K,KAAKqK,GACVQ,EAAKO,MAAQf,EAEjB,GAAI+R,EAAY,CACZ,MAAM/R,EAAO,CAAC5N,KAAM,QAASU,MAAOif,GACpCvR,EAAK7K,KAAKqK,GACVQ,EAAKxD,MAAQgD,IAKzBpO,EAAOD,QAAUmH,G,gBCjOjB,MAAMH,EAAO,EAAQ,GACfK,EAAO,EAAQ,GACfuX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAMnE,UAAiBzT,EAInB,gBAAgBzE,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAa4Y,iBAAkB,CAEtC,MAAM1Y,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI8S,EAASlY,EAASiF,GAMjC,OAAOjF,EAASiF,GACZjF,EAAQsF,KAAO,OAEfC,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAK0c,UAAY/d,EAAQqE,SAAW,GAMxC,YACIkB,MAAMwB,YAEN1F,KAAK0c,UAAY,GAMrB,YACI1c,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAa4Y,kBAEpB/Y,EAAK7B,IAAI7B,MAOjB,wBACQA,KAAKR,YAAYQ,KAAKR,WAAWkH,UAAU,sBAMnD,gBACI,MAAO,CACHpH,OAAQU,KAAKsJ,SACb5K,OAAQsB,KAAK8G,SACb7C,KAAMjE,KAAK6I,OACX7F,QAAShD,KAAK0c,WAOtB,eACI,MAAO,QAGX,eACI,OAAOtZ,EAAKgE,UAGhB,gBACI,OAAOpH,KAAKqH,YAGhB,cAAc9J,GACVyC,KAAKqH,YAAc9J,EAGvB,kBACI,OAAOyC,KAAK0c,UAGhB,gBAAgBnf,GACZA,GAAS,GAETyC,KAAK0c,UAAYnf,EACjByC,KAAKoG,wBAGT,WACI,OAAOpG,KAAKqH,YAGhB,SAAS9J,GACLyC,KAAKqH,YAAc9J,EAGvB,YACI,OAAOyC,KAAKsI,cAAcI,iBAAiB,CACvC1F,QAAShD,KAAK0c,UACdpd,OAAQ,KAAKmE,EAAKrC,WAK9B/E,EAAOD,QAAUya,G,gBC9HjB,MAAMzT,EAAO,EAAQ,GACfK,EAAO,EAAQ,GACfuX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAMlE,UAAgB1T,EAIlB,gBAAgBzE,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAa8Y,oBAAqB,CAEzC,MAAM5Y,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI+S,EAAQnY,EAASiF,GAMhC,OAAOjF,EAASiF,GACZjF,EAAQsF,KAAO,UAEfC,MAAMF,OAAOrF,EAASiF,GAM1B,YACI5D,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAa8Y,qBAEpBjZ,EAAK7B,IAAI7B,MAOjB,gBACI,MAAO,CACHV,OAAQU,KAAKsJ,SACb5K,OAAQsB,KAAK8G,SACb7C,KAAMjE,KAAK6I,QAOnB,eACI,MAAO,WAGX,eACI,OAAOzF,EAAKkQ,aAGhB,YACI,OAAOtT,KAAKsI,cAAcwS,gBAAgB,CACtCxb,OAAQ,KAAKmE,EAAKrC,WAK9B/E,EAAOD,QAAU0a,G,gBC/EjB,MAAMrT,EAAO,EAAQ,GACfnD,EAAQ,EAAQ,GAChBsc,EAAS,EAAQ,IACjBC,EAAW,EAAQ,GACnBlO,EAAc,EAAQ,GACtBb,EAAQ,EAAQ,GAEtBzR,EAAOD,QAAU,CACb,WAAW0gB,EAAOld,GACVA,GAAQU,EAAMX,UAAUC,GAE5B,MAAMlB,EAAS,KAAK+E,EAAKrC,YAAY0b,IAC/Ble,EAAS,IAAIge,EAAOle,GACpBI,EAAY,GACZD,EAAW,IAAIge,EAASne,EAAQI,GAQtC,OANAwB,EAAM7B,KAAKC,EAAQ,CACfE,SACAC,WACAC,cAGG,CACHJ,SACAE,SACAC,aAIR,YAAYH,GACR4B,EAAMvB,QAAQL,IAIlBqe,UAAW,CACPzc,QACAqO,cACAb,QACArK,U,gBCtCR,MAAMoZ,EAAW,EAAQ,GACnBlO,EAAc,EAAQ,GACtBb,EAAQ,EAAQ,GAChBkP,EAAsB,EAAQ,GAC9BvJ,EAAW,EAAQ,GACnBwJ,EAAY,EAAQ,IACpBC,EAAS,EAAQ,IACjBC,EAAU,EAAQ,IAClBC,EAAc,EAAQ,IACtBC,EAAe,EAAQ,IACvBC,EAAiB,EAAQ,IACzBC,EAAc,EAAQ,IACtBC,EAAyB,EAAQ,IACjCpa,EAAO,EAAQ,GACfO,EAAU,EAAQ,GAClBkT,EAAW,EAAQ,IACnBC,EAAU,EAAQ,IAClBzT,EAAY,EAAQ,IACpBC,EAAQ,EAAQ,IAChBC,EAAY,EAAQ,IACpBjD,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAErB,IAAIga,EAAc,EAClB,MAAMC,EAAuB,CACzB9C,SAAUnH,EAASvV,UACnByf,UAAWV,EAAU/e,UACrB0f,YAAaL,EAAYrf,UACzB2f,OAAQX,EAAOhf,UACf4f,QAASX,EAAQjf,UACjB6f,aAAcV,EAAanf,UAC3B8f,eAAgBV,EAAepf,UAC/BuR,MAAO3B,EAAM5P,WAEX+f,EAAwB,CAC1BC,UAAW3a,EAAUrF,UACrBigB,UAAW9a,EAAUnF,UACrBuJ,MAAOnE,EAAMpF,WAEXkgB,EAAe,GACfC,EAAe,GAErB,MAAMzB,UAAejO,EACjB,YAAYjQ,GACRwF,QAEA,MAAMoa,GAAc,IAAI9d,KAClBiY,EAAOzY,KAEbA,KAAK8G,SAAWpI,EAEhBsB,KAAKue,cAAgB,EACrBve,KAAKwe,aAAe,EACpBxe,KAAKye,cAAgB,EACrBze,KAAK0e,aAAe,EAEpB1e,KAAK2e,WAAa,IAAIlL,EAAS/U,GAC/BsB,KAAK4e,YAAc,IAAI3B,EACvBjd,KAAK6e,SAAW,IAAI3B,EACpBld,KAAK8e,UAAY,IAAI3B,EAAQnd,KAAK2e,YAClC3e,KAAK+e,cAAgB,IAAI3B,EAAY1e,GACrCsB,KAAKgf,eAAiB,IAAI3B,EAAard,MACvCA,KAAKif,iBAAmB,IAAI3B,EAAetd,MAC3CA,KAAKkf,cAAgB,IAAI3B,EAAYe,GAErCte,KAAKmf,gCAAkC,KAEvCnf,KAAKof,oBACLpf,KAAKqf,mBAGLrf,KAAKsf,aAAe,KAEpBtf,KAAKuf,qBAAuB,YAAwB3Q,GAChD,OAAOjL,EAAQqC,YAAY4I,IAE/B5O,KAAKwf,yBAA2B,cAA0BxC,EACtD,YAAYngB,EAAO,GAAI8B,EAAU,IAC7BA,EAAQgR,WAAa,IAAInP,KAAS8d,EAClCpa,MAAMrH,EAAM8B,KAGpBqB,KAAKyf,4BAA8B,cAA6BjC,EAC5D,cACItZ,MAAMuU,KAKdzY,KAAK0f,kBAAoB,aAM7B,mBAEI1f,KAAK2e,WAAWvR,iBAAiB,aAAc,EAAEmJ,SAAQC,aACrDxW,KAAK0G,UAAU,aAAc,CACzB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,aACNuS,OAAQpP,KACRoS,WAAYtE,EAAMyC,UAClBR,QAAS,CACLwG,SACAC,YAGRxG,cAAehQ,SAKvBA,KAAK8e,UAAU1R,iBAAiB,WAAY,EAAEuS,YAC1C3f,KAAK0G,UAAU,WAAY,CACvB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,WACNuS,OAAQpP,KACRoS,WAAYtE,EAAMyC,UAClBR,QAAS,CAAC4P,WAEd3P,cAAehQ,SAKvBA,KAAKoN,iBAAiB,SAAU,KAC5B,MAAMvO,EAAWmB,KAAKnB,SAElBA,IAAUA,EAAS8a,gBAAgB3U,mBAAqB,IAAIxE,QAOxE,oBACI,IACI,MAAMof,EAAOpW,GAAGqW,oBAEhB7f,KAAKue,cAAgBqB,EAAKE,aAC1B9f,KAAKwe,aAAeoB,EAAKG,YACzB/f,KAAKye,cAAgBmB,EAAKI,aAC1BhgB,KAAK0e,aAAekB,EAAKK,YAEzBjgB,KAAK6e,SAASqB,QAAQN,GACtB5f,KAAK4e,YAAYsB,QAAQN,GAC3B,MAAOpV,KAQb,gBAAgB2V,GACZ,IAAKA,GAAoC,iBAAfA,EAAyB,OAGnD,MAAMC,GADND,EAAaA,EAAW7e,MAAM,MACN,GAClB+e,EAAMF,EAAW,GACvB,IAEIjiB,EAFAoiB,EAASH,EAAW,GACpBlc,EAAOkc,EAAW,GA4BtB,MAxBa,WAATC,EACI1C,EAAqB2C,IACrBniB,EAAYwf,EAAqB2C,GACjCC,EAASrc,EACTA,EAAOkc,EAAW,IAElBjiB,EAAY0e,EAAO1e,UAEP,aAATkiB,EACPliB,EAAY2e,EAAS3e,UACL,YAATkiB,EACHnC,EAAsBoC,IACtBniB,EAAY+f,EAAsBoC,GAClCC,EAASrc,EACTA,EAAOkc,EAAW,IAElBjiB,EAAYyF,EAAQzF,UAER,aAATkiB,EACPliB,EAAY2Y,EAAS3Y,UACL,YAATkiB,IACPliB,EAAY4Y,EAAQ5Y,WAGjB,CAACA,YAAWoiB,SAAQrc,QAM/B,oBACI,OAAOjE,KAAK+e,cAMhB,eACI,OAAOV,EAMX,YACIna,MAAMwB,YAEN,MAAMhH,EAASsB,KAAK8G,SAEpB9J,OAAOmC,KAAKif,GAAc9b,QAAQzF,IAC9B,MAAM0jB,EAAcnC,EAAavhB,GAC7B0jB,EAAY7hB,KAAS6hB,EAAY7hB,GAAU,QAQvD,mBAAmB8hB,EAAKC,EAAgB,IAEpC,OADAhd,EAAKpB,qBACE,IAAIP,QAAQ,CAACC,EAAS+G,KACL,SAAhB0X,EAAItd,QACJlD,KAAK+I,wBAAwBM,OAAO,qBAAqBqX,OAAO,CAACD,iBAAgBvX,GAAQA,EAAMnH,EAAQmH,GAAOJ,KAAWM,OAEzHpJ,KAAK+I,wBAAwBM,OAAO,+BAA+BmX,EAAIzZ,UAAY2Z,OAAO,CAACD,iBAAgBvX,GAAQA,EAAMnH,EAAQmH,GAAOJ,KAAWM,SAQ/J,gBACI3F,EAAKpB,qBAMT,UAAUgN,EAAW1Q,EAAU,IAC3B,GAAkB,UAAd0Q,GAAkD,iBAAlB1Q,EAAQ8Q,MAAoB,CAE5D,MAAMkR,EAAWhiB,EAAQ8Q,MACnBmR,EAAWD,EAASrf,MAAM,MAChC,IAAIuf,EAAU,GACd,IAAK,IAAIvkB,EAAI,EAAG6R,EAAMyS,EAASzgB,OAAQ7D,EAAI6R,EAAK7R,IAAK,CACjD,MAAMwkB,EAAOF,EAAStkB,GACtB,GAAkC,IAA9BwkB,EAAKhX,OAAOjH,QAAQ,MAGpB,MAFAge,GAAYC,EAAO,KAM3B,MAAM1e,EAAQ,IAAI+G,MAAM0X,GAexB,GAdAze,EAAMsL,MAAQiT,EACdhiB,EAAQ8Q,MAAQ,IAAIzP,KAAKwf,yBAAyB,QAAS,CACvDpQ,OAAQpP,KACR+P,QAAS,CACL8Q,UACAE,SAAU,GACVC,OAAQ,EACRC,MAAO,EACP7e,WAGRzD,EAAQiQ,KAAO,CAACiS,EAASze,GAGG,mBAAjBpC,KAAKyF,UAA2BzF,KAAKyF,QAAQyb,aAAc,CAClE,MAAMC,EAAanhB,KAAKyF,QACxBzF,KAAKyF,QAAU,CAACgK,EAAOoR,EAASze,KAC5B+e,EAAW1kB,KAAKuD,KAAM6gB,EAAS,GAAI,EAAG,EAAGze,IAE7CpC,KAAKyF,QAAQyb,cAAe,GAIpChd,MAAMwC,UAAU2I,EAAW1Q,GAM/B,eAAewhB,GACX,IAAKA,GAAoC,iBAAfA,EAAyB,OAGnD,MAAMC,GADND,EAAaA,EAAW7e,MAAM,MACN,GAClB+e,EAAMF,EAAW,GAEvB,GAAa,WAATC,EAAmB,CACnB,GAAI1C,EAAqB2C,GACrB,OAAO3C,EAAqB2C,GACzB,IAAKA,EACR,OAAOzD,EAAO1e,eAEf,GAAa,aAATkiB,GACP,IAAKC,EACD,OAAOxD,EAAS3e,eAEjB,GAAa,YAATkiB,EAAoB,CAC3B,GAAInC,EAAsBoC,GACtB,OAAOpC,EAAsBoC,GAC1B,IAAKA,EACR,OAAO1c,EAAQzF,eAEhB,GAAa,aAATkiB,GACP,IAAKC,EACD,OAAOxJ,EAAS3Y,eAEjB,GAAa,YAATkiB,IACFC,EACD,OAAOvJ,EAAQ5Y,UAQ3B,SAASiiB,EAAYxhB,GACjB,IAAKwhB,IAAexhB,GAAiC,iBAAfwhB,GAA8C,iBAAZxhB,EAAsB,OAE9F,MAAMT,EAAY8B,KAAKohB,eAAejB,GAChChhB,EAAOnC,OAAOmC,KAAKR,GAErBT,GAAWiB,EAAKmD,QAAQzE,GAAOK,EAAUL,GAAOc,EAAQd,IAMhE,YAAYsiB,EAAYxe,GACpB,IAAKwe,IAAexe,GAA8B,iBAAfwe,GAA2C,mBAATxe,EAAqB,OAE1F,MAAM,UAACzD,EAAS,OAAEoiB,EAAM,KAAErc,GAAQjE,KAAKqhB,gBAAgBlB,GAGvD,GAAIjiB,GAAaoiB,GAAUrc,EAAM,CAC7B,MAAMqd,EAAoBpjB,EAAUoiB,GACpC,GAAiC,mBAAtBgB,EAAkC,OAGxCA,EAAkBC,WACnBrjB,EAAUoiB,GAAU,YAAY1R,GAC5B,MAAM4S,EAActjB,EAAUoiB,GAAQmB,UAAY,GAC5CC,EAAaxjB,EAAUoiB,GAAQqB,SAAW,GAEhD,GAAIH,EAAYrhB,OACZ,IAAK,MAAMyhB,KAAcJ,EAAa,CAElC,GADeI,EAAWC,MAAM7hB,KAAM4O,GAC1B,OAIpB,MAAM1F,EAAMoY,EAAkBO,MAAM7hB,KAAM4O,GAE1C,GAAI8S,EAAWvhB,OACX,IAAK,MAAM2hB,KAAaJ,EACpBI,EAAUrlB,KAAKuD,KAAMkJ,GAI7B,OAAOA,GAEXhL,EAAUoiB,GAAQiB,UAAW,EAC7BrjB,EAAUoiB,GAAQyB,iBAAmBT,GAI5B,WAATrd,GACA/F,EAAUoiB,GAAQmB,SAAWvjB,EAAUoiB,GAAQmB,UAAY,GAC3DvjB,EAAUoiB,GAAQmB,SAASrhB,KAAKuB,IAChB,UAATsC,IACP/F,EAAUoiB,GAAQqB,QAAUzjB,EAAUoiB,GAAQqB,SAAW,GACzDzjB,EAAUoiB,GAAQqB,QAAQvhB,KAAKuB,KAQ3C,eAAewe,EAAYxe,GACvB,IAAKwe,IAAexe,GAA8B,iBAAfwe,GAA2C,mBAATxe,EAAqB,OAE1F,MAAM,UAACzD,EAAS,OAAEoiB,EAAM,KAAErc,GAAQjE,KAAKqhB,gBAAgBlB,GAGvD,GAAIjiB,GAAaoiB,GAAUrc,EAAM,CAC7B,MAAMqd,EAAoBpjB,EAAUoiB,GACpC,GAAiC,mBAAtBgB,IAAqCA,EAAkBC,SAAU,OAG/D,WAATtd,GAAqBqd,EAAkBG,SACvCH,EAAkBG,SAASzV,OAAOsV,EAAkBG,SAAS5e,QAAQlB,GAAO,GAC5D,UAATsC,GAAoBqd,EAAkBK,SAC7CL,EAAkBK,QAAQ3V,OAAOsV,EAAkBK,QAAQ9e,QAAQlB,GAAO,GAGxE2f,EAAkBG,UAAaH,EAAkBG,SAASthB,QAAamhB,EAAkBK,SAAYL,EAAkBK,QAAQxhB,SACjIjC,EAAUoiB,GAAUgB,EAAkBS,mBAQlD,YAAYllB,EAAMqQ,GACd,GAAoB,iBAATrQ,GAAwC,mBAAZqQ,EAAwB,OAE/D,MAAMxO,EAASsB,KAAK8G,SACpBsX,EAAavhB,GAAQuhB,EAAavhB,IAAS,GAC3CuhB,EAAavhB,GAAM6B,GAAU0f,EAAavhB,GAAM6B,IAAW,GAC3D0f,EAAavhB,GAAM6B,GAAQ0B,KAAK8M,GAMpC,cAAcrQ,EAAMqQ,GAChB,MAAMxO,EAASsB,KAAK8G,SAEpB,GAAoB,iBAATjK,IAAsBuhB,EAAavhB,KAAUuhB,EAAavhB,GAAM6B,GAAS,OAEpF,MAAMuS,EAAWmN,EAAavhB,GAAM6B,GACpC,GAAKwO,GAGE,GAAuB,mBAAZA,EAAwB,CACtC,MAAMnB,EAAQkF,EAASpO,QAAQqK,IAChB,IAAXnB,GAAckF,EAASjF,OAAOD,EAAO,SAHzCkF,EAAS9Q,OAAS,EAU1B,UAAUtD,EAAMmlB,GACQ,iBAATnlB,GAAsBuhB,EAAavhB,IAE9CG,OAAOmC,KAAKif,EAAavhB,IAAOyF,QAAQ5D,IACpC,MAAMuS,EAAWmN,EAAavhB,GAAM6B,GAChCuS,GAAYA,EAAS9Q,QACrB8Q,EAAS3O,QAAQ4K,IACb,GAAuB,mBAAZA,EAEX,IACIA,EAAQzQ,KAAK,KAAMulB,GACrB,MAAOxX,GACLrI,QAAQC,MAAMoI,QAUlC,eACI,OAAOlK,EAAMtB,YAAYgB,KAAK8G,WAAa,KAG/C,eACI,OAAO9G,KAAK2e,WAGhB,aAAazJ,GACTlV,KAAK2e,WAAWzJ,KAAOA,EAG3B,gBACI,OAAOlV,KAAK4e,YAGhB,kBACI,OAAO5e,KAAKwf,yBAGhB,YACI,OAAO1R,EAGX,WACI,OAAO9N,KAGX,mBACI,OAAOA,KAAKgf,eAGhB,qBACI,OAAOhf,KAAKif,iBAGhB,aACI,OAAOjf,KAAK6e,SAGhB,cACI,OAAO7e,KAAK8e,UAGhB,kBACI,OAAO9e,KAAKue,cAGhB,iBACI,OAAOve,KAAKwe,aAGhB,kBACI,OAAOxe,KAAKye,cAGhB,iBACI,OAAOze,KAAK0e,aAGhB,YACI,OAAO1e,KAAKnB,SAASojB,mBAGzB,iBACI,OAAOC,WAAWpkB,KAAK,MAG3B,mBACI,OAAOqkB,aAAarkB,KAAK,MAG7B,kBACI,OAAOskB,YAAYtkB,KAAK,MAG5B,oBACI,OAAOukB,cAAcvkB,KAAK,MAG9B,kBACI,OAAOkC,KAAKuf,qBAGhB,cACI,OAAO5b,EAGX,WACI,OAAOP,EAGX,aACI,OAAOkf,OAGX,WACI,OAAOC,KAGX,aACI,OAAOC,OAGX,cACI,OAAOC,QAGX,aACI,OAAOC,OAGX,WACI,OAAOliB,KAGX,aACI,OAAOnD,OAGX,eACI,OAAO6N,SAGX,iBACI,OAAOyX,WAGX,kBACI,OAAO3iB,KAAKkf,cAGhB,iBAGI,OADA/c,QAAQoL,KAAK,sCACN,aAGX,qBACI,OAAOvN,KAAKyf,4BAGhB,KAAK/c,GAED1C,KAAK4a,SAASgI,OAAOlgB,GAGzB,QACI8G,GAAGqZ,aAAa,CACZC,MAAO,IAIf,mBAGI,OADA3gB,QAAQoL,KAAK,gGACN,CAEHwV,gBAAiB,GACjBC,mBAAoB,GACpBC,eAAgB,GAChBC,kBAAmB,IAI3B,sBAAsB1T,GAClB,GAAwB,mBAAbA,EAAyB,OAEpC,MAAMgC,EAAM,IAAIhR,KACV2iB,EAAcZ,KAAKa,IAAI3F,EAAc,GAAIjM,GAC/C,OAAO0Q,WAAW,KACd1S,EAAS2T,GACT1F,EAAc0F,GACfA,EAAc3R,GAGrB,qBAAqB6R,GACjB,OAAOlB,aAAakB,IAI5BhnB,EAAOD,QAAUwgB,G,gBC1oBjB,MAAM0G,EAAgB,EAAQ,IAK9B,SAASC,EAAY5c,EAAMrG,GACvB,MAAMkjB,EAASljB,EAAMkjB,OAASljB,EAAMkjB,QAAU,GACxCC,EAAWnjB,EAAMmjB,SAAWnjB,EAAMmjB,UAAY,IAC9C,QAACvgB,EAAO,UAAEib,GAAaxX,EAG7B6c,EAAOtgB,GAAWsgB,EAAOtgB,IAAY,GACrCsgB,EAAOtgB,GAAS9C,KAAKuG,GAGrB,IAAK,MAAMY,KAAa4W,EACpBsF,EAASlc,GAAakc,EAASlc,IAAc,GAC7Ckc,EAASlc,GAAWnH,KAAKuG,GAG7B,MAAMuB,EAAWvB,EAAKuB,UAAY,GAElC,IAAK,MAAMtC,KAASsC,EAEhBqb,EAAY3d,EAAOtF,GAyG3BjE,EAAOD,QArGP,MACI,YAAYsC,EAAQya,EAAMra,EAAWD,GACjCmB,KAAKtB,OAASA,EACdsB,KAAKmZ,KAAOta,EAAS0J,gBAAgB4Q,EAAMnZ,MAC3CA,KAAKlB,UAAYA,EACjBkB,KAAK0jB,MAAQ,GACb1jB,KAAKnB,SAAWA,EAEhBmB,KAAK2jB,cAAgB,IAAIL,EACrBxkB,IAAWA,EAAUqa,EAAK7Z,QAAUU,KAAKmZ,MAE7CnZ,KAAK4jB,KAAKzK,EAAMnZ,KAAKmZ,MAMzB,KAAK7O,EAAK9K,GACN,MAAM0I,EAAWoC,EAAIpC,SACfwb,EAAQ1jB,KAAK0jB,MACb5kB,EAAYkB,KAAKlB,UACjBD,EAAWmB,KAAKnB,SAEtB,GAAKqJ,GAAaA,EAAS/H,OAG3B,IAAK,MAAMyF,KAASsC,EAAU,CAC1B,IAAI2b,EAEe,YAAfje,EAAM3B,KACN4f,EAAYhlB,EAAS0J,gBAAgB3C,EAAO5F,MACtB,SAAf4F,EAAM3B,OACb4f,EAAYhlB,EAAS6J,iBAAiB9C,EAAO5F,OAIjD,MAAM6G,EAAKgd,EAAUhd,GACjBA,IAAO6c,EAAM7c,KACb6c,EAAM7c,GAAMgd,GAIZ/kB,IAAWA,EAAU8G,EAAMtG,QAAUukB,GAGzCrkB,EAAWiJ,YAAYob,GAGvB7jB,KAAK4jB,KAAKhe,EAAOie,IAOzB,YAAYhd,EAAIF,GACZ3G,KAAK0jB,MAAM7c,GAAMF,EAMrB,QAAQE,GACJ,OAAO7G,KAAK0jB,MAAM7c,GAMtB,aAAa3D,EAASyD,GAClB,MAAMrG,EAAQ,GAGd,OAFAijB,EAAY5c,GAAQ3G,KAAKmZ,KAAM7Y,GAExBA,EAAMkjB,OAAOtgB,EAAQ/B,gBAAkB,GAMlD,eAAeoG,EAAWZ,GACtB,MAAMrG,EAAQ,GAGd,OAFAijB,EAAY5c,GAAQ3G,KAAKmZ,KAAM7Y,GAExBA,EAAMmjB,SAASlc,IAAc,GAMxC,MAAMgF,EAAU5F,GACZ,MAAMrG,EAAQ,GAGd,OAFAijB,EAAY5c,GAAQ3G,KAAKmZ,KAAM7Y,GAExBN,KAAK2jB,cAAcva,KAAKmD,EAAU,CACrCmX,MAAO1jB,KAAK0jB,MACZF,OAAQljB,EAAMkjB,OACdC,SAAUnjB,EAAMmjB,c,cCxH5B,MAAMK,EAAe,CACjBC,QAASpd,GAAQA,EAAKod,SAAWpd,EAAKqd,SACtCC,SAAUtd,GAAQA,EAAKsd,SACvBC,QAASvd,IAASA,EAAKsd,SACvB,cAAetd,GAAQA,EAAKnH,WAAW0I,SAAS,KAAOvB,EACvD,aAAcA,GAAQA,EAAKnH,WAAW0I,SAASvB,EAAKnH,WAAW0I,SAAS/H,OAAS,KAAOwG,EACxF,YAAa,CAACA,EAAM4O,KAChB,MAAMrN,EAAWvB,EAAKnH,WAAW0I,UAC3B,EAAC+F,EAAC,EAAEC,GAAKqH,EACTxJ,EAAQ7D,EAASrF,QAAQ8D,GAAQ,EAEvC,OAAIsH,GACQlC,EAAQmC,GAAKD,GAAM,EAEpBlC,IAAUmC,IAKvBiW,EAAa,CACf,IAAK,CAACC,EAASC,IAAQD,IAAYC,EACnC,KAAM,CAACD,EAASC,KAA+C,IAAvCD,EAAQ9iB,MAAM,OAAOuB,QAAQwhB,GACrD,KAAM,CAACD,EAASC,IAAQD,IAAYC,GAAsC,IAA/BD,EAAQvhB,QAAQwhB,EAAM,KACjE,KAAM,CAACD,EAASC,IAAiC,IAAzBD,EAAQvhB,QAAQwhB,GACxC,KAAM,CAACD,EAASC,IAAQD,EAAQ7d,OAAO6d,EAAQjkB,OAASkkB,EAAIlkB,UAAYkkB,EACxE,KAAM,CAACD,EAASC,KAAkC,IAA1BD,EAAQvhB,QAAQwhB,IAGtCC,EAAgB,CAClB,IAAK,CAAC3d,EAAM4d,KACR,IAAIC,EAAc7d,EAAKnH,WAEvB,KAAOglB,GAAa,CAChB,GAAIC,EAASD,EAAaD,GAAc,OAAOC,EAE/CA,EAAcA,EAAYhlB,WAG9B,OAAO,MAEX,IAAK,CAACmH,EAAM4d,KACR,MAAMC,EAAc7d,EAAKnH,WAEzB,OAAOilB,EAASD,EAAaD,GAAeC,EAAc,MAE9D,IAAK,CAAC7d,EAAM4d,KACR,MAAMrc,EAAWvB,EAAKnH,WAEtB,IAAK,IAAIlD,EAAI,EAAG6R,EAAMjG,EAAS/H,OAAQ7D,EAAI6R,EAAK7R,IAAK,CAGjD,GAFc4L,EAAS5L,KAETqK,EAAM,CAChB,MAAM6d,EAActc,EAAS5L,EAAI,GAEjC,OAAOmoB,EAASD,EAAaD,GAAeC,EAAc,MAIlE,OAAO,MAEX,IAAK,CAAC7d,EAAM4d,KACR,MAAMrc,EAAWvB,EAAKnH,WACtB,IAAIklB,GAAe,EAEnB,IAAK,IAAIpoB,EAAI4L,EAAS/H,OAAS,EAAG7D,GAAK,EAAGA,IAAK,CAC3C,MAAMsJ,EAAQsC,EAAS5L,GAEvB,GAAIooB,GAAgBD,EAAS7e,EAAO2e,GAAc,OAAO3e,EACrDA,IAAUe,IAAM+d,GAAe,GAGvC,OAAO,OAOf,SAASD,EAAS9d,EAAMiV,GACpB,IAAKjV,EAAM,OAAO,EAElB,MAAM,GACFE,EAAI2E,MAAO2S,EAAS,IAAEwG,EAAG,OAAEC,EAAM,KAAExc,GACnCwT,EAGJ,GAAI/U,GACIF,EAAKE,KAAOA,EAAI,OAAO,EAI/B,GAAIsX,GAAaA,EAAUhe,OACvB,IAAK,MAAMoH,KAAa4W,EACpB,IAAKxX,EAAKwX,YAAcxX,EAAKwX,UAAU0G,SAAStd,GAAY,OAAO,EAK3E,GAAIod,GAAe,MAARA,GACHhe,EAAKzD,UAAYyhB,EAAIxjB,cAAe,OAAO,EAInD,GAAIyjB,EACA,IAAK,MAAM,KAAC/nB,EAAI,MAAE0Y,KAAUqP,EAAQ,CAChC,MAAME,EAAchB,EAAajnB,GACjC,IAAKioB,IAAgBA,EAAYne,EAAM4O,GAAQ,OAAO,EAK9D,GAAInN,EACA,IAAK,MAAM,KAACvL,EAAI,IAAEkoB,EAAG,IAAEV,KAAQjc,EAAM,CACjC,MAAMgc,EAAUzd,EAAK9J,IAAS8J,EAAKoG,aAAalQ,GAEhD,QAAgB6P,IAAZ0X,EAAuB,OAAO,EAClC,GAAIW,EAAK,CAEL,MAAMC,EAAYb,EAAWY,GAC7B,IAAKC,IAAcA,EAAUZ,EAASC,GAAM,OAAO,GAK/D,OAAO,EAmSXhoB,EAAOD,QAxOP,MACI,cACI4D,KAAKilB,WAAa,GAClBjlB,KAAKklB,eAAiB,GAQtBllB,KAAKmlB,OAAS,IAAI7C,OAAO,oPAM7B,cAAczkB,EAAKN,GAQf,OAPIyC,KAAKklB,eAAe/kB,OAAS,WACtBH,KAAKilB,WAAWjlB,KAAKklB,eAAeE,SAG/CplB,KAAKklB,eAAe9kB,KAAKvC,GACzBmC,KAAKilB,WAAWpnB,GAAON,EAEhBA,EAMX,cAAcM,GACV,OAAOmC,KAAKilB,WAAWpnB,GAM3B,MAAM0O,GACF,MAAM8Y,EAAU,CAAC,CAACV,IAAK,MACjBQ,EAASnlB,KAAKmlB,OAEdG,EAAY,CAACvkB,EAAKwkB,EAAO1e,EAAI2e,EAAQC,EAAUle,EAAWme,EAAWC,EAAYC,EAAaC,EAASC,EAAUC,EAASC,EAASC,EAAYC,KACjJ,GAAIX,EAEAF,EAAQA,EAAQllB,OAAS,GAAG0G,GAAKA,OAC9B,GAAI2e,EAEPH,EAAQA,EAAQllB,OAAS,GAAGwkB,IAAMa,EAAOxkB,mBACtC,GAAIykB,EAAU,CAEjB,MAAMU,EAAcd,EAAQA,EAAQllB,OAAS,GAC7CgmB,EAAY3a,MAAQ2a,EAAY3a,OAAS,GAEzC2a,EAAY3a,MAAMpL,KAAKmH,QACpB,GAAIme,EAAW,CAElB,MAAMS,EAAcd,EAAQA,EAAQllB,OAAS,GAC7CgmB,EAAYvB,OAASuB,EAAYvB,QAAU,GAG3C,MAAMA,EAAS,CAAC/nB,KAFhB8oB,EAAaA,EAAW3kB,eAKxB,GADI4kB,IAAaA,EAAcA,EAAY9b,QACxB,cAAf6b,EAIA,GAAoB,UAFpBC,EAAcA,EAAY9kB,QAAQ,OAAQ,KAItC8kB,EAAc,CAAC3X,EAAG,EAAGC,EAAG,QACrB,GAAoB,QAAhB0X,EAEPA,EAAc,CAAC3X,EAAG,EAAGC,EAAG,QACrB,GAAI0X,EAAa,CAEpB,MAAMQ,EAAYR,EAAYS,MAAM,iCAOhCT,EALCQ,EAGMA,EAAU,GAEH,CAACnY,EAAG,EAAGC,GAAIkY,EAAU,IAGrB,CACVnY,EAAGmY,EAAU,IAAMA,EAAU,GAAK,EAClClY,EAAGkY,EAAU,IAAMA,EAAU,GAAK,GARxB,CAACnY,EAAG,EAAGC,EAAG,QAa5B0X,EAAc,CAAC3X,EAAG,EAAGC,EAAG,GAG5B0X,IAAahB,EAAOrP,MAAQqQ,GAEhCO,EAAYvB,OAAOxkB,KAAKwkB,QACrB,GAAIiB,EAAS,CAEhB,MAAMM,EAAcd,EAAQA,EAAQllB,OAAS,GAE7CgmB,EAAY/d,KAAO+d,EAAY/d,MAAQ,GACvC+d,EAAY/d,KAAKhI,KAAK,CAClBvD,KAAMipB,EACNf,IAAKgB,EACL1B,IAAK2B,SAEFC,IAEPZ,EAAQA,EAAQllB,OAAS,GAAG+lB,QAAUA,EACtCb,EAAQjlB,KAAK,CAACukB,IAAK,OAGvB,MAAO,IAIX,IAAI2B,EAGJ,IAFA/Z,EAAWA,EAASzL,QAAQqkB,EAAQG,GAE7BgB,IAAc/Z,GACjB+Z,EAAY/Z,EACZA,EAAWA,EAASzL,QAAQqkB,EAAQG,GAGxC,OAAO/Y,EAAW,GAAK8Y,EAM3B,KAAK9Y,EAAUgD,GACXhD,EAAWA,EAASzC,OAAOhJ,QAAQ,OAAQ,KAAKA,QAAQ,qCAAsC,MAC9F,MAAM,MAAC4iB,EAAK,OAAEF,EAAM,SAAEC,GAAYlU,EAGlC,IAAI8V,EAAUrlB,KAAKumB,cAAcha,GAGjC,IAAK8Y,EAAS,CAIV,GAHAA,EAAUrlB,KAAKuK,MAAMgC,IAGhB8Y,EAAS,MAAO,GAErBrlB,KAAKwmB,cAAcja,EAAU8Y,GAIjC,IAAKA,EAAQ,GAAI,MAAO,GAGxB,MAAMoB,EAAWpB,EAAQA,EAAQllB,OAAS,IACpC,GAAC0G,EAAI2E,MAAO2S,EAAS,IAAEwG,GAAO8B,EACpC,IAAIC,EAAW,GAGf,GAAI7f,EAAI,CAEJ,MAAMF,EAAO+c,EAAM7c,GACnB6f,EAAW/f,EAAO,CAACA,GAAQ,QACxB,GAAIwX,GAAaA,EAAUhe,OAE9B,IAAK,MAAMoH,KAAa4W,EAAW,CAC/B,MAAMwI,EAAalD,EAASlc,GAC5B,GAAIof,EACA,IAAK,MAAMC,KAAaD,GACiB,IAAjCD,EAAS7jB,QAAQ+jB,IAAmBF,EAAStmB,KAAKwmB,QAI/D,GAAIjC,GAAe,MAARA,EAAa,CAE3B,MAAMzhB,EAAUyhB,EAAIxjB,cACd0lB,EAAWrD,EAAOtgB,GACpB2jB,IAAUH,EAAWG,QAGzB7pB,OAAOmC,KAAKqkB,GAAQlhB,QAAQzE,IACxB,MAAMgpB,EAAWrD,EAAO3lB,GACxB,GAAIgpB,EACA,IAAK,MAAMC,KAAWD,EAAUH,EAAStmB,KAAK0mB,KAM1D,GAAIJ,EAASvmB,QAAUklB,EAAQllB,OAC3B,IAAK,IAAI7D,EAAIoqB,EAASvmB,OAAS,EAAG7D,GAAK,EAAGA,IAAK,CAC3C,IAAIyqB,EAAYL,EAASpqB,GACrB0qB,GAAY,EAGhB,IAAK,IAAIC,EAAI5B,EAAQllB,OAAS,EAAG8mB,GAAK,EAAGA,IAAK,CAC1C,MAAMC,EAAW7B,EAAQ4B,EAAI,GAK7B,GAFIA,IAAM5B,EAAQllB,OAAS,IAAG6mB,EAAYvC,EAASsC,EAAWN,KAE1DO,IAAaE,EAab,MAbuB,CAEvB,MAAMhB,EAAUgB,EAAShB,QACnBiB,EAAe7C,EAAc4B,GAInC,GAFIiB,IAAcJ,EAAYI,EAAaJ,EAAWG,KAEjDH,EAAW,CAEZC,GAAY,EACZ,QAOPA,GAAWN,EAAS1a,OAAO1P,EAAG,GA/PnD,IAAmB2O,EAyQX,OANIyb,EAASvmB,SAETumB,EArRZ,SAAgBzb,GACZ,IAAK,IAAI3O,EAAI,EAAGA,EAAI2O,EAAK9K,OAAQ7D,IAAK,CAClC,MAAM2R,EAAIhD,EAAK3O,GAEf,IAAK,IAAI2qB,EAAI3qB,EAAI,EAAG2qB,EAAIhc,EAAK9K,OAAQ8mB,IAAK,CAElChZ,IADMhD,EAAKgc,IACFhc,EAAKe,OAAOib,EAAG,IAIpC,OAAOhc,EA2QYmc,CAAOV,IArQXzb,EAsQcyb,GArQxBW,KAAK,CAACpZ,EAAGC,KACV,MAAMoZ,EAAQ,CAACrZ,GACTsZ,EAAQ,CAACrZ,GACf,IAAIsZ,EAAUvZ,EAAEzO,WACZioB,EAAUvZ,EAAE1O,WAEhB,GAAIgoB,IAAYC,EAAS,CAErB,MAAMvf,EAAWsf,EAAQtf,SACzB,OAAOA,EAASrF,QAAQoL,GAAK/F,EAASrF,QAAQqL,GAIlD,KAAOsZ,GACHF,EAAMI,QAAQF,GACdA,EAAUA,EAAQhoB,WAItB,KAAOioB,GACHF,EAAMG,QAAQD,GACdA,EAAUA,EAAQjoB,WAItB,IAAIlD,EAAI,EACR,KAAOgrB,EAAMhrB,KAAOirB,EAAMjrB,IAAIA,IAG9B,MAAM4L,EAAWof,EAAMhrB,EAAI,GAAG4L,SAC9B,OAAOA,EAASrF,QAAQykB,EAAMhrB,IAAM4L,EAASrF,QAAQ0kB,EAAMjrB,MAuOvDoqB,EApODzb,GAuOIyb,K,cC3ZfrqB,EAAOD,QAAU,CACb,WAAY,MAAO,SAAU,QAAS,OAAQ,QAAS,QACvD,UAAW,QAAS,SAAU,YAAa,WAAY,YAAa,WAAY,OAAQ,YAAa,WAAY,aAAc,gBAAiB,WAAY,iBAAkB,aAAc,QAC5L,UAAW,gBAAiB,cAAe,eAAgB,aAC3D,SAAU,eAAgB,aAAc,cAAe,YAEvD,aAAc,iBAAkB,kBAAmB,kBAAmB,mBAAoB,qBAAsB,mBAAoB,iBACpI,SAAU,eAAgB,oBAAqB,yBAA0B,0BAA2B,oBAAqB,oBAAqB,iBAAkB,oBAAqB,oBAAqB,mBAAoB,oBAAqB,mBAAoB,kBAAmB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,sBAAuB,uBAAwB,iBAAkB,iBAC/c,YAAa,eAAgB,cAAe,aAC5C,UAAW,cAAe,cAAe,cAEzC,YAAa,iBAAkB,qBAAsB,oBAAqB,oBAAqB,0BAA2B,gBAAiB,qBAAsB,0BACjK,aAAc,kBAAmB,qBAAsB,qBAAsB,2BAC7E,YAAa,kBAAmB,cAAe,oBAAqB,qBAEpE,OAAQ,aAAc,WAAY,YAAa,aAC/C,QAAS,YAAa,iBAAkB,aAAc,gBAAiB,aAAc,eAAgB,gBACrG,YAAa,cAAe,WAAY,aAAc,gBAAiB,aAAc,aAErF,aAAc,UAAW,SAAU,OAAQ,WAAY,YAAa,YACpE,YAAa,YAAa,UAAW,SAAU,YAAa,YAAa,YAAa,gBAAiB,SAAU,gBAAiB,aAAc,OAAQ,WAAY,OAEpK,cAAe,qB,cCrBnB,MAAMurB,EAAa,yFACbC,EAAc,yGACdC,EAAY,8BACZC,EAAU,4FAGVrjB,EAAU,GAChB,CAAC,OAAQ,OAAQ,KAAM,MAAO,QAAS,KAAM,MAAO,QAAS,OAAQ,OAAQ,QAAS,SAAU,QAAS,OAAOnC,QAAQvE,GAAK0G,EAAQ1G,IAAK,GAG1I,MAAMgqB,EAAW,GACjB,CAAC,UAAW,UAAW,QAAS,aAAc,SAAU,KAAM,MAAO,KAAM,KAAM,WAAY,aAAc,SAAU,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SAAU,SAAU,KAAM,KAAM,OAAQ,MAAO,WAAY,KAAM,SAAU,IAAK,MAAO,UAAW,QAAS,QAAS,KAAM,SAASzlB,QAAQvE,GAAKgqB,EAAShqB,IAAK,GAGzU,MAAMiqB,EAAY,GAClB,CAAC,IAAK,OAAQ,UAAW,IAAK,MAAO,MAAO,KAAM,SAAU,OAAQ,OAAQ,MAAO,KAAM,IAAK,MAAO,QAAS,MAAO,QAAS,MAAO,SAAU,IAAK,OAAQ,SAAU,SAAU,QAAS,OAAQ,SAAU,MAAO,MAAO,WAAY,OAAQ,KAAM,OAAO1lB,QAAQvE,GAAKiqB,EAAUjqB,IAAK,GAGtR,MAAMkqB,EAAa,GACnB,CAAC,SAAU,SAAS3lB,QAAQvE,GAAKkqB,EAAWlqB,IAAK,GAEjD,MAAMmqB,EAAqB,GAC3B,IAAI3nB,EAAO,EAKX,SAAS4nB,EAASnlB,EAASkK,GACvB,MAAMQ,EAAQ,GACd,IAAI6D,EAAOvO,EAMX,IAJA0K,EAAM6D,KAAO,WACT,OAAOvR,KAAKA,KAAKG,OAAS,IAGvB6C,GAAS,CACZ,IAAIolB,GAAS,EAEb,GAAK1a,EAAM6D,QAAW0W,EAAWva,EAAM6D,QA8ChC,CACH,MAAM8W,EAAU,IAAK/F,OAAO,KAAK5U,EAAM6D,gBAAiBnI,KAAKpG,GAE7D,GAAIqlB,EAAS,CACT,MAAMrd,EAAOhI,EAAQyX,UAAU,EAAG4N,EAAQtc,OAC1C/I,EAAUA,EAAQyX,UAAU4N,EAAQtc,MAAQsc,EAAQ,GAAGloB,QAEvD6K,EAAKlK,QAAQ,gBAAiB,IAC1BkK,GAAQkC,EAAQlC,MAAMkC,EAAQlC,KAAKA,GAG3Csd,EAAY,GAAI5a,EAAM6D,YAzDsB,CAC5C,GAAgC,IAA5BvO,EAAQH,QAAQ,WAAe,CAE/B,MAAMkJ,EAAQ/I,EAAQH,QAAQ,UAE1BkJ,GAAS,IACT/I,EAAUA,EAAQyX,UAAU1O,EAAQ,GAChCmB,EAAQqb,SAASrb,EAAQqb,QAAQvlB,GACrColB,GAAS,QAEV,GAA8B,IAA1BplB,EAAQH,QAAQ,MAAa,CAEpC,MAAMwjB,EAAQrjB,EAAQqjB,MAAMwB,GAExBxB,IACArjB,EAAUA,EAAQyX,UAAU4L,EAAM,GAAGlmB,QACrCkmB,EAAM,GAAGvlB,QAAQ+mB,EAAWS,GAC5BF,GAAS,QAEV,GAA6B,IAAzBplB,EAAQH,QAAQ,KAAY,CAEnC,IAAIwjB,EAAQrjB,EAAQqjB,MAAMuB,GAEtBvB,GACArjB,EAAUA,EAAQyX,UAAU4L,EAAM,GAAGlmB,QACrCkmB,EAAM,GAAGvlB,QAAQ8mB,EAAaY,GAC9BJ,GAAS,IAGT/B,EAAQrjB,EAAQqjB,MAAMsB,GAElBtB,IACArjB,EAAUA,EAAQyX,UAAU4L,EAAM,GAAGlmB,QACrCioB,GAAS,IAKrB,GAAIA,EAAQ,CACR,MAAMrc,EAAQ/I,EAAQH,QAAQ,KAExBmI,EAAOe,EAAQ,EAAI/I,EAAUA,EAAQyX,UAAU,EAAG1O,GACxD/I,EAAU+I,EAAQ,EAAI,GAAK/I,EAAQyX,UAAU1O,GAEzCmB,EAAQlC,MAAMkC,EAAQlC,KAAKA,IAgBvC,GAAIhI,IAAYuO,EAAM,MAAM,IAAIpI,MAAM,gBAAgBnG,GACtDuO,EAAOvO,EAMX,SAASwlB,EAAc7D,EAAKzhB,EAASulB,EAAM5P,GAgBvC,GAfA3V,EAAUA,EAAQlC,cAClB6X,IAAUA,GAUVA,EAAQpU,EAAQvB,MAAc2V,IAElBnL,EAAMtN,KAAK8C,GAEnBgK,EAAQkN,MAAO,CACf,MAAMlV,EAAQ,GAEd,IACIujB,EAAK3nB,QAAQgnB,EAAS,CAAC/mB,EAAKG,EAAIwnB,EAAIC,EAAIC,KACpC,MAAMrrB,EAAQmrB,GAAMC,GAAMC,EAE1B1jB,EAAM9E,KAAK,CACPvD,KAAMqE,EACN3D,YAGV,MAAOiN,IAELie,EAAOA,EAAK3nB,QAAQ,iBAAkBC,IAClC,MAAM8F,EAAK,YAAYtG,QAEvB,OADA2nB,EAAmBrhB,GAAM9F,EAClB8F,KAEN/F,QAAQgnB,EAAS,CAAC/mB,EAAKG,EAAIwnB,EAAIC,EAAIC,KACpC,MAAMrrB,EAAQmrB,GAAMC,GAAMC,EAE1B1jB,EAAM9E,KAAK,CACPvD,KAAMqE,EACN3D,MAAOA,EAAMuD,QAAQ,uBAAwBC,GAAOmnB,EAAmBnnB,IAAQ,aAK3FmM,EAAQkN,MAAMlX,EAASgC,EAAO2T,IAItC,SAASyP,EAAY3D,EAAKzhB,GACtB,IAAI2lB,EAEJ,GAAK3lB,EAMD,IAFAA,EAAUA,EAAQlC,cAEb6nB,EAAMnb,EAAMvN,OAAS,EAAG0oB,GAAO,GAC5Bnb,EAAMmb,KAAS3lB,EADgB2lB,UALvCA,EAAM,EAUV,GAAIA,GAAO,EAAG,CAEV,IAAK,IAAIvsB,EAAIoR,EAAMvN,OAAS,EAAG7D,GAAKusB,EAAKvsB,IACjC4Q,EAAQ4b,KAAK5b,EAAQ4b,IAAIpb,EAAMpR,IAGvCoR,EAAMvN,OAAS0oB,GAvEvBP,IAyJJjsB,EAAOD,QAAU,CACb+rB,WACA5d,MA5EJ,SAAejD,GACX,MAAMlK,EAAI,CACN8K,SAAU,IAERwF,EAAQ,CAACtQ,GAmEf,OAjEAsQ,EAAM6D,KAAO,WACT,OAAOvR,KAAKA,KAAKG,OAAS,IAG9BgoB,EAAS7gB,EAAM,CACX,MAAMpE,EAASgC,EAAO2T,GAClB,MAAMlS,EAAO,CACT1C,KAAM,UACNf,UACAgC,QACA2T,QACA3Q,SAAU,IAGdwF,EAAM6D,OAAOrJ,SAAS9H,KAAKuG,GAEtBkS,GACDnL,EAAMtN,KAAKuG,IAInB,IAAIzD,GACA,MAAMyD,EAAO+G,EAAMrN,MAEnB,GAAqB,UAAjBsG,EAAKzD,QAAqB,CAE1B,IAAIyH,GAAW,EAEf,IAAK,MAAM/E,KAASe,EAAKuB,SACrB,GAAsB,UAAlBtC,EAAM1C,QAAqB,CAC3ByH,GAAW,EACX,MAIHA,IACDhE,EAAKuB,SAAW,CAAC,CACbjE,KAAM,UACNf,QAAS,QACTgC,MAAO,GACP2T,OAAO,EACP3Q,SAAUvB,EAAKuB,cAK/B,KAAKlF,IACDA,EAAUA,EAAQ8G,SAGlB4D,EAAM6D,OAAOrJ,SAAS9H,KAAK,CACvB6D,KAAM,OACNjB,aAGR,QAAQA,GACJA,EAAUA,EAAQ8G,OAElB4D,EAAM6D,OAAOrJ,SAAS9H,KAAK,CACvB6D,KAAM,UACNjB,eAKL5F,EAAE8K,UAMTzD,UACAsjB,WACAC,YACAC,e,gBC3QJ,MAAMtkB,EAAU,EAAQ,GAClB8P,EAAW,EAAQ,GACnBnT,EAAQ,EAAQ,GAChB0a,EAAO,EAAQ,GACfvX,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAM+N,UAA0BplB,EAI5B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIglB,EAAkBpqB,EAASiF,GAM1C,OAAOjF,EAASiF,GACZM,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAK2T,WAAa,QAClB3T,KAAK4T,WAAa,GAClB5T,KAAK6T,OAAS,GACd7T,KAAK8T,WAAa,IAClB9T,KAAK+T,SAAW,GAChB/T,KAAKgU,OAAS,GAMlB,YACI9P,MAAMwB,YAEN1F,KAAK2T,WAAa,KAClB3T,KAAK4T,WAAa,KAClB5T,KAAK6T,OAAS,KACd7T,KAAK8T,WAAa,KAClB9T,KAAK+T,SAAW,KAChB/T,KAAKgU,OAAS,KAMlB,YACIhU,KAAKoE,WAAW9B,QAAQsD,GAASA,EAAMC,aACvC7F,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,+BAA+BsH,EAAMX,GACjC,MAAMuO,EAAOvO,EAAKuO,KACdA,IAAM5N,GAAQ,UAAU7D,EAAKN,wBAAwB+R,OAEzD,MAAM9F,EAASzI,EAAKyI,OAGpB,OAFIA,IAAQ9H,GAAQ,YAAY7D,EAAKN,wBAAwBiM,OAEtD9H,EAMX,4BAA4BX,GACxB3G,KAAKkV,KAAOvO,EAAKuO,MAAQ,GACzBlV,KAAKoP,OAASzI,EAAKyI,QAAU,GAMjC,8BACI,MAAO,CACH8F,KAAMlV,KAAKkV,KACX9F,OAAQpP,KAAKoP,QAOrB,WACI,OAAOpP,KAAK8E,QAAQ3H,IAAI,QAG5B,SAASI,GAGL,IAA6B,KAF7BA,EAAQ,GAAKA,GAEHsF,QAAQ,MAAc,CAC5B,MAAM,OAACC,GAAUxC,EAAMT,YACvBtC,EAAQuF,GAAuB,MAAbvF,EAAM,GAAaA,EAAQ,IAAIA,GAGrDyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GACzB,MAAM,SACF+W,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,SAAEC,EAAQ,OAAEC,EAAM,KAAEC,GAC5ClB,EAASvJ,QAAQ3M,GAErByC,KAAK2T,WAAaW,GAAYtU,KAAK2T,WACnC3T,KAAK4T,WAAaW,GAAYvU,KAAK4T,WACnC5T,KAAK6T,OAASW,GAAQ,GACtBxU,KAAK8T,WAAaW,GAAY,IAC9BzU,KAAK+T,SAAWW,GAAU,GAC1B1U,KAAKgU,OAASW,GAAQ,GAG1B,eACI,OAAO3U,KAAK2T,WAGhB,eACI,OAAO3T,KAAK4T,WAGhB,WACI,OAAO5T,KAAK6T,OAGhB,eACI,OAAO7T,KAAK8T,WAGhB,aACI,OAAO9T,KAAK+T,SAGhB,WACI,OAAO/T,KAAKgU,OAGhB,aACI,OAAOhU,KAAK8E,QAAQ3H,IAAI,UAG5B,WAAWI,GACPA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,SAAUtM,IAInClB,EAAOD,QAAU2sB,G,gBCpKjB,MAAMplB,EAAU,EAAQ,GAClBmK,EAAQ,EAAQ,GAChBkN,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAMhE,UAAcrT,EAIhB,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIiT,EAAMrY,EAASiF,GAM9B,OAAOjF,EAASiF,GACZ,MAAM+U,EAAQha,EAAQga,MAChBC,EAASja,EAAQia,OAEF,iBAAVD,GAAsBA,GAAS,IAAGha,EAAQuG,MAAMyT,MAAQA,GAC7C,iBAAXC,GAAuBA,GAAU,IAAGja,EAAQuG,MAAM0T,OAASA,GAEtE1U,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAKgpB,eAAiB,EACtBhpB,KAAKipB,gBAAkB,EAEvBjpB,KAAKkpB,aAMT,YACIhlB,MAAMwB,YAEN1F,KAAKgpB,eAAiB,KACtBhpB,KAAKipB,gBAAkB,KAM3B,YACIjpB,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,wBACIA,KAAKkpB,aACLhlB,MAAMkC,wBAMV,aACI,MAAMuS,EAAQzN,SAASlL,KAAK8E,QAAQ3H,IAAI,SAAU,IAC5Cyb,EAAS1N,SAASlL,KAAK8E,QAAQ3H,IAAI,UAAW,IAE/B,iBAAVwb,GAAsBA,GAAS,IAAG3Y,KAAK6E,QAAQ8T,MAAWA,EAAH,MAC5C,iBAAXC,GAAuBA,GAAU,IAAG5Y,KAAK6E,QAAQ+T,OAAYA,EAAH,MAMzE,YAAYuQ,EAAO,IACfnpB,KAAKgpB,eAAiBG,EAAKxQ,OAAS,EACpC3Y,KAAKipB,gBAAkBE,EAAKvQ,QAAU,EAEtC5Y,KAAKkpB,aAMT,UACI,OAAOlpB,KAAK8E,QAAQ3H,IAAI,QAAU,GAGtC,QAAQI,GACCA,GAA0B,iBAAVA,IAErByC,KAAK8E,QAAQ+E,IAAI,MAAOtM,GAExB2kB,WAAW,KACP1Y,GAAG4f,aAAa,CACZzhB,IAAK3H,KAAK2H,IACV0hB,QAASngB,IAELlJ,KAAKspB,YAAYpgB,GAGjBlJ,KAAK0G,UAAU,OAAQ,CACnB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,OACNuS,OAAQpP,KACRoS,WAAYtE,EAAMyC,YAEtBP,cAAehQ,QAGvBupB,KAAM,KAEFvpB,KAAKspB,YAAY,CAAC3Q,MAAO,EAAGC,OAAQ,IAGpC5Y,KAAK0G,UAAU,QAAS,CACpB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,QACNuS,OAAQpP,KACRoS,WAAYtE,EAAMyC,YAEtBP,cAAehQ,WAI5B,IAGP,YACI,OAAQA,KAAK8E,QAAQ3H,IAAI,UAAY,EAGzC,UAAUI,GACe,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAE7DyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAC1ByC,KAAKkpB,cAGT,aACI,OAAQlpB,KAAK8E,QAAQ3H,IAAI,WAAa,EAG1C,WAAWI,GACc,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAE7DyC,KAAK8E,QAAQ+E,IAAI,SAAUtM,GAC3ByC,KAAKkpB,cAGT,mBACI,OAAOlpB,KAAKgpB,eAGhB,oBACI,OAAOhpB,KAAKipB,iBAIpB5sB,EAAOD,QAAU4a,G,gBChLjB,MAAMrT,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAMwO,UAAyB7lB,EAI3B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIylB,EAAiB7qB,EAASiF,GAMzC,YACI5D,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,+BAA+BsH,EAAMX,GACjC,MAAM1C,EAAO0C,EAAK1C,KACdA,IAAMqD,GAAQ,UAAU7D,EAAKN,wBAAwBc,OAEzD,MAAM1G,EAAQoJ,EAAKpJ,MACfA,IAAO+J,GAAQ,WAAW7D,EAAKN,wBAAwB5F,OAE1CoJ,EAAKsd,WACR3c,GAAQ,aAEtB,MAAMmiB,EAAY9iB,EAAK8iB,UACnBA,IAAWniB,GAAQ,eAAe7D,EAAKN,wBAAwBsmB,OAEnE,MAAMC,EAAc/iB,EAAK+iB,YAGzB,OAFIA,IAAapiB,GAAQ,iBAAiB7D,EAAKN,wBAAwBumB,OAEhEpiB,EAMX,4BAA4BX,GACxB3G,KAAKnD,KAAO8J,EAAK9J,MAAQ,GACzBmD,KAAKiE,KAAO0C,EAAK1C,MAAQ,GACzBjE,KAAKzC,MAAQoJ,EAAKpJ,OAAS,GAC3ByC,KAAKikB,WAAatd,EAAKsd,SACvBjkB,KAAKypB,UAAY9iB,EAAK8iB,UACtBzpB,KAAK0pB,YAAc/iB,EAAK+iB,aAAe,GAGvC1pB,KAAK2pB,mBAAqBhjB,EAAKgjB,oBAAsB,GAMzD,8BACI,MAAO,CACH1lB,KAAMjE,KAAKiE,KACX1G,MAAOyC,KAAKzC,MACZ0mB,SAAUjkB,KAAKikB,SACfwF,UAAWzpB,KAAKypB,UAChBC,YAAa1pB,KAAK0pB,YAGlBC,mBAAoB3pB,KAAK2pB,oBAOjC,WACI,OAAO3pB,KAAK8E,QAAQ3H,IAAI,QAG5B,SAASI,GACLA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GAG7B,WACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,SAAW,OAGvC,SAASI,GACLA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GAG7B,YACI,MAAM0G,EAAOjE,KAAK8E,QAAQ3H,IAAI,QACxBI,EAAQyC,KAAK8E,QAAQ3H,IAAI,SAE/B,MAAc,UAAT8G,GAA6B,aAATA,QAAkCyI,IAAVnP,EAC1CA,EADsE,KAIjF,UAAUA,GACNA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,eACI,QAASyC,KAAK8E,QAAQ3H,IAAI,YAG9B,aAAaI,GACTA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,gBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,aAG5B,cAAcI,GACVyC,KAAK8E,QAAQ+E,IAAI,YAAatM,GAGlC,kBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,gBAAkB,GAG9C,gBAAgBI,GACZA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,cAAetM,GAGpC,gBACI,QAASyC,KAAK8E,QAAQ3H,IAAI,aAG9B,cAAcI,GACVA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,YAAatM,GAGlC,YAAYA,GACRyC,KAAK8E,QAAQ+E,IAAI,UAAWtM,GAGhC,cACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,YAAc,GAG1C,QACI6C,KAAK8E,QAAQ+E,IAAI,SAAS,GAG9B,OACI7J,KAAK8E,QAAQ+E,IAAI,SAAS,IAIlCxN,EAAOD,QAAUotB,G,gBCpLjB,MAAM7lB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAM4O,UAA4BjmB,EAI9B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI6lB,EAAoBjrB,EAASiF,GAM5C,YACI5D,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,+BAA+BsH,EAAMX,GACjC,MAAM1C,EAAO0C,EAAK1C,KACdA,IAAMqD,GAAQ,UAAU7D,EAAKN,wBAAwBc,OAEzD,MAAM1G,EAAQoJ,EAAKpJ,MACfA,IAAO+J,GAAQ,WAAW7D,EAAKN,wBAAwB5F,OAE1CoJ,EAAKsd,WACR3c,GAAQ,aAEtB,MAAMmiB,EAAY9iB,EAAK8iB,UACnBA,IAAWniB,GAAQ,eAAe7D,EAAKN,wBAAwBsmB,OAEnE,MAAMC,EAAc/iB,EAAK+iB,YAGzB,OAFIA,IAAapiB,GAAQ,iBAAiB7D,EAAKN,wBAAwBumB,EAAY5oB,QAAQ,KAAM,YAE1FwG,EAMX,4BAA4BX,GACxB3G,KAAKnD,KAAO8J,EAAK9J,MAAQ,GACzBmD,KAAKiE,KAAO0C,EAAK1C,MAAQ,GACzBjE,KAAKzC,MAAQoJ,EAAKpJ,OAAS,GAC3ByC,KAAKikB,WAAatd,EAAKsd,SACvBjkB,KAAKypB,UAAY9iB,EAAK8iB,UACtBzpB,KAAK0pB,YAAc/iB,EAAK+iB,aAAe,GAGvC1pB,KAAK2pB,mBAAqBhjB,EAAKgjB,oBAAsB,GAMzD,8BACI,MAAO,CACH1lB,KAAMjE,KAAKiE,KACX1G,MAAOyC,KAAKzC,MACZ0mB,SAAUjkB,KAAKikB,SACfwF,UAAWzpB,KAAKypB,UAChBC,YAAa1pB,KAAK0pB,YAGlBC,mBAAoB3pB,KAAK2pB,oBAOjC,WACI,OAAO3pB,KAAK8E,QAAQ3H,IAAI,SAAW,WAGvC,SAASI,GACLA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GAG7B,YACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,SAG5B,UAAUI,GACNA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,eACI,QAASyC,KAAK8E,QAAQ3H,IAAI,YAG9B,aAAaI,GACTA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,gBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,aAG5B,cAAcI,GACVyC,KAAK8E,QAAQ+E,IAAI,YAAatM,GAGlC,kBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,gBAAkB,GAG9C,gBAAgBI,GACZA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,cAAetM,GAGpC,gBACI,QAASyC,KAAK8E,QAAQ3H,IAAI,aAG9B,cAAcI,GACVA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,YAAatM,GAGlC,qBACI,MAAMA,GAASyC,KAAK8E,QAAQ3H,IAAI,mBAChC,YAAiBuP,IAAVnP,EAAsBA,GAAS,EAG1C,mBAAmBA,GACfyC,KAAK8E,QAAQ+E,IAAI,kBAAmBtM,GAGxC,mBACI,MAAMA,GAASyC,KAAK8E,QAAQ3H,IAAI,iBAChC,YAAiBuP,IAAVnP,EAAsBA,GAAS,EAG1C,iBAAiBA,GACbyC,KAAK8E,QAAQ+E,IAAI,gBAAiBtM,GAGtC,QACIyC,KAAK8E,QAAQ+E,IAAI,SAAS,GAG9B,OACI7J,KAAK8E,QAAQ+E,IAAI,SAAS,IAIlCxN,EAAOD,QAAUwtB,G,gBCjLjB,MAAMjmB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAM6O,UAAyBlmB,EAI3B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI8lB,EAAiBlrB,EAASiF,GAMzC,OAAOjF,EAASiF,GACZ,MAAM+U,EAAQha,EAAQga,MAChBC,EAASja,EAAQia,OAEF,iBAAVD,GAAsBA,GAAS,IAAGha,EAAQuG,MAAMyT,MAAQA,GAC7C,iBAAXC,GAAuBA,GAAU,IAAGja,EAAQuG,MAAM0T,OAASA,GAEtE1U,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAKkpB,aAMT,YACIlpB,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,wBACIA,KAAKkpB,aACLhlB,MAAMkC,wBAMV,aACI,MAAMuS,EAAQzN,SAASlL,KAAK8E,QAAQ3H,IAAI,SAAU,IAC5Cyb,EAAS1N,SAASlL,KAAK8E,QAAQ3H,IAAI,UAAW,IAE/B,iBAAVwb,GAAsBA,GAAS,IAAG3Y,KAAK6E,QAAQ8T,MAAWA,EAAH,MAC5C,iBAAXC,GAAuBA,GAAU,IAAG5Y,KAAK6E,QAAQ+T,OAAYA,EAAH,MAMzE,UACI,OAAO5Y,KAAK8E,QAAQ3H,IAAI,QAAU,GAGtC,QAAQI,GACCA,GAA0B,iBAAVA,GAErByC,KAAK8E,QAAQ+E,IAAI,MAAOtM,GAG5B,YACI,OAAQyC,KAAK8E,QAAQ3H,IAAI,UAAY,EAGzC,UAAUI,GACe,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAE7DyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAC1ByC,KAAKkpB,cAGT,aACI,OAAQlpB,KAAK8E,QAAQ3H,IAAI,WAAa,EAG1C,WAAWI,GACc,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAE7DyC,KAAK8E,QAAQ+E,IAAI,SAAUtM,GAC3ByC,KAAKkpB,cAGT,eACI,QAASlpB,KAAK8E,QAAQ3H,IAAI,YAG9B,aAAaI,GACTA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,WACI,QAASyC,KAAK8E,QAAQ3H,IAAI,QAG9B,SAASI,GACLA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GAG7B,YACI,QAASyC,KAAK8E,QAAQ3H,IAAI,SAG9B,UAAUI,GACNA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,eACI,MAAMA,EAAQyC,KAAK8E,QAAQ3H,IAAI,YAC/B,YAAiBuP,IAAVnP,KAAwBA,EAGnC,aAAaA,GACTyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,aACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,UAG5B,WAAWI,GACFA,GAA0B,iBAAVA,GAErByC,KAAK8E,QAAQ+E,IAAI,SAAUtM,GAG/B,kBACI,OAAQyC,KAAK8E,QAAQ3H,IAAI,gBAAkB,EAG/C,eACI,OAAO6C,KAAK8E,QAAQ3H,IAAI,aAIhCd,EAAOD,QAAUytB,G,gBCpKjB,MAAMlmB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAM8O,UAA0BnmB,EAI5B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI+lB,EAAkBnrB,EAASiF,GAM1C,OAAOjF,EAASiF,GACZ,MAAM+U,EAAQha,EAAQga,MAChBC,EAASja,EAAQia,OAEF,iBAAVD,GAAsBA,GAAS,IAAGha,EAAQuG,MAAMyT,MAAQA,GAC7C,iBAAXC,GAAuBA,GAAU,IAAGja,EAAQuG,MAAM0T,OAASA,GAEtE1U,MAAMF,OAAOrF,EAASiF,GAEtB5D,KAAKgZ,OAAS,KAEdhZ,KAAKkpB,aAMT,YACIlpB,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,YACI,OAAO,IAAI8B,QAAQ,CAACC,EAAS+G,KACzB9I,KAAK+pB,gBAAgB/nB,KAAKgoB,GAAYA,EAASrjB,KAAKuC,IAChDlJ,KAAKgZ,OAAS9P,EAAIvC,KAGlB3G,KAAKgZ,OAAOL,MAAQ3Y,KAAK2Y,MACzB3Y,KAAKgZ,OAAOJ,OAAS5Y,KAAK4Y,OAE1B7W,EAAQ/B,QACToJ,QAAQlH,MAAM4G,KAIzB,aACI,OAAO9I,KAAKgZ,OAMhB,wBACIhZ,KAAKkpB,aACLhlB,MAAMkC,wBAMV,aACI,MAAMuS,EAAQzN,SAASlL,KAAK8E,QAAQ3H,IAAI,SAAU,IAC5Cyb,EAAS1N,SAASlL,KAAK8E,QAAQ3H,IAAI,UAAW,IAE/B,iBAAVwb,GAAsBA,GAAS,IACtC3Y,KAAK6E,QAAQ8T,MAAWA,EAAH,MAEH,iBAAXC,GAAuBA,GAAU,IACxC5Y,KAAK6E,QAAQ+T,OAAYA,EAAH,MAO9B,YACI,OAAI5Y,KAAKgZ,OAAehZ,KAAKgZ,OAAOL,OACvB3Y,KAAK8E,QAAQ3H,IAAI,UAAY,EAG9C,UAAUI,GACe,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAEzDyC,KAAKgZ,OAAQhZ,KAAKgZ,OAAOL,MAAQpb,EAChCyC,KAAK8E,QAAQ+E,IAAI,QAAStM,IAGnC,aACI,OAAIyC,KAAKgZ,OAAehZ,KAAKgZ,OAAOJ,QACvB5Y,KAAK8E,QAAQ3H,IAAI,WAAa,EAG/C,WAAWI,GACc,iBAAVA,IAAuBmZ,SAASnZ,IAAUA,EAAQ,IAEzDyC,KAAKgZ,OAAQhZ,KAAKgZ,OAAOJ,OAASrb,EACjCyC,KAAK8E,QAAQ+E,IAAI,SAAUtM,IAGpC,WAAW0G,GACP,GAAKjE,KAAKgZ,OAIV,OAAOhZ,KAAKgZ,OAAOiR,WAAWhmB,GAH1B9B,QAAQoL,KAAK,+DAOzBlR,EAAOD,QAAU0tB,G,gBCzIjB,MAAMnmB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAMkP,UAA0BvmB,EAI5B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAImmB,EAAkBvrB,EAASiF,GAM1C,OAAOjF,EAASiF,GACZM,MAAMF,OAAOrF,EAASiF,GACtB5D,KAAKmqB,iBAMT,iBACI,MAAM5sB,EAAQyC,KAAKzC,WAELmP,IAAVnP,EACAyC,KAAKrB,QAAQ2D,QAAQsD,GAASA,EAAMwkB,iBAAiBxkB,EAAMrI,QAAUA,IAErEyC,KAAKrB,QAAQ2D,QAAQ,CAACsD,EAAOmG,IAAUnG,EAAMwkB,iBAA2B,IAAVre,IAOtE,YACI/L,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,+BAA+BsH,EAAMX,GACjC,MAAMpJ,EAAQoJ,EAAKpJ,MACfA,IAAO+J,GAAQ,WAAW7D,EAAKN,wBAAwB5F,OAK3D,OAHiBoJ,EAAKsd,WACR3c,GAAQ,aAEfA,EAMX,4BAA4BX,GACxB3G,KAAKnD,KAAO8J,EAAK9J,MAAQ,GACzBmD,KAAKzC,MAAQoJ,EAAKpJ,OAAS,GAC3ByC,KAAKikB,WAAatd,EAAKsd,SACvBjkB,KAAKqqB,cAAgB1jB,EAAK0jB,eAAiB,EAM/C,8BACI,MAAO,CACH9sB,MAAOyC,KAAKzC,MACZ0mB,SAAUjkB,KAAKikB,UAOvB,WACI,OAAOjkB,KAAK8E,QAAQ3H,IAAI,QAG5B,SAASI,GAEL,OADAA,EAAQ,GAAKA,EACNyC,KAAK8E,QAAQ+E,IAAI,OAAQtM,GAGpC,YACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,SAG5B,UAAUI,GACNA,EAAQ,GAAKA,EAEbyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG1ByC,KAAK8E,QAAQ+E,IAAI,gBAAiB7J,KAAKrB,QAAQ2rB,UAAUC,GAAUA,EAAOhtB,QAAUA,IAGpFyC,KAAKmqB,iBAGT,eACI,QAASnqB,KAAK8E,QAAQ3H,IAAI,YAG9B,aAAaI,GACTA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,oBACI,OAAQyC,KAAK8E,QAAQ3H,IAAI,iBAG7B,kBAAkBI,GACdA,GAASA,EAETyC,KAAK8E,QAAQ+E,IAAI,gBAAiBtM,GAGlCyC,KAAK8E,QAAQ+E,IAAI,QAAS7J,KAAKrB,QAAQpB,IAAUyC,KAAKrB,QAAQpB,GAAOA,OAAS,IAG9EyC,KAAKmqB,iBAGT,cAEI,OAAOnqB,KAAKoE,WAAW+F,OAAOvE,GAA2B,WAAlBA,EAAM1C,UAAyB0C,EAAMqe,WAIpF5nB,EAAOD,QAAU8tB,G,gBC1JjB,MAAMvmB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAMwP,UAA0B7mB,EAI5B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIymB,EAAkB7rB,EAASiF,GAM1C,YACI5D,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAOjB,+BAA+BsH,EAAMX,GACjC,MAAMpJ,EAAQoJ,EAAKpJ,MACfA,IAAO+J,GAAQ,WAAW7D,EAAKA,KAAKN,wBAAwB5F,OAEhE,MAAMktB,EAAQ9jB,EAAK8jB,MACfA,IAAOnjB,GAAQ,WAAW7D,EAAKA,KAAKN,wBAAwBsnB,OAKhE,OAHiB9jB,EAAKqd,WACR1c,GAAQ,aAEfA,EAMX,4BAA4BX,GACxB3G,KAAKyqB,MAAQ9jB,EAAK8jB,OAAS,GAC3BzqB,KAAKzC,MAAQoJ,EAAKpJ,OAAS,GAC3ByC,KAAKikB,WAAatd,EAAKsd,SACvBjkB,KAAKgkB,WAAard,EAAKqd,SAM3B,iBAAiBzmB,GACbA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,YACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,UAAY6C,KAAKqH,YAG7C,UAAU9J,GACNA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,YACI,MAAMA,EAAQyC,KAAK8E,QAAQ3H,IAAI,SAC/B,YAAiBuP,IAAVnP,EAAsBA,EAAQyC,KAAKyqB,MAG9C,UAAUltB,GACNA,EAAQ,GAAKA,EACbyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,eACI,QAASyC,KAAK8E,QAAQ3H,IAAI,YAG9B,aAAaI,GACTA,IAAUA,EACVyC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,aAAaA,GACTyC,KAAKoqB,iBAAiB7sB,GAGtB,MAAMiC,EAAaQ,KAAKR,WACpBA,GAAqC,WAAvBA,EAAW0D,UACzB1D,EAAWjC,MAAQyC,KAAKzC,OAIhC,eACI,QAASyC,KAAK8E,QAAQ3H,IAAI,aAIlCd,EAAOD,QAAUouB,G,gBCtHjB,MAAM7mB,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAMzD,UAAmB5T,EAIrB,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIwT,EAAW5Y,EAASiF,GAMnC,OAAOjF,EAASiF,GACZM,MAAMF,OAAOrF,EAASiF,GAGtB,MAAMhF,EAAS0B,EAAMrB,UAAUe,KAAK8G,UAChClI,EAAO8rB,yBAAyB9rB,EAAO8rB,wBAAwB1qB,MAMvE,YACIA,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAIjB,eACI,MAAO,eAIf3D,EAAOD,QAAUmb,G,gBCxDjB,MAAM5T,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAChBmD,EAAO,EAAQ,GAEfC,EAAO,IAAIsX,EAEjB,MAAMxD,UAAoB7T,EAItB,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAIyT,EAAY7Y,EAASiF,GAMpC,YACI5D,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAIjB,eACI,OAAOA,KAAK8E,QAAQ3H,IAAI,aAAe,GAG3C,aAAaI,GACJA,GAA0B,iBAAVA,GAErByC,KAAK8E,QAAQ+E,IAAI,WAAYtM,GAGjC,YACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,SAG5B,UAAUI,GACNyC,KAAK8E,QAAQ+E,IAAI,QAAStM,GAG9B,gBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,eAAiB,EAG7C,cAAcI,GACVA,EAAQ2N,SAAS3N,EAAO,IAEnBotB,MAAMptB,IACPyC,KAAK8E,QAAQ+E,IAAI,aAActM,GAIvC,iBACI,OAAOyC,KAAK8E,QAAQ3H,IAAI,gBAAkB,EAG9C,eAAeI,GACXA,EAAQ2N,SAAS3N,EAAO,IAEnBotB,MAAMptB,IACPyC,KAAK8E,QAAQ+E,IAAI,cAAetM,GAIxC,aAAaV,EAAMU,GACf2G,MAAMsC,aAAa3J,EAAMU,GAEZ,qBAATV,IAEA4G,EAAKpB,qBACLP,QAAQC,UAAUC,KAAK,KACnB,MAAM4oB,EAAa5qB,KAAKsI,cAAcuiB,eAAettB,GACrD,IAAKqtB,EAAY,OAEjB,MAAME,EAAW9qB,KAAK+M,aAAa,YAAc,cAAgB/M,KAAK+M,aAAa,YAAc,aAAe,GAChH,IAAK+d,EAAU,OAEf,MAAMlsB,EAAS0B,EAAMrB,UAAUe,KAAK8G,UACpChF,QAAQf,IAAI,CACR,IAAIe,QAAQC,GAAWnD,EAAOmK,wBAAwBM,OAAO,+BAA+BrJ,KAAKsJ,UAAYoX,OAAO,CAACyI,MAAM,EAAMlgB,cAAc,IAAOG,KAAKrH,IAC3J6oB,EAAWG,4BACZ/oB,KAAKkH,IACJ,MAAM8hB,EAAwB,gBAAbF,EAA6B,OAAS,MACjDG,EAAa/hB,EAAI,GAAG,GACpBgiB,EAAWhiB,EAAI,GAErBhF,MAAMsC,aAAaskB,EAAUI,EAASF,GAAYC,EAAWD,GAAYC,EAAWxnB,EAAKxC,QAAQ6pB,OAClG5oB,MAAMC,QAAQC,SAClBF,MAAMC,QAAQC,SAK7B/F,EAAOD,QAAUob,G,gBChHjB,MAAM7T,EAAU,EAAQ,GAClBqX,EAAO,EAAQ,GACf1a,EAAQ,EAAQ,GAEhBoD,EAAO,IAAIsX,EAEjB,MAAMvD,UAA0B9T,EAI5B,gBAAgBhF,EAASiF,GAGrB,GAFetD,EAAMT,YAEVgE,aAAaC,oBAAqB,CAEzC,MAAMC,EAAWL,EAAKvG,MAEtB,GAAI4G,EAEA,OADAA,EAASC,OAAOrF,EAASiF,GAClBG,EAIf,OAAO,IAAI0T,EAAkB9Y,EAASiF,GAM1C,OAAOjF,EAASiF,GACZ5D,KAAKmrB,WAAaxsB,EAAQwb,cAE1BjW,MAAMF,OAAOrF,EAASiF,GAM1B,YACIM,MAAMwB,YAEN1F,KAAKmrB,WAAa,KAMtB,YACInrB,KAAK0F,YAEUpF,EAAMT,YAEVgE,aAAaC,qBAEpBJ,EAAK7B,IAAI7B,MAIjB,eACI,OAAOA,KAAKmrB,YAIpB9uB,EAAOD,QAAUqb,G,gBC/DjB,MAAMhE,EAAW,EAAQ,GACnBnT,EAAQ,EAAQ,GAEtB,MAAMoX,EACF,YAAYc,GACR,MACMH,EADS/X,EAAMT,YACEwY,SAAW,GAClCrY,KAAKsY,YAAcD,EAAQC,YAC3BtY,KAAKorB,WAAa5S,EAEO,YAArBxY,KAAKsY,aAAkD,WAArBtY,KAAKsY,YAEvCtY,KAAKkc,MAAQ5b,EAAMR,YAEnBE,KAAKkc,MAAQ,GAIrB,aAAamP,GACT,IAAKA,GAAkC,iBAAdA,EAAwB,OAAO,KAExDA,EAAYA,EAAUvhB,OAAOxI,MAAM,KAGnC,MAAMgqB,EAAgB,8CAA8CliB,KAAKiiB,EAAUjG,SACnF,IAAKkG,EAAe,OAAO,KAE3B,MAAMztB,GAAOytB,EAAc,IAAM,IAAIxhB,OAC/BvM,GAAS+tB,EAAc,IAAM,IAAIxhB,OAGvC,IAAI4F,EAAO,KACP6b,EAAS,KACTC,EAAU,KACVC,EAAS,KACTC,GAAS,EACTC,GAAW,EAEf,IAAK,IAAIlhB,KAAQ4gB,EAAW,CAExB,GADA5gB,EAAOA,EAAKX,QACPW,EAAM,SAEX,IAAK5M,EAAKN,GAASkN,EAAKnJ,MAAM,KAI9B,GAHAzD,GAAOA,GAAO,IAAIiM,OAAO9I,cACzBzD,GAASA,GAAS,IAAIuM,OAEjBjM,EAEL,OAAQA,GACR,IAAK,OACgB,MAAbN,EAAM,KAAYmS,EAAOnS,GAC7B,MACJ,IAAK,SACDA,EAAQA,EAAMuD,QAAQ,MAAO,IAAIE,cAC7BzD,IAAOguB,EAAShuB,GACpB,MACJ,IAAK,UACD,GAAIA,EAAO,CACP,MAAMoS,EAAYnP,KAAK+J,MAAMhN,GACzBoS,IAAW6b,EAAU7b,GAE7B,MACJ,IAAK,UACG,aAAakF,KAAKtX,KAAQkuB,EAAkB,KAARluB,GACxC,MACJ,IAAK,SACDmuB,GAAS,EACT,MACJ,IAAK,WACDC,GAAW,GAQnB,MAAO,CACH9tB,MAAKN,QAAOmS,OAAM6b,SAAQC,UAASC,SAAQC,SAAQC,YAO3D,cAAc9V,EAAM+V,GAChB,GAAI/V,IAAS+V,EAAc,OAAO,EAElC,MAAM7f,EAAQ8J,EAAKhT,QAAQ,IAAI+oB,GAE/B,OAAO7f,EAAQ,GAAK6f,EAAazrB,OAAS4L,EAAQ,IAAM8J,EAAK1V,OAMjE,YAAYuP,EAAMmc,GACd,OAAInc,IAASmc,IAEbA,EAA4B,MAAfA,EAAqB,GAAKA,EACG,IAAnCnc,EAAK7M,QAAWgpB,EAAH,MAMxB,eAAezS,GACX,MAAM5H,EAAMhR,KAAKgR,MAGjB,OAAsB,OAAlB4H,EAAOqS,OAAwBrS,EAAO0S,WAAa1S,EAAOqS,OAASja,EAGhD,OAAnB4H,EAAOoS,SAAyBpS,EAAOoS,QAAUha,EAQzD,UAAU4H,EAAQ1W,GAGd,KAFA0W,EAAS1B,EAAOnN,MAAM6O,IAET,OAEb,MAAM,SAAC7E,EAAQ,KAAEC,EAAI,SAAEC,GAAYhB,EAASvJ,QAAQxH,GAC9CmT,GAAStB,GAAY,KAAOC,EAAO,IAAMA,EAAO,KAAQ,GACxD9E,EAA+B,OAAvB+E,GAAY,IAAI,GAAaA,EAAW,IAEtD,GAAI2E,EAAOmS,QAEP,IAAKvrB,KAAK+rB,cAAclW,EAAMuD,EAAOmS,QAAS,YAG9CnS,EAAOmS,OAAS1V,EAIpB,IAAKuD,EAAO1J,MAA2B,MAAnB0J,EAAO1J,KAAK,GAAY,CACxC,MAAMsc,EAAYtc,EAAKuc,YAAY,KAEnC7S,EAAO1J,KAAqB,IAAdsc,EAAkBtc,EAAOA,EAAKnJ,OAAO,EAAGylB,GAI1D,MAAM5sB,EAAMY,KAAKkc,MACX0P,EAAexS,EAAOmS,OACtBM,EAAazS,EAAO1J,KACpBwc,EAAY9S,EAAOvb,IAEpBuB,EAAIwsB,KAAexsB,EAAIwsB,GAAgB,IACvCxsB,EAAIwsB,GAAcC,KAAazsB,EAAIwsB,GAAcC,GAAc,IAEpE,MAAMM,EAAY/sB,EAAIwsB,GAAcC,GAAYK,GAYhD,GAXA9S,EAAO0S,WAAaK,GAAaA,EAAUL,YAActrB,KAAKgR,MAE1DxR,KAAKosB,eAAehT,GAEpBha,EAAIwsB,GAAcC,GAAYK,GAAa9S,EACpC+S,UAEA/sB,EAAIwsB,GAAcC,GAAYK,GAIhB,WAArBlsB,KAAKsY,aAAiD,iBAArBtY,KAAKsY,YAAgC,CACtE,MAAMza,EAA2B,YAArBmC,KAAKsY,YAA4B,eAAetY,KAAKorB,WAAe,cAChF5hB,GAAG6iB,WAAW,CACVxuB,MACAmkB,KAAMhiB,KAAKssB,eAQvB,UAAU5pB,EAAK6pB,GACX,MAAM,SACFjY,EAAQ,SAAEC,EAAQ,KAAEC,EAAI,SAAEC,GAC1BhB,EAASvJ,QAAQxH,GACfmT,GAAStB,GAAY,KAAOC,EAAO,IAAMA,EAAO,KAAQ,GACxD9E,EAA+B,OAAvB+E,GAAY,IAAI,GAAaA,EAAW,IAChDvL,EAAM,GAEN9J,EAAMY,KAAKkc,MACXsQ,EAAaxvB,OAAOmC,KAAKC,GAE/B,IAAK,MAAMqtB,KAAcD,EAErB,GAAIxsB,KAAK+rB,cAAclW,EAAM4W,GAAa,CACtC,MAAMC,EAAYttB,EAAIqtB,IAAe,GAC/BE,EAAW3vB,OAAOmC,KAAKutB,GAE7B,IAAK,MAAME,KAAYD,EAEnB,GAAI3sB,KAAK6sB,YAAYnd,EAAMkd,GAAW,CAClC,MAAME,EAAU1tB,EAAIqtB,GAAYG,IAAa,GAE7C5vB,OAAOmC,KAAK2tB,GAASxqB,QAAQzE,IACzB,MAAMub,EAAS0T,EAAQjvB,GAElBub,IAGDA,EAAOsS,QAAuB,WAAbpX,GAAsC,SAAbA,IACzCiY,GAAmBnT,EAAOuS,UAAYrX,GAAyB,UAAbA,IAGnDtU,KAAKosB,eAAehT,GACpBlQ,EAAI9I,KAAKgZ,UAGFha,EAAIqtB,GAAYG,GAAU/uB,QAQzD,OAAOqL,EACFme,KAAK,CAACpZ,EAAGC,KACN,MAAM6e,EAAM9e,EAAE6d,WAAa5d,EAAE4d,WAE7B,OAAKiB,IACM9e,EAAEpQ,IAAMqQ,EAAErQ,KAAO,EAAI,KAKnCuB,IAAIga,GAAU,GAAGA,EAAOvb,OAAOub,EAAO7b,SACtC0K,KAAK,MAMd,YACI,IACI,OAAO4E,KAAKmgB,UAAUhtB,KAAKkc,OAC7B,MAAO1R,GAEL,OADArI,QAAQ8qB,IAAI,+BACL,IAOf,YAAYpsB,GACR,IAAIzB,EAAM,GACV,IACIA,EAAMyN,KAAKtC,MAAM1J,GACnB,MAAO2J,GACLrI,QAAQ8qB,IAAI,iCACZ7tB,EAAM,GAIV,MAAMotB,EAAaxvB,OAAOmC,KAAKC,GAE/B,IAAK,MAAMqtB,KAAcD,EAAY,CACjC,MAAME,EAAYttB,EAAIqtB,IAAe,GAC/BE,EAAW3vB,OAAOmC,KAAKutB,GAE7B,IAAK,MAAME,KAAYD,EAAU,CAC7B,MAAMG,EAAU1tB,EAAIqtB,GAAYG,IAAa,GAE7C5vB,OAAOmC,KAAK2tB,GAASxqB,QAAQzE,IACzB,MAAMub,EAAS0T,EAAQjvB,GAElBub,IAGApZ,KAAKkc,MAAMuQ,KAAazsB,KAAKkc,MAAMuQ,GAAc,IACjDzsB,KAAKkc,MAAMuQ,GAAYG,KAAW5sB,KAAKkc,MAAMuQ,GAAYG,GAAY,IACrE5sB,KAAKkc,MAAMuQ,GAAYG,GAAU/uB,KAAMmC,KAAKkc,MAAMuQ,GAAYG,GAAU/uB,GAAOub,SAOxG/c,EAAOD,QAAUsb,G,cC9MjBrb,EAAOD,QA/EP,MACI,cACI4D,KAAKktB,WAAa,GAClBltB,KAAKmtB,YAAc,GACnBntB,KAAKotB,QAAU,GACfptB,KAAKqtB,QAAU,GACfrtB,KAAKstB,WAAa,GAClBttB,KAAKutB,SAAW,GAEhBvtB,KAAKwtB,YAAc,GAMvB,QAAQ5N,GACJ5f,KAAKktB,WAAatN,EAAK6N,SACvBztB,KAAKmtB,YAAcvN,EAAK8N,QACxB1tB,KAAKotB,QAAUxN,EAAK+N,MACpB3tB,KAAKqtB,QAAUzN,EAAKgO,MACpB5tB,KAAKstB,WAAa1N,EAAKiO,SACvB7tB,KAAKutB,SAAW3N,EAAKkO,OAKrB,IAAIC,EACJ,GAAwB,QAApB/tB,KAAKstB,WAAsB,CAE3B,IAAIU,EAAgBhuB,KAAKutB,SAASjsB,MAAM,KAEpC0sB,EADAA,EAAc7tB,QAAU,EACR6tB,EAAc,GAAG1sB,MAAM,KAAK2G,KAAK,KAEjC,GAGpB8lB,EAAkB,GAAG/tB,KAAKotB,gBAAgBptB,KAAKotB,cAAcY,uBAE7DD,EAD2B,YAApB/tB,KAAKstB,WACM,UAAUttB,KAAKutB,aAAavtB,KAAKqtB,UAGjC,6BAGtBrtB,KAAKwtB,YAAc,GAAGxtB,KAAKiuB,oBAA8BF,qEAAgG/tB,KAAKmtB,wBAAwBntB,KAAKytB,WAM/L,gBACI,OAAOztB,KAAKwtB,YAGhB,kBACI,MAAO,UAGX,cACI,MAAO,WAGX,eACI,OAAOxtB,KAAKktB,WAGhB,gBACI,MAAO,CAACltB,KAAKktB,YAGjB,eACI,OAAOltB,KAAKstB,WAGhB,cACI,MAAO,W,gBC3Ef,MAAM3e,EAAc,EAAQ,GA8B5BtS,EAAOD,QA5BP,cAAqBuS,EACjB,cACIzK,QAEAlE,KAAKkuB,QAAU,EACfluB,KAAKmuB,SAAW,EAMpB,QAAQvO,GACJ5f,KAAKkuB,QAAUtO,EAAKG,YACpB/f,KAAKmuB,SAAWvO,EAAKE,aAMzB,YACI,OAAO9f,KAAKkuB,QAGhB,aACI,OAAOluB,KAAKmuB,Y,gBCvBpB,MAAM1a,EAAW,EAAQ,GACnB9E,EAAc,EAAQ,GAgI5BtS,EAAOD,QA9HP,cAAsBuS,EAClB,YAAYiM,GACR1W,QAEAlE,KAAK2e,WAAa/D,EAClB5a,KAAKouB,QAAU,CAAC,CACZzO,MAAO,KACP0O,MAAO,GACP3rB,IAAKkY,EAAS1F,OAElBlV,KAAKsuB,eAAiB,EAEtBtuB,KAAK2e,WAAWvR,iBAAiB,iBAAkByE,IAC/C7R,KAAKsuB,iBACLtuB,KAAKouB,QAAUpuB,KAAKouB,QAAQxY,MAAM,EAAG5V,KAAKsuB,gBAC1CtuB,KAAKouB,QAAQhuB,KAAK,CACduf,MAAO,KACP0O,MAAO,GACP3rB,IAAKmP,EAAIqD,SAQrB,cAAcxS,GACV,MAAM,SAAC4R,EAAQ,SAAEC,EAAQ,KAAEC,GAAQf,EAASvJ,QAAQxH,GAEpD,QAAS4R,GAAYtU,KAAK2e,WAAWrK,WAAaA,GAAeC,GAAYvU,KAAK2e,WAAWpK,WAAaA,IAAgBA,GAAaC,IAASxU,KAAK2e,WAAWnK,OAASA,GAM7K,UACIxU,KAAKouB,QAAU,CAAC,CACZzO,MAAO,KACP0O,MAAO,GACP3rB,IAAK1C,KAAK2e,WAAWzJ,OAEzBlV,KAAKsuB,eAAiB,EAM1B,YACI,MAAMC,EAAUvuB,KAAKouB,QAAQpuB,KAAKsuB,gBAClC,OAAOC,GAAWA,EAAQ5O,OAAS,KAGvC,aACI,OAAO3f,KAAKouB,QAAQjuB,OAGxB,OACIH,KAAKwuB,IAAI,GAGb,UACIxuB,KAAKwuB,GAAG,GAGZ,GAAG1L,GACC,GAAqB,iBAAVA,EAAoB,CAC3B,MAAM2L,EAAOzuB,KAAKsuB,eAAiBxL,EAE/B2L,GAAQ,GAAKA,EAAOzuB,KAAKouB,QAAQjuB,QAAUH,KAAKsuB,iBAAmBG,IACnEzuB,KAAKsuB,eAAiBG,EAEtBzuB,KAAK2e,WAAW/J,mBAChB5U,KAAK2e,WAAW+P,sBAAsB1uB,KAAKouB,QAAQpuB,KAAKsuB,gBAAgB5rB,KACxE1C,KAAK2e,WAAW3J,gBAAe,GAE/BhV,KAAK0G,UAAU,WAAY,CACvB+I,MAAO,CACHkQ,MAAO3f,KAAK2f,eAMxB3f,KAAK2e,WAAWgQ,SAIxB,UAAUhP,EAAQ,KAAM0O,EAAO3rB,GACtBA,GAAsB,iBAARA,GAEf1C,KAAK4uB,cAAclsB,KAEf2rB,GAA0B,iBAAVA,GAEhB7kB,GAAGqlB,sBAAsB,CAACR,UAI9BruB,KAAKsuB,iBACLtuB,KAAKouB,QAAUpuB,KAAKouB,QAAQxY,MAAM,EAAG5V,KAAKsuB,gBAG1CtuB,KAAK2e,WAAW+P,sBAAsBhsB,GAEtC1C,KAAKouB,QAAQhuB,KAAK,CAACuf,QAAO0O,QAAO3rB,IAAK1C,KAAK2e,WAAWzJ,QAI9D,aAAayK,EAAQ,KAAM0O,EAAO3rB,GACzBA,GAAsB,iBAARA,GAEf1C,KAAK4uB,cAAclsB,KAEf2rB,GAA0B,iBAAVA,GAEhB7kB,GAAGqlB,sBAAsB,CAACR,UAI9BruB,KAAK2e,WAAW+P,sBAAsBhsB,GAEtC1C,KAAKouB,QAAQpiB,OAAOhM,KAAKsuB,eAAgB,EAAG,CAAC3O,QAAO0O,QAAO3rB,IAAK1C,KAAK2e,WAAWzJ,W,gBC/H5F,MAAM5U,EAAQ,EAAQ,GAEtB,IAAIwuB,EAAkB,KAkGtBzyB,EAAOD,QAhGP,MACI,YAAYsC,GACRsB,KAAK8G,SAAWpI,EAChBsB,KAAK+uB,UAAY,GACjB/uB,KAAKgvB,iBAAmB,GAG5B,aACI,OAAO1uB,EAAMrB,UAAUe,KAAK8G,WAAa,KAG7C,eACI,OAAOxG,EAAMtB,YAAYgB,KAAK8G,WAAa,KAG/C,aACI,OAAOxG,EAAMT,YAGjB,qBACI,OAAOG,KAAKgvB,iBAMhB,KAAKtsB,GACkB,iBAARA,IAAkB1C,KAAK+uB,UAAYrsB,GAC9C,MAAM,OACFI,EAAM,MAAEmsB,EAAK,OAAEC,EAAM,QAAE7W,EAAU,IACjC/X,EAAMT,YACJsvB,EAAiB9W,EAAQ8W,gBAAkB,GAEjDnvB,KAAK+uB,UAAY/uB,KAAK+uB,WAAcjsB,EAASmsB,EAC7CjvB,KAAKgvB,iBAAmBG,EACxBnvB,KAAKpB,OAAOgc,SAASsF,QAAQlgB,KAAK+uB,WAClC/uB,KAAKpB,OAAOkf,QAAQoC,UAEf4O,IAEDA,EAAkB,GAElB9xB,OAAOmC,KAAK+vB,GAAQ5sB,QAAQkW,IACxB,MAAM4W,EAAa,GAEnBF,EAAO1W,GAAUlW,QAAQ+sB,IAErB,MAAMlK,EAAS,IAAI7C,OAAO+M,EAAQlK,OAAQkK,EAAQ1wB,SAClDywB,EAAWhvB,KAAK+kB,KAIpB2J,EAAgBtW,GAAY/D,IACxB,IAAK,MAAM0Q,KAAUiK,EAAY,CAC7B,MAAMzZ,EAAWwP,EAAO/b,KAAKqL,GAG7B,GAFA0Q,EAAO6G,UAAY,EAEfrW,EAAU,CAEV,MAAM2Z,EAAcH,EAAe3W,GACnC,MAAO,IAAI8W,EAAcA,EAAc,IAAM,WAAW9W,WAIhE,OAAO,SASvB,cAAc/D,GACV,MAAMtV,EAAOnC,OAAOmC,KAAK2vB,GACzB,IAAK,MAAMjxB,KAAOsB,EAAM,CACpB,MAAMowB,EAAWT,EAAgBjxB,GAAK4W,GAEtC,GAAI8a,EAAU,OAAOA,EAGzB,OAAO,KAMX,aAAa/tB,GACT,MAAM,QACF6W,EAAU,IACV/X,EAAMT,YAEV,SADkBwY,EAAQmX,WAAa,IACpBhuB,M,gBChG3B,MAAMsM,EAAQ,EAAQ,GAChBxN,EAAQ,EAAQ,GAsGtBjE,EAAOD,QApGP,MACI,YAAYwC,GACRoB,KAAKyvB,OAAS,GACdzvB,KAAK0vB,SAAW9wB,EAMpB,eACI,IACI,MAAMghB,EAAOpW,GAAGmmB,sBACGrvB,EAAMpB,iBAAmB,IACjCoD,QAAQ1D,IACXA,IACAA,EAAOmf,aAAa6R,OAAShQ,EAAKzgB,QAG5C,MAAOqL,GACLrI,QAAQoL,KAAK,4BAOrB,iBAAiB1P,EAAKgyB,EAAU/iB,EAAUuO,GACtC,IAAKA,GAASwU,IAAa/iB,EAAU,QAElBxM,EAAMpB,iBAAmB,IACjCoD,QAAQ1D,IACXA,GAAUA,IAAWoB,KAAK0vB,UAC1B9wB,EAAO8H,UAAU,UAAW,CACxB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,UACNuS,OAAQxQ,EACRmR,QAAS,CACLlS,MACAgyB,WACA/iB,WACAgjB,YAAa9vB,KACb0C,IAAK1C,KAAK0vB,SAAS9U,SAAS1F,YAQpD,WAAW/V,GACPa,KAAKyvB,OAAStwB,EAMlB,aACI,OAAOa,KAAKyvB,QAAUzvB,KAAKyvB,OAAOtvB,QAAU,EAGhD,IAAI4vB,GACA,MAAmB,iBAARA,IAAqBrZ,SAASqZ,IAAQA,EAAM,EAAU,KAE1D/vB,KAAKyvB,OAAOM,IAAQ,KAG/B,QAAQlyB,GACJ,OAAKA,GAAsB,iBAARA,GAEZ2L,GAAG6P,eAAexb,IAFmB,KAKhD,QAAQA,EAAKmkB,GACT,IAAKnkB,GAAsB,iBAARA,EAAkB,OACrCmkB,EAAO,GAAKA,EAEZ,MAAMlV,EAAWtD,GAAG6P,eAAexb,IAAQ,KAE3C2L,GAAGwmB,eAAenyB,EAAKmkB,GACvBhiB,KAAKiwB,eACLjwB,KAAKkwB,iBAAiBryB,EAAKmkB,EAAMlV,GAGrC,WAAWjP,GACP,IAAKA,GAAsB,iBAARA,EAAkB,OAErC,MAAMiP,EAAWtD,GAAG6P,eAAexb,IAAQ,KAE3C2L,GAAG2mB,kBAAkBtyB,GACrBmC,KAAKiwB,eACLjwB,KAAKkwB,iBAAiBryB,EAAK,KAAMiP,GAGrC,QACItD,GAAG4mB,mBACHpwB,KAAKiwB,eACLjwB,KAAKkwB,iBAAiB,KAAM,KAAM,MAAM,M,gBCnGhD,MAAMpiB,EAAQ,EAAQ,GAChBxN,EAAQ,EAAQ,GA+FtBjE,EAAOD,QA7FP,MACI,YAAYwC,GACRoB,KAAKyvB,OAAS,GACdzvB,KAAKkc,MAAQ,GACblc,KAAK0vB,SAAW9wB,EAMpB,iBAAiBf,EAAKgyB,EAAU/iB,EAAUuO,GACtC,IAAKA,GAASwU,IAAa/iB,EAAU,QAElBxM,EAAMpB,iBAAmB,IACjCoD,QAAQ1D,IACXA,GAAUA,IAAWoB,KAAK0vB,UAC1B9wB,EAAO8H,UAAU,UAAW,CACxB+I,MAAO,IAAI3B,EAAM,CACbjR,KAAM,UACNuS,OAAQxQ,EACRmR,QAAS,CACLlS,MACAgyB,WACA/iB,WACAgjB,YAAa9vB,KACb0C,IAAK1C,KAAK0vB,SAAS9U,SAAS1F,YAWpD,aACI,OAAOlV,KAAKyvB,OAAOtvB,OAGvB,IAAI4vB,GACA,MAAmB,iBAARA,IAAqBrZ,SAASqZ,IAAQA,EAAM,EAAU,KAE1D/vB,KAAKyvB,OAAOM,IAAQ,KAG/B,QAAQlyB,GACJ,OAAKA,GAAsB,iBAARA,GAEZmC,KAAKkc,MAAMre,IAF0B,KAKhD,QAAQA,EAAKmkB,GACT,IAAKnkB,GAAsB,iBAARA,EAAkB,OACrCmkB,EAAO,GAAKA,EAEZ,MAAMlV,EAAW9M,KAAKkc,MAAMre,IAAQ,KAEpCmC,KAAKkc,MAAMre,GAAOmkB,EAGlB,MAAMjW,EAAQ/L,KAAKyvB,OAAO5sB,QAAQhF,GAC9BkO,GAAS,GAAG/L,KAAKyvB,OAAOzjB,OAAOD,EAAO,GAC1C/L,KAAKyvB,OAAOrvB,KAAKvC,GAEjBmC,KAAKkwB,iBAAiBryB,EAAKmkB,EAAMlV,GAGrC,WAAWjP,GACP,IAAKA,GAAsB,iBAARA,EAAkB,OAErC,MAAMiP,EAAW9M,KAAKkc,MAAMre,IAAQ,YAE7BmC,KAAKkc,MAAMre,GAGlB,MAAMkO,EAAQ/L,KAAKyvB,OAAO5sB,QAAQhF,GAC9BkO,GAAS,GAAG/L,KAAKyvB,OAAOzjB,OAAOD,EAAO,GAE1C/L,KAAKkwB,iBAAiBryB,EAAK,KAAMiP,GAGrC,QACI9M,KAAKyvB,OAAOntB,QAAQzE,WACTmC,KAAKkc,MAAMre,KAGtBmC,KAAKyvB,OAAOtvB,OAAS,EAErBH,KAAKkwB,iBAAiB,KAAM,KAAM,MAAM,M,cCjEhD7zB,EAAOD,QA3BP,MACI,YAAYkiB,GACRte,KAAKqwB,aAAe/R,EAMxB,iBAEI,OADAnc,QAAQoL,KAAK,2CACN,KAGX,aAEI,OADApL,QAAQoL,KAAK,uCACN,KAGX,iBACI,OAAOvN,KAAKqwB,aAGhB,MACI,OAAQ,IAAI7vB,KAASR,KAAKqwB,gB,gBCvBlC,MAAM1hB,EAAc,EAAQ,GAEtB2hB,EAAiB,CAAC,UAAW,MAAO,OAAQ,OAAQ,MAAO,SAAU,QAAS,WAC9EC,EAAkB,CACpBC,IAAK,WACLC,IAAK,sBAELC,IAAK,KACLC,IAAK,UACLC,IAAK,WACLC,IAAK,gCACLC,IAAK,aACLC,IAAK,gBACLC,IAAK,kBAELC,IAAK,mBACLC,IAAK,oBACLC,IAAK,QACLC,IAAK,YACLC,IAAK,eACLC,IAAK,YACLC,IAAK,qBAELC,IAAK,cACLC,IAAK,eACLC,IAAK,mBACLC,IAAK,YACLC,IAAK,YACLC,IAAK,qBACLC,IAAK,iBACLC,IAAK,gCACLC,IAAK,kBACLC,IAAK,WACLC,IAAK,OACLC,IAAK,kBACLC,IAAK,sBACLC,IAAK,2BACLC,IAAK,uBACLC,IAAK,yBACLC,IAAK,+BACLC,IAAK,qBAELC,IAAK,wBACLC,IAAK,kBACLC,IAAK,cACLC,IAAK,sBACLC,IAAK,kBACLC,IAAK,8BAGT,MAAMC,UAAuBrkB,EACzB,YAAY/P,GACRsF,QAEAlE,KAAK0vB,SAAW9wB,EAChBoB,KAAKizB,SAAW,GAChBjzB,KAAKkzB,MAAQ,GACblzB,KAAKmzB,OAAS,KACdnzB,KAAKozB,SAAW,EAChBpzB,KAAKqzB,aAAe,GACpBrzB,KAAKszB,aAAeN,EAAeO,OACnCvzB,KAAKwzB,SAAW,CACZC,OAAQ,OAEZzzB,KAAK0zB,eAAiB,GACtB1zB,KAAK2zB,YAAc,KACnB3zB,KAAK4zB,WAAa,KAClB5zB,KAAK6zB,UAAY,EACjB7zB,KAAK8zB,YAAc,KAEnB9zB,KAAK+zB,cAAgB,KACrB/zB,KAAKg0B,iBAAmBh0B,KAAKg0B,iBAAiBl2B,KAAKkC,MACnDA,KAAKi0B,cAAgBj0B,KAAKi0B,cAAcn2B,KAAKkC,MAC7CA,KAAKk0B,kBAAoBl0B,KAAKk0B,kBAAkBp2B,KAAKkC,MAMzD,uBAAuBm0B,GACnB,MAAMC,EAAYD,IAAen0B,KAAKszB,aACtCtzB,KAAKszB,aAAea,EAEhBC,GAAWp0B,KAAK0G,UAAU,oBAMlC,gBACI,IAAK1G,KAAK0vB,WAAa1vB,KAAK0vB,SAAS7wB,SAEjC,YADAsD,QAAQoL,KAAK,kEAIbvN,KAAK6zB,YACL7zB,KAAK8zB,aAAe,IAAItzB,KAExB0hB,WAAW,KACFliB,KAAKozB,UAAYpzB,KAAKszB,eAAiBN,EAAeqB,OAEnDr0B,KAAK+zB,eAAe/zB,KAAK+zB,cAAcO,QAC3Ct0B,KAAKu0B,uBAAuBvB,EAAeqB,MAC3Cr0B,KAAK0G,UAAU,aAEpB1G,KAAK6zB,YAIZ7zB,KAAKozB,SAAW,EAChBpzB,KAAKqzB,aAAe,GACpBrzB,KAAKszB,aAAeN,EAAewB,OACnCx0B,KAAK2zB,YAAc,KACnB3zB,KAAK4zB,WAAa,KAGlB,MAAMa,EAASz3B,OAAO8N,OAAO,GAAI9K,KAAKwzB,UACtCiB,EAAOrb,OAASpZ,KAAK0vB,SAAS7wB,SAAS61B,SAGvC,IAAIhyB,EAAM1C,KAAKkzB,MACfxwB,GAA6B,IAAvBA,EAAIG,QAAQ,MAAe7C,KAAK0vB,SAAS9U,SAAS9X,OAASJ,EAAMA,EAEvE1C,KAAK+zB,cAAgBvqB,GAAGmrB,QAAQ,CAC5BjyB,MACAsf,KAAMhiB,KAAKmzB,QAAU,GACrBsB,SACAnU,OAAQtgB,KAAKizB,SACb2B,SAAkC,SAAxB50B,KAAK0zB,eAA4B,OAAS,OACpDmB,aAAsC,gBAAxB70B,KAAK0zB,eAAmC,cAAgB,OACtErK,QAASrpB,KAAKg0B,iBACdzK,KAAMvpB,KAAKi0B,cACXa,SAAU90B,KAAKk0B,oBAOvB,kBAAiB,KAAClS,EAAI,WAAE+S,EAAU,OAAEN,IAOhC,GANAz0B,KAAKozB,SAAW2B,EAChB/0B,KAAK2zB,YAAcc,EAEnBz0B,KAAKu0B,uBAAuBvB,EAAegC,kBAGvCh1B,KAAK0vB,SAAU,CACf,MAAM7U,EAAY4Z,EAAO,cAErB5Z,GAAkC,iBAAdA,GACpB7a,KAAK0vB,SAAS7wB,SAASo2B,YAAYpa,GAKvCmH,IACAhiB,KAAKu0B,uBAAuBvB,EAAekC,SAC3Cl1B,KAAK0G,UAAU,aACf1G,KAAK4zB,WAAa5R,EAClBhiB,KAAK0G,UAAU,YAOvB,eAAc,OAACyuB,IACXn1B,KAAKozB,SAAW,EAChBpzB,KAAKqzB,aAAe8B,EAEpBn1B,KAAK0G,UAAU,SAMnB,oBACI1G,KAAK8zB,YAAc,KACnB9zB,KAAK+zB,cAAgB,KACrB/zB,KAAKu0B,uBAAuBvB,EAAeqB,MAEvCr0B,KAAKozB,UACLpzB,KAAK0G,UAAU,QAOvB,cACI,OAAO1G,KAAK6zB,UAGhB,YAAYuB,GACe,iBAAZA,IAAyB1e,SAAS0e,IAAYA,GAAW,IAEpEp1B,KAAK6zB,UAAYuB,GAGrB,aACI,OAAOp1B,KAAKozB,SAGhB,iBACI,OAAIpzB,KAAKszB,eAAiBN,EAAeO,QAAUvzB,KAAKszB,eAAiBN,EAAewB,OAAe,GAEhGjE,EAAgBvwB,KAAKozB,SAAW,KAAOpzB,KAAKqzB,cAAgB,GAGvE,iBACI,OAAOrzB,KAAKszB,aAGhB,mBACI,OAAOtzB,KAAK0zB,eAGhB,iBAAiBn2B,GACQ,iBAAVA,IAEXyC,KAAK0zB,eAAiBn2B,GAG1B,mBACI,OAAKyC,KAAK0zB,gBAA0C,SAAxB1zB,KAAK0zB,eAI1B,KAHI1zB,KAAK4zB,WAMpB,eACI,OAAO5zB,KAAK4zB,WAGhB,QACQ5zB,KAAK+zB,gBACL/zB,KAAK+zB,cAAcO,QACnBt0B,KAAK0G,UAAU,UAIvB,wBACI,OAAI1G,KAAKszB,eAAiBN,EAAeO,QAAUvzB,KAAKszB,eAAiBN,EAAewB,QAAWx0B,KAAK2zB,YAEjG32B,OAAOmC,KAAKa,KAAK2zB,aACnBv0B,IAAIvB,GAAO,GAAGA,MAAQmC,KAAK2zB,YAAY91B,MACvCoK,KAAK,QAJkH,GAOhI,kBAAkBpL,GACd,GAAImD,KAAKszB,eAAiBN,EAAeO,QAAUvzB,KAAKszB,eAAiBN,EAAewB,SAAWx0B,KAAK2zB,YAAa,OAAO,KAG5H,MAAM91B,EAAMb,OAAOmC,KAAKa,KAAK2zB,aAAa0B,KAAK5qB,GAAQA,EAAKzJ,gBAAkBnE,EAAKmE,eAC7EzD,EAAQM,EAAMmC,KAAK2zB,YAAY91B,GAAO,KAE5C,MAAwB,iBAAVN,EAAqBA,EAAQ,KAG/C,KAAK+iB,EAAQ5d,GACa,iBAAX4d,IAAqBA,EAASA,EAAOnf,eAE5CmvB,EAAeztB,QAAQyd,GAAU,GAChC5d,GAAsB,iBAARA,IAEnB1C,KAAKizB,SAAW3S,EAChBtgB,KAAKkzB,MAAQxwB,EAEb1C,KAAKu0B,uBAAuBvB,EAAewB,SAG/C,iBAAiBC,EAAQl3B,GACC,iBAAXk3B,GAAwC,iBAAVl3B,IACrCyC,KAAKwzB,SAASiB,GAAUl3B,GAIhC,KAAKykB,GACGhiB,KAAKszB,eAAiBN,EAAewB,SAEzCx0B,KAAKmzB,OAASnR,EACdhiB,KAAKs1B,kBAIbtC,EAAeO,OAAS,EACxBP,EAAewB,OAAS,EACxBxB,EAAegC,iBAAmB,EAClChC,EAAekC,QAAU,EACzBlC,EAAeqB,KAAO,EAEtBh4B,EAAOD,QAAU42B","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const cache = require('./cache')\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\nmodule.exports = {\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n}\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) this.parentNode.$$trigger('$$childNodesUpdate')\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return this\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                    // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n        return this.$_attrs.get(name)\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            handlers.forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers) {\n                    namespaceHandlers.forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_cancelable = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n    'WX-COMPONENT': WxComponent,\n}\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 判断是否是内置组件\n */\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n            type: Node.DOCUMENT_NODE,\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.tagName = 'wx-component'\n            options.attrs = options.attrs || {}\n            options.attrs.behavior = wxComponentName\n            return WxComponent.$$create(options, tree)\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst LocalStorage = require('./bom/local-storage')\nconst SessionStorage = require('./bom/session-storage')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const timeOrigin = +new Date()\n        const that = this\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(this)\n        this.$_sessionStorage = new SessionStorage(this)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {\n            constructor() {\n                super(that)\n            }\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document.$$imageConstructor\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (node.tagName !== tag.toUpperCase()) return false\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签\n            const tagName = tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    content = content.substring(index + 3)\n                    if (handler.comment) handler.comment(content)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const index = content.indexOf('<')\n\n                const text = index < 0 ? content : content.substring(0, index)\n                content = index < 0 ? '' : content.substring(index)\n\n                if (handler.text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = this.width\n                this.$_node.height = this.height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        return this.$_attrs.get('value')\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\r\nconst cache = require('../util/cache')\r\n\r\nclass LocalStorage {\r\n    constructor(window) {\r\n        this.$_keys = []\r\n        this.$_window = window\r\n    }\r\n\r\n    /**\r\n     * 更新 storage 信息\r\n     */\r\n    $_updateInfo() {\r\n        try {\r\n            const info = wx.getStorageInfoSync()\r\n            const windowList = cache.getWindowList() || []\r\n            windowList.forEach(window => {\r\n                if (window) {\r\n                    window.localStorage.$$keys = info.keys\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.warn('getStorageInfoSync fail')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发 window 的 storage 事件\r\n     */\r\n    $_triggerStorage(key, newValue, oldValue, force) {\r\n        if (!force && newValue === oldValue) return\r\n\r\n        const windowList = cache.getWindowList() || []\r\n        windowList.forEach(window => {\r\n            if (window && window !== this.$_window) {\r\n                window.$$trigger('storage', {\r\n                    event: new Event({\r\n                        name: 'storage',\r\n                        target: window,\r\n                        $$extra: {\r\n                            key,\r\n                            newValue,\r\n                            oldValue,\r\n                            storageArea: this,\r\n                            url: this.$_window.location.href,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    set $$keys(keys) {\r\n        this.$_keys = keys\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get length() {\r\n        return this.$_keys && this.$_keys.length || 0\r\n    }\r\n\r\n    key(num) {\r\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\r\n\r\n        return this.$_keys[num] || null\r\n    }\r\n\r\n    getItem(key) {\r\n        if (!key || typeof key !== 'string') return null\r\n\r\n        return wx.getStorageSync(key) || null\r\n    }\r\n\r\n    setItem(key, data) {\r\n        if (!key || typeof key !== 'string') return\r\n        data = '' + data\r\n\r\n        const oldValue = wx.getStorageSync(key) || null\r\n\r\n        wx.setStorageSync(key, data)\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(key, data, oldValue)\r\n    }\r\n\r\n    removeItem(key) {\r\n        if (!key || typeof key !== 'string') return\r\n\r\n        const oldValue = wx.getStorageSync(key) || null\r\n\r\n        wx.removeStorageSync(key)\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(key, null, oldValue)\r\n    }\r\n\r\n    clear() {\r\n        wx.clearStorageSync()\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(null, null, null, true)\r\n    }\r\n}\r\n\r\nmodule.exports = LocalStorage\r\n","const Event = require('../event/event')\r\nconst cache = require('../util/cache')\r\n\r\nclass SessionStorage {\r\n    constructor(window) {\r\n        this.$_keys = []\r\n        this.$_map = {}\r\n        this.$_window = window\r\n    }\r\n\r\n    /**\r\n     * 触发 window 的 storage 事件\r\n     */\r\n    $_triggerStorage(key, newValue, oldValue, force) {\r\n        if (!force && newValue === oldValue) return\r\n\r\n        const windowList = cache.getWindowList() || []\r\n        windowList.forEach(window => {\r\n            if (window && window !== this.$_window) {\r\n                window.$$trigger('storage', {\r\n                    event: new Event({\r\n                        name: 'storage',\r\n                        target: window,\r\n                        $$extra: {\r\n                            key,\r\n                            newValue,\r\n                            oldValue,\r\n                            storageArea: this,\r\n                            url: this.$_window.location.href,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get length() {\r\n        return this.$_keys.length\r\n    }\r\n\r\n    key(num) {\r\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\r\n\r\n        return this.$_keys[num] || null\r\n    }\r\n\r\n    getItem(key) {\r\n        if (!key || typeof key !== 'string') return null\r\n\r\n        return this.$_map[key] || null\r\n    }\r\n\r\n    setItem(key, data) {\r\n        if (!key || typeof key !== 'string') return\r\n        data = '' + data\r\n\r\n        const oldValue = this.$_map[key] || null\r\n\r\n        this.$_map[key] = data\r\n\r\n        // 调整顺序\r\n        const index = this.$_keys.indexOf(key)\r\n        if (index >= 0) this.$_keys.splice(index, 1)\r\n        this.$_keys.push(key)\r\n\r\n        this.$_triggerStorage(key, data, oldValue)\r\n    }\r\n\r\n    removeItem(key) {\r\n        if (!key || typeof key !== 'string') return\r\n\r\n        const oldValue = this.$_map[key] || null\r\n\r\n        delete this.$_map[key]\r\n\r\n        // 删除 key\r\n        const index = this.$_keys.indexOf(key)\r\n        if (index >= 0) this.$_keys.splice(index, 1)\r\n\r\n        this.$_triggerStorage(key, null, oldValue)\r\n    }\r\n\r\n    clear() {\r\n        this.$_keys.forEach(key => {\r\n            delete this.$_map[key]\r\n        })\r\n\r\n        this.$_keys.length = 0\r\n\r\n        this.$_triggerStorage(null, null, null, true)\r\n    }\r\n}\r\n\r\nmodule.exports = SessionStorage\r\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const EventTarget = require('../event/event-target')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(window) {\n        super()\n\n        this.$_window = window\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = this.$_window.document.$$cookie\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? this.$_window.location.origin + url : url\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (this.$_window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                this.$_window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}
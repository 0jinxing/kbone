{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/pool.js","webpack:///./src/util/tool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/local-storage.js","webpack:///./src/bom/session-storage.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","size","this","$_size","$_cache","length","push","pop","cache","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","flushThrottleCache","forEach","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","indexOf","origin","decodeContent","content","isTagNameSupport","tagName","escapeForHtmlGeneration","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","instance","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$$trigger","node","isRemove","id","$_pageId","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","trim","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","console","error","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","remove","namespace","warn","getAttribute","hasAttribute","removeAttribute","otherElement","stack","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","args","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","path","timeStamp","touches","changedTouches","bubbles","$$extra","currentTarget","$$canBubble","behavior","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","$$immediateStop","handler","_namespace","namespaceHandlers","last","now","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","eventPhase","$_detail","detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","slice","host","hostStart","hostEnd","isEnd","char","charCodeAt","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_MAP","WX_CUSTOM_COMPONENT_MAP","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","cookie","getStorageSync","$$cookieInstance","deserialize","URL","wxComponent","$_visibilityState","documentElement","originTagName","wxComponentName","constructorClass","notNeedPrefix","hasPrefix","checkIsWxComponent","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","defaultView","location","setCookie","$$createComment","addEventListener","removeEventListener","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","oldValue","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","LocalStorage","SessionStorage","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","performance","screen","history","localStorage","sessionStorage","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","Error","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","data","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","PSEUDO_CHECK","checked","selected","disabled","enabled","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","checkHit","foundCurrent","tag","pseudo","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrName","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","match","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","findIndex","option","HTMLOptionElement","label","onDealWithNotSupportDom","isNaN","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","JSON","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","$_keys","$_window","getStorageInfoSync","$$keys","newValue","storageArea","num","setStorageSync","$_updateInfo","$_triggerStorage","removeStorageSync","clearStorageSync","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","XMLHttpRequest","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","find","$_callRequest"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const cache = require('./cache')\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(() => {\n            // ignore\n        })\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\nmodule.exports = {\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n}\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) this.parentNode.$$trigger('$$childNodesUpdate')\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject())).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return this\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n        return this.$_attrs.get(name)\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            handlers.forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers) {\n                    namespaceHandlers.forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_cancelable = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n    'WX-COMPONENT': WxComponent,\n}\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video',\n    'map',\n    'canvas',\n    'ad', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 判断是否是内置组件\n */\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n            type: Node.DOCUMENT_NODE,\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.tagName = 'wx-component'\n            options.attrs = options.attrs || {}\n            options.attrs.behavior = wxComponentName\n            return WxComponent.$$create(options, tree)\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst LocalStorage = require('./bom/local-storage')\nconst SessionStorage = require('./bom/session-storage')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const timeOrigin = +new Date()\n        const that = this\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(this)\n        this.$_sessionStorage = new SessionStorage(this)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {\n            constructor() {\n                super(that)\n            }\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document.$$imageConstructor\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (node.tagName !== tag.toUpperCase()) return false\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签\n            const tagName = tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    content = content.substring(index + 3)\n                    if (handler.comment) handler.comment(content)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const index = content.indexOf('<')\n\n                const text = index < 0 ? content : content.substring(0, index)\n                content = index < 0 ? '' : content.substring(index)\n\n                if (handler.text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = this.width\n                this.$_node.height = this.height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        return this.$_attrs.get('value')\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            const scrollItem = this.ownerDocument.getElementById(value)\r\n            if (!scrollItem) return\r\n\r\n            const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n            if (!propName) return\r\n\r\n            const window = cache.getWindow(this.$_pageId)\r\n            Promise.all([\r\n                new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                scrollItem.$$getBoundingClientRect()\r\n            ]).then(res => {\r\n                const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                const scrollRect = res[0][0]\r\n                const itemRect = res[1]\r\n\r\n                super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\r\nconst cache = require('../util/cache')\r\n\r\nclass LocalStorage {\r\n    constructor(window) {\r\n        this.$_keys = []\r\n        this.$_window = window\r\n    }\r\n\r\n    /**\r\n     * 更新 storage 信息\r\n     */\r\n    $_updateInfo() {\r\n        try {\r\n            const info = wx.getStorageInfoSync()\r\n            const windowList = cache.getWindowList() || []\r\n            windowList.forEach(window => {\r\n                if (window) {\r\n                    window.localStorage.$$keys = info.keys\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.warn('getStorageInfoSync fail')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发 window 的 storage 事件\r\n     */\r\n    $_triggerStorage(key, newValue, oldValue, force) {\r\n        if (!force && newValue === oldValue) return\r\n\r\n        const windowList = cache.getWindowList() || []\r\n        windowList.forEach(window => {\r\n            if (window && window !== this.$_window) {\r\n                window.$$trigger('storage', {\r\n                    event: new Event({\r\n                        name: 'storage',\r\n                        target: window,\r\n                        $$extra: {\r\n                            key,\r\n                            newValue,\r\n                            oldValue,\r\n                            storageArea: this,\r\n                            url: this.$_window.location.href,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    set $$keys(keys) {\r\n        this.$_keys = keys\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get length() {\r\n        return this.$_keys && this.$_keys.length || 0\r\n    }\r\n\r\n    key(num) {\r\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\r\n\r\n        return this.$_keys[num] || null\r\n    }\r\n\r\n    getItem(key) {\r\n        if (!key || typeof key !== 'string') return null\r\n\r\n        return wx.getStorageSync(key) || null\r\n    }\r\n\r\n    setItem(key, data) {\r\n        if (!key || typeof key !== 'string') return\r\n        data = '' + data\r\n\r\n        const oldValue = wx.getStorageSync(key) || null\r\n\r\n        wx.setStorageSync(key, data)\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(key, data, oldValue)\r\n    }\r\n\r\n    removeItem(key) {\r\n        if (!key || typeof key !== 'string') return\r\n\r\n        const oldValue = wx.getStorageSync(key) || null\r\n\r\n        wx.removeStorageSync(key)\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(key, null, oldValue)\r\n    }\r\n\r\n    clear() {\r\n        wx.clearStorageSync()\r\n        this.$_updateInfo()\r\n        this.$_triggerStorage(null, null, null, true)\r\n    }\r\n}\r\n\r\nmodule.exports = LocalStorage\r\n","const Event = require('../event/event')\r\nconst cache = require('../util/cache')\r\n\r\nclass SessionStorage {\r\n    constructor(window) {\r\n        this.$_keys = []\r\n        this.$_map = {}\r\n        this.$_window = window\r\n    }\r\n\r\n    /**\r\n     * 触发 window 的 storage 事件\r\n     */\r\n    $_triggerStorage(key, newValue, oldValue, force) {\r\n        if (!force && newValue === oldValue) return\r\n\r\n        const windowList = cache.getWindowList() || []\r\n        windowList.forEach(window => {\r\n            if (window && window !== this.$_window) {\r\n                window.$$trigger('storage', {\r\n                    event: new Event({\r\n                        name: 'storage',\r\n                        target: window,\r\n                        $$extra: {\r\n                            key,\r\n                            newValue,\r\n                            oldValue,\r\n                            storageArea: this,\r\n                            url: this.$_window.location.href,\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get length() {\r\n        return this.$_keys.length\r\n    }\r\n\r\n    key(num) {\r\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\r\n\r\n        return this.$_keys[num] || null\r\n    }\r\n\r\n    getItem(key) {\r\n        if (!key || typeof key !== 'string') return null\r\n\r\n        return this.$_map[key] || null\r\n    }\r\n\r\n    setItem(key, data) {\r\n        if (!key || typeof key !== 'string') return\r\n        data = '' + data\r\n\r\n        const oldValue = this.$_map[key] || null\r\n\r\n        this.$_map[key] = data\r\n\r\n        // 调整顺序\r\n        const index = this.$_keys.indexOf(key)\r\n        if (index >= 0) this.$_keys.splice(index, 1)\r\n        this.$_keys.push(key)\r\n\r\n        this.$_triggerStorage(key, data, oldValue)\r\n    }\r\n\r\n    removeItem(key) {\r\n        if (!key || typeof key !== 'string') return\r\n\r\n        const oldValue = this.$_map[key] || null\r\n\r\n        delete this.$_map[key]\r\n\r\n        // 删除 key\r\n        const index = this.$_keys.indexOf(key)\r\n        if (index >= 0) this.$_keys.splice(index, 1)\r\n\r\n        this.$_triggerStorage(key, null, oldValue)\r\n    }\r\n\r\n    clear() {\r\n        this.$_keys.forEach(key => {\r\n            delete this.$_map[key]\r\n        })\r\n\r\n        this.$_keys.length = 0\r\n\r\n        this.$_triggerStorage(null, null, null, true)\r\n    }\r\n}\r\n\r\nmodule.exports = SessionStorage\r\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const EventTarget = require('../event/event-target')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(window) {\n        super()\n\n        this.$_window = window\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = this.$_window.document.$$cookie\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? this.$_window.location.origin + url : url\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (this.$_window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                this.$_window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}
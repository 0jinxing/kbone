{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"miniprogram-render\"","webpack:///./src/util/component.js","webpack:///./src/base.js","webpack:///./src/util/tool.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mp","cache","tool","$$adapter","dealWithDevToolsEvt","evt","detail","undefined","markerId","controlId","longitude","latitude","dealWithReactAttr","JSON","parse","err","dealWithEvt","currentTarget","dataset","privateNodeId","target","wxComponentMap","wxCompName","properties","domNode","window","getWindow","$$pageId","src","completeURL","location","origin","handles","this","callSingleEvent","getAttribute","isNaN","canBeUserChanged","getDomNodeFromEvt","$$setAttributeWithoutUpdate","scrollTop","scrollLeft","_oldValues","scrollIntoView","callSimpleEvent","swiper","parseFloat","current","view","icon","progress","text","button","editor","form","_formId","formId","INPUT","type","placeholder","disabled","maxlength","callEvent","_inputOldValue","focus","pageId","checked","otherDomNodes","document","querySelectorAll","otherDomNode","indexOf","picker","tagName","options","map","item","label","split","selectedIndex","parseInt","$$resetOptions","slider","switch","TEXTAREA","_textareaOldValue","navigator","camera","image","Array","isArray","length","url","VIDEO","controls","autoplay","loop","muted","poster","currentTime","buffered","causedBy","rotate","skew","CANVAS","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","ad","capture","catch","animation","SELECT","wxSubComponentMap","x","y","scale","scaleValue","wxComponentKeys","keys","wxCompNameMap","wxCompData","wxCompHandles","forEach","assign","_","component","Event","EventTarget","USE_TEMPLATE","DOM_SUB_TREE_LEVEL","console","warn","version","wx","getSystemInfoSync","SDKVersion","behaviors","compareVersion","push","Behavior","inCover","Boolean","data","wxCustomCompName","childNodes","domSubTreeLevel","getConfig","optimization","nodeId","privatePageId","getNode","getDocument","onChildNodesUpdate","throttle","$$clearEvent","$$namespace","addEventListener","onSelfNodeUpdate","init","filterNodes","dealWithLeafAndSimple","_wxComponent","setData","methods","behavior","checkComponentAttr","checkDiffChildNodes","childNodeStack","concat","childNode","pop","isImage","isLeaf","isSimple","useTemplate","$$trigger","subChildNode","newData","eventName","event","timeStamp","touches","changedTouches","eventPhase","AT_TARGET","$$extra","extra","$$process","bubbles","isCapture","setTimeout","cancelable","formAttr","getElementById","findParentNode","inputList","textareaList","switchList","filter","sliderList","pickerList","formData","$$from","setAttribute","forValue","targetDomNode","querySelector","checkEventAccessDomNode","href","open","$$checkEvent","originNodeId","ELEMENT_DIFF_KEYS","TEXT_NODE_DIFF_KEYS","NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT","RELATION_PARENT","RELATION_CHILD","NEET_RENDER_TO_CUSTOM_ELEMENT","isEqual","a","b","destData","oldData","extraClass","attrs","newValue","oldValues","isOldValuesChanged","forceUpdate","newId","id","newClass","$$nodeId","className","newStyle","style","cssText","newHidden","hidden","level","index","findIndex","child","domInfo","$$domInfo","compName","webp","lazyLoad","showMenuByLongpress","templateName","isTagNameSupport","hasChildren","relationIndex","copyChildNode","grandchild","copyGrandchildNode","touchStart","$$hasEventHandler","touchMove","touchEnd","touchCancel","content","textContent","children","join","newChildNodes","oldChildNodes","len","newChild","oldChild","oldValue","objectKeys","objectKey","newGrandChildNodes","oldGrandChildNodes","originChildNode","dest","ownerDocument","body","parentNode","checkParentNode","toLowerCase","v1","v2","Math","max","num1","num2"],"mappings":"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","file":"base.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"miniprogram-render\");","const mp = require('miniprogram-render')\n\nconst {\n    cache,\n    tool,\n} = mp.$$adapter\n\n/**\n * 兼容开发者工具 bug\n */\nfunction dealWithDevToolsEvt(evt) {\n    if (!evt.detail) evt.detail = {}\n    if (evt.markerId !== undefined) evt.detail.markerId = evt.markerId\n    if (evt.controlId !== undefined) evt.detail.controlId = evt.controlId\n    if (evt.name !== undefined) evt.detail.name = evt.name\n    if (evt.longitude !== undefined) evt.detail.longitude = evt.longitude\n    if (evt.latitude !== undefined) evt.detail.latitude = evt.latitude\n}\n\n/**\n * 兼容 react\n */\nfunction dealWithReactAttr(value) {\n    if (typeof value === 'string') {\n        // react 会直接将属性值转成字符串\n        try {\n            value = JSON.parse(value)\n        } catch (err) {\n            value = undefined\n        }\n    }\n\n    return value\n}\n\n/**\n * 兼容 canvas 相关 touch 事件，基础库没有提供 currentTarget 的问题\n */\nfunction dealWithEvt(evt) {\n    if (!evt.currentTarget || !evt.currentTarget.dataset.privateNodeId) {\n        // 取 target\n        evt.currentTarget = evt.currentTarget || {dataset: {}}\n        evt.currentTarget.dataset.privateNodeId = evt.target.dataset.privateNodeId\n    }\n}\n\nconst wxComponentMap = {\n    // 视图容器\n    'cover-image': {\n        wxCompName: 'cover-image',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n            },\n        }],\n        handles: {\n            onCoverImageLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onCoverImageError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'cover-view': {\n        wxCompName: 'cover-view',\n        properties: [{\n            name: 'scrollTop',\n            get(domNode) {\n                const value = domNode.getAttribute('scroll-top')\n                return value !== undefined && !isNaN(+value) ? +value : ''\n            },\n        }],\n    },\n    'movable-area': {\n        wxCompName: 'movable-area',\n        properties: [{\n            name: 'scaleArea',\n            get(domNode) {\n                return !!domNode.getAttribute('scale-area')\n            },\n        }],\n    },\n    'scroll-view': {\n        wxCompName: 'scroll-view',\n        properties: [{\n            name: 'scrollX',\n            get(domNode) {\n                return !!domNode.getAttribute('scroll-x')\n            },\n        }, {\n            name: 'scrollY',\n            get(domNode) {\n                return !!domNode.getAttribute('scroll-y')\n            },\n        }, {\n            name: 'upperThreshold',\n            get(domNode) {\n                return domNode.getAttribute('upper-threshold') || '50'\n            },\n        }, {\n            name: 'lowerThreshold',\n            get(domNode) {\n                return domNode.getAttribute('lower-threshold') || '50'\n            },\n        }, {\n            name: 'scrollTop',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.getAttribute('scroll-top') || ''\n            },\n        }, {\n            name: 'scrollLeft',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.getAttribute('scroll-left') || ''\n            },\n        }, {\n            name: 'scrollWithAnimation',\n            get(domNode) {\n                return !!domNode.getAttribute('scroll-with-animation')\n            },\n        }, {\n            name: 'enableBackToTop',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-back-to-top')\n            },\n        }, {\n            name: 'enableFlex',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-flex')\n            },\n        }, {\n            name: 'scrollAnchoring',\n            get(domNode) {\n                return !!domNode.getAttribute('scroll-anchoring')\n            },\n        }, {\n            name: 'refresherEnabled',\n            get(domNode) {\n                return !!domNode.getAttribute('refresher-enabled')\n            },\n        }, {\n            name: 'refresherThreshold',\n            get(domNode) {\n                return domNode.getAttribute('refresher-threshold') || '45'\n            },\n        }, {\n            name: 'refresherDefaultStyle',\n            get(domNode) {\n                return domNode.getAttribute('refresher-default-style') || 'black'\n            },\n        }, {\n            name: 'refresherBackground',\n            get(domNode) {\n                return domNode.getAttribute('refresher-background') || '#FFF'\n            },\n        }, {\n            name: 'refresherTriggered',\n            get(domNode) {\n                return !!domNode.getAttribute('refresher-triggered')\n            },\n        }],\n        handles: {\n            onScrollViewScrolltoupper(evt) {\n                this.callSingleEvent('scrolltoupper', evt)\n            },\n\n            onScrollViewScrolltolower(evt) {\n                this.callSingleEvent('scrolltolower', evt)\n            },\n\n            onScrollViewScroll(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('scroll-into-view', '')\n                domNode.$$setAttributeWithoutUpdate('scroll-top', evt.detail.scrollTop)\n                domNode.$$setAttributeWithoutUpdate('scroll-left', evt.detail.scrollLeft)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.scrollIntoView = ''\n                domNode._oldValues.scrollTop = evt.detail.scrollTop\n                domNode._oldValues.scrollLeft = evt.detail.scrollLeft\n\n                this.callSimpleEvent('scroll', evt)\n            },\n\n            onScrollViewRefresherPulling(evt) {\n                this.callSingleEvent('refresherpulling', evt)\n            },\n\n            onScrollViewRefresherRefresh(evt) {\n                this.callSingleEvent('refresherrefresh', evt)\n            },\n\n            onScrollViewRefresherRestore(evt) {\n                this.callSingleEvent('refresherrestore', evt)\n            },\n\n            onScrollViewRefresherAbort(evt) {\n                this.callSingleEvent('refresherabort', evt)\n            },\n\n        },\n    },\n    swiper: {\n        wxCompName: 'swiper',\n        properties: [{\n            name: 'indicatorDots',\n            get(domNode) {\n                return !!domNode.getAttribute('indicator-dots')\n            },\n        }, {\n            name: 'indicatorColor',\n            get(domNode) {\n                return domNode.getAttribute('indicator-color') || 'rgba(0, 0, 0, .3)'\n            },\n        }, {\n            name: 'indicatorActiveColor',\n            get(domNode) {\n                return domNode.getAttribute('indicator-active-color') || '#000000'\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return !!domNode.getAttribute('autoplay')\n            },\n        }, {\n            name: 'current',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('current') || 0\n            },\n        }, {\n            name: 'interval',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('interval'))\n                return !isNaN(value) ? value : 5000\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('duration'))\n                return !isNaN(value) ? value : 500\n            },\n        }, {\n            name: 'circular',\n            get(domNode) {\n                return !!domNode.getAttribute('circular')\n            },\n        }, {\n            name: 'vertical',\n            get(domNode) {\n                return !!domNode.getAttribute('vertical')\n            },\n        }, {\n            name: 'previousMargin',\n            get(domNode) {\n                return domNode.getAttribute('previous-margin') || '0px'\n            },\n        }, {\n            name: 'nextMargin',\n            get(domNode) {\n                return domNode.getAttribute('next-margin') || '0px'\n            },\n        }, {\n            name: 'displayMultipleItems',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('display-multiple-items'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'skipHiddenItemLayout',\n            get(domNode) {\n                return !!domNode.getAttribute('skip-hidden-item-layout')\n            },\n        }, {\n            name: 'easingFunction',\n            get(domNode) {\n                return domNode.getAttribute('easing-function') || 'default'\n            },\n        }],\n        handles: {\n            onSwiperChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('current', evt.detail.current)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.current = evt.detail.current\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onSwiperTransition(evt) {\n                this.callSingleEvent('transition', evt)\n            },\n\n            onSwiperAnimationfinish(evt) {\n                this.callSingleEvent('animationfinish', evt)\n            },\n        },\n    },\n    view: {\n        wxCompName: 'view',\n        properties: [{\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'none'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return !!domNode.getAttribute('hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-start-time'))\n                return !isNaN(value) ? value : 50\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n                return !isNaN(value) ? value : 400\n            },\n        }],\n    },\n    // 基础内容\n    icon: {\n        wxCompName: 'icon',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'size',\n            get(domNode) {\n                return domNode.getAttribute('size') || '23'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || ''\n            },\n        }],\n    },\n    progress: {\n        wxCompName: 'progress',\n        properties: [{\n            name: 'percent',\n            get(domNode) {\n                return +domNode.getAttribute('percent') || 0\n            },\n        }, {\n            name: 'showInfo',\n            get(domNode) {\n                return !!domNode.getAttribute('show-info')\n            },\n        }, {\n            name: 'borderRadius',\n            get(domNode) {\n                return domNode.getAttribute('border-radius') || '0'\n            },\n        }, {\n            name: 'fontSize',\n            get(domNode) {\n                return domNode.getAttribute('font-size') || '16'\n            },\n        }, {\n            name: 'strokeWidth',\n            get(domNode) {\n                return domNode.getAttribute('stroke-width') || '6'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#09BB07'\n            },\n        }, {\n            name: 'activeColor',\n            get(domNode) {\n                return domNode.getAttribute('active-color') || '#09BB07'\n            },\n        }, {\n            name: 'backgroundColor',\n            get(domNode) {\n                return domNode.getAttribute('background-color') || '#EBEBEB'\n            },\n        }, {\n            name: 'active',\n            get(domNode) {\n                return !!domNode.getAttribute('active')\n            },\n        }, {\n            name: 'activeMode',\n            get(domNode) {\n                return domNode.getAttribute('active-mode') || 'backwards'\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('duration'))\n                return !isNaN(value) ? value : 30\n            },\n        }],\n        handles: {\n            onProgressActiveEnd(evt) {\n                this.callSingleEvent('activeend', evt)\n            },\n        },\n    },\n    'rich-text': {\n        wxCompName: 'rich-text',\n        properties: [{\n            name: 'nodes',\n            get(domNode) {\n                return domNode.getAttribute('nodes') || []\n            },\n        }, {\n            name: 'space',\n            get(domNode) {\n                return domNode.getAttribute('space') || ''\n            },\n        }],\n    },\n    text: {\n        wxCompName: 'text',\n        properties: [{\n            name: 'selectable',\n            get(domNode) {\n                return !!domNode.getAttribute('selectable')\n            },\n        }, {\n            name: 'space',\n            get(domNode) {\n                return domNode.getAttribute('space') || ''\n            },\n        }, {\n            name: 'decode',\n            get(domNode) {\n                return !!domNode.getAttribute('decode')\n            },\n        }],\n    },\n    // 表单组件\n    button: {\n        wxCompName: 'button',\n        properties: [{\n            name: 'size',\n            get(domNode) {\n                return domNode.getAttribute('size') || 'default'\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                // 如果使用默认值 default，基础库中会补充 wx-button[type=default]，导致部分样式优先级处理有问题\n                return domNode.getAttribute('type') || undefined\n            },\n        }, {\n            name: 'plain',\n            get(domNode) {\n                return !!domNode.getAttribute('plain')\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return !!domNode.getAttribute('disabled')\n            },\n        }, {\n            name: 'loading',\n            get(domNode) {\n                return !!domNode.getAttribute('loading')\n            },\n        }, {\n            name: 'formType',\n            get(domNode) {\n                return domNode.getAttribute('form-type') || ''\n            },\n        }, {\n            name: 'openType',\n            get(domNode) {\n                return domNode.getAttribute('open-type') || ''\n            },\n        }, {\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'button-hover'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return !!domNode.getAttribute('hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-start-time'))\n                return !isNaN(value) ? value : 20\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n                return !isNaN(value) ? value : 70\n            },\n        }, {\n            name: 'lang',\n            get(domNode) {\n                return domNode.getAttribute('lang') || 'en'\n            },\n        }, {\n            name: 'sessionFrom',\n            get(domNode) {\n                return domNode.getAttribute('session-from') || ''\n            },\n        }, {\n            name: 'sendMessageTitle',\n            get(domNode) {\n                return domNode.getAttribute('send-message-title') || ''\n            },\n        }, {\n            name: 'sendMessagePath',\n            get(domNode) {\n                return domNode.getAttribute('send-message-path') || ''\n            },\n        }, {\n            name: 'sendMessageImg',\n            get(domNode) {\n                return domNode.getAttribute('send-message-img') || ''\n            },\n        }, {\n            name: 'appParameter',\n            get(domNode) {\n                return domNode.getAttribute('app-parameter') || ''\n            },\n        }, {\n            name: 'showMessageCard',\n            get(domNode) {\n                return !!domNode.getAttribute('show-message-card')\n            },\n        }, {\n            name: 'businessId',\n            get(domNode) {\n                return domNode.getAttribute('business-id') || ''\n            },\n        }],\n        handles: {\n            onButtonGetUserInfo(evt) {\n                this.callSingleEvent('getuserinfo', evt)\n            },\n\n            onButtonContact(evt) {\n                this.callSingleEvent('contact', evt)\n            },\n\n            onButtonGetPhoneNumber(evt) {\n                this.callSingleEvent('getphonenumber', evt)\n            },\n\n            onButtonError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onButtonOpenSetting(evt) {\n                this.callSingleEvent('opensetting', evt)\n            },\n\n            onButtonLaunchApp(evt) {\n                this.callSingleEvent('launchapp', evt)\n            },\n\n            onButtonGetRealnameAuthInfo(evt) {\n                // 已废弃，建议使用：https://developers.weixin.qq.com/miniprogram/dev/framework/cityservice/cityservice-checkrealnameinfo.html\n                this.callSingleEvent('getrealnameauthinfo', evt)\n            },\n        },\n    },\n    editor: {\n        wxCompName: 'editor',\n        properties: [{\n            name: 'readOnly',\n            get(domNode) {\n                return !!domNode.getAttribute('read-only')\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.getAttribute('placeholder') || ''\n            },\n        }, {\n            name: 'showImgSize',\n            get(domNode) {\n                return !!domNode.getAttribute('show-img-size')\n            },\n        }, {\n            name: 'showImgToolbar',\n            get(domNode) {\n                return !!domNode.getAttribute('show-img-toolbar')\n            },\n        }, {\n            name: 'showImgResize',\n            get(domNode) {\n                return !!domNode.getAttribute('show-img-resize')\n            },\n        }],\n        handles: {\n            onEditorReady(evt) {\n                this.callSingleEvent('ready', evt)\n            },\n\n            onEditorFocus(evt) {\n                this.callSingleEvent('focus', evt)\n            },\n\n            onEditorBlur(evt) {\n                this.callSingleEvent('blur', evt)\n            },\n\n            onEditorInput(evt) {\n                this.callSingleEvent('input', evt)\n            },\n\n            onEditorStatusChange(evt) {\n                this.callSingleEvent('statuschange', evt)\n            },\n        },\n    },\n    form: {\n        // 可以认为下述 form 组件的属性和事件是几乎没有用的，因为 button 组件会被封装到自定义组件内\n        wxCompName: 'form',\n        properties: [{\n            name: 'reportSubmit',\n            get(domNode) {\n                return !!domNode.getAttribute('report-submit')\n            },\n        }, {\n            name: 'reportSubmitTimeout',\n            get(domNode) {\n                return +domNode.getAttribute('report-submit-timeout') || 0\n            },\n        }],\n        handles: {\n            onFormSubmit(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._formId = evt.detail.formId\n                // submit 事件由 kbone 模拟，不需要原生 submit 事件\n            },\n\n            onFormReset() {\n                // reset 事件由 kbone 模拟，不需要原生 reset 事件\n            },\n        },\n    },\n    INPUT: {\n        wxCompName: 'input',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.value || ''\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                const value = domNode.type || 'text'\n                return value !== 'password' ? value : 'text'\n            },\n        }, {\n            name: 'password',\n            get(domNode) {\n                return domNode.type !== 'password' ? !!domNode.getAttribute('password') : true\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.placeholder\n            },\n        }, {\n            name: 'placeholderStyle',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-style') || ''\n            },\n        }, {\n            name: 'placeholderClass',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-class') || 'input-placeholder'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return domNode.disabled\n            },\n        }, {\n            name: 'maxlength',\n            get(domNode) {\n                const value = parseFloat(domNode.maxlength)\n                return !isNaN(value) ? value : 140\n            },\n        }, {\n            name: 'cursorSpacing',\n            get(domNode) {\n                return +domNode.getAttribute('cursor-spacing') || 0\n            },\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                return !!domNode.getAttribute('autofocus')\n            },\n        }, {\n            name: 'focus',\n            canBeUserChanged: true,\n            get(domNode) {\n                return !!domNode.getAttribute('focus')\n            },\n        }, {\n            name: 'confirmType',\n            get(domNode) {\n                return domNode.getAttribute('confirm-type') || 'done'\n            },\n        }, {\n            name: 'confirmHold',\n            get(domNode) {\n                return !!domNode.getAttribute('confirm-hold')\n            },\n        }, {\n            name: 'cursor',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('cursor'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'selectionStart',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('selection-start'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'selectionEnd',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('selection-end'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'adjustPosition',\n            get(domNode) {\n                const value = domNode.getAttribute('adjust-position')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'holdKeyboard',\n            get(domNode) {\n                return !!domNode.getAttribute('hold-keyboard')\n            },\n        }, {\n            name: 'checked',\n            canBeUserChanged: true,\n            get(domNode) {\n                return !!domNode.getAttribute('checked')\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#09BB07'\n            },\n        }],\n        handles: {\n            onInputInput(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = '' + evt.detail.value\n                domNode.$$setAttributeWithoutUpdate('value', value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                this.callEvent('input', evt)\n            },\n\n            onInputFocus(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._inputOldValue = domNode.value\n                domNode.$$setAttributeWithoutUpdate('focus', true)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = true\n\n                this.callSimpleEvent('focus', evt)\n            },\n\n            onInputBlur(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('focus', false)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = false\n\n                if (domNode._inputOldValue !== undefined && domNode.value !== domNode._inputOldValue) {\n                    domNode._inputOldValue = undefined\n                    this.callEvent('change', evt)\n                }\n                this.callSimpleEvent('blur', evt)\n            },\n\n            onInputConfirm(evt) {\n                this.callSimpleEvent('confirm', evt)\n            },\n\n            onInputKeyBoardHeightChange(evt) {\n                this.callSingleEvent('keyboardheightchange', evt)\n            },\n\n            onRadioChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const window = cache.getWindow(this.pageId)\n                const value = evt.detail.value\n                const name = domNode.name\n\n                if (value === domNode.value) {\n                    domNode.$$setAttributeWithoutUpdate('checked', true)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = true\n\n                    const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\n                    for (const otherDomNode of otherDomNodes) {\n                        if (otherDomNode.type === 'radio' && otherDomNode !== domNode) {\n                            otherDomNode.$$setAttributeWithoutUpdate('checked', false)\n\n                            // 可被用户行为改变的值，需要记录\n                            otherDomNode._oldValues = otherDomNode._oldValues || {}\n                            otherDomNode._oldValues.checked = false\n                        }\n                    }\n                }\n                this.callEvent('input', evt)\n                this.callEvent('change', evt)\n            },\n\n            onCheckboxChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = evt.detail.value || []\n                if (value.indexOf(domNode.value) >= 0) {\n                    domNode.$$setAttributeWithoutUpdate('checked', true)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = true\n                } else {\n                    domNode.$$setAttributeWithoutUpdate('checked', false)\n\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    domNode._oldValues.checked = false\n                }\n                this.callEvent('input', evt)\n                this.callEvent('change', evt)\n            },\n        },\n    },\n    picker: {\n        wxCompName: 'picker',\n        properties: [{\n            name: 'headerText',\n            get(domNode) {\n                return domNode.getAttribute('header-text') || ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'selector'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return !!domNode.getAttribute('disabled')\n            },\n        }, {\n            name: 'range',\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') {\n                    return domNode.options.map(item => ({\n                        label: item.label,\n                        value: item.value,\n                    }))\n                }\n\n                let value = domNode.getAttribute('range')\n                if (typeof value === 'string') {\n                    // react 会直接将属性值转成字符串\n                    try {\n                        value = JSON.parse(value)\n                    } catch (err) {\n                        value = value.split(',')\n                    }\n                }\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'rangeKey',\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') return 'label'\n\n                return domNode.getAttribute('range-key') || ''\n            },\n        }, {\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                if (domNode.tagName === 'SELECT') return +domNode.selectedIndex || 0\n\n                const mode = domNode.getAttribute('mode') || 'selector'\n                let value = domNode.getAttribute('value')\n\n                if (mode === 'selector') {\n                    return +value || 0\n                } else if (mode === 'multiSelector') {\n                    if (typeof value === 'string') value = value.split(',').map(item => parseInt(item, 10)) // react 会直接将属性值转成字符串\n                    return value || []\n                } else if (mode === 'time') {\n                    return value || ''\n                } else if (mode === 'date') {\n                    return value || '0'\n                } else if (mode === 'region') {\n                    if (typeof value === 'string') value = value.split(',') // react 会直接将属性值转成字符串\n                    return value || []\n                }\n\n                return value\n            },\n        }, {\n            name: 'start',\n            get(domNode) {\n                return domNode.getAttribute('start') || ''\n            },\n        }, {\n            name: 'end',\n            get(domNode) {\n                return domNode.getAttribute('end') || ''\n            },\n        }, {\n            name: 'fields',\n            get(domNode) {\n                return domNode.getAttribute('fields') || 'day'\n            },\n        }, {\n            name: 'customItem',\n            get(domNode) {\n                return domNode.getAttribute('custom-item') || ''\n            }\n        }],\n        handles: {\n            onPickerChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                let value = evt.detail.value\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                if (domNode.tagName === 'SELECT') {\n                    value = +value\n                    domNode.$$setAttributeWithoutUpdate('value', domNode.options[value] && domNode.options[value].value || '')\n                    domNode.$$setAttributeWithoutUpdate('selectedIndex', value)\n                    domNode.$$resetOptions()\n\n                    this.callEvent('change', evt)\n                } else {\n                    domNode.$$setAttributeWithoutUpdate('value', value)\n\n                    this.callSingleEvent('change', evt)\n                }\n            },\n\n            onPickerColumnChange(evt) {\n                this.callSingleEvent('columnchange', evt)\n            },\n\n            onPickerCancel(evt) {\n                this.callSingleEvent('cancel', evt)\n            },\n        },\n    },\n    'picker-view': {\n        wxCompName: 'picker-view',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                let value = domNode.getAttribute('value')\n                if (typeof value === 'string') value = value.split(',').map(item => parseInt(item, 10)) // react 会直接将属性值转成字符串\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'indicatorStyle',\n            get(domNode) {\n                return domNode.getAttribute('indicator-style') || ''\n            },\n        }, {\n            name: 'indicatorClass',\n            get(domNode) {\n                return domNode.getAttribute('indicator-class') || ''\n            },\n        }, {\n            name: 'maskStyle',\n            get(domNode) {\n                return domNode.getAttribute('mask-style') || ''\n            },\n        }, {\n            name: 'maskClass',\n            get(domNode) {\n                return domNode.getAttribute('mask-class') || ''\n            },\n        }],\n        handles: {\n            onPickerViewChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onPickerViewPickstart(evt) {\n                this.callSingleEvent('pickstart', evt)\n            },\n\n            onPickerViewPickend(evt) {\n                this.callSingleEvent('pickend', evt)\n            },\n        },\n    },\n    slider: {\n        wxCompName: 'slider',\n        properties: [{\n            name: 'min',\n            get(domNode) {\n                return +domNode.getAttribute('min') || 0\n            },\n        }, {\n            name: 'max',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('max'))\n                return !isNaN(value) ? value : 100\n            },\n        }, {\n            name: 'step',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('step'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return !!domNode.getAttribute('disabled')\n            },\n        }, {\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('value') || 0\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#e9e9e9'\n            },\n        }, {\n            name: 'selectedColor',\n            get(domNode) {\n                return domNode.getAttribute('selected-color') || '#1aad19'\n            },\n        }, {\n            name: 'activeColor',\n            get(domNode) {\n                return domNode.getAttribute('active-color') || '#1aad19'\n            },\n        }, {\n            name: 'backgroundColor',\n            get(domNode) {\n                return domNode.getAttribute('background-color') || '#e9e9e9'\n            },\n        }, {\n            name: 'blockSize',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('block-size'))\n                return !isNaN(value) ? value : 28\n            },\n        }, {\n            name: 'blockColor',\n            get(domNode) {\n                return domNode.getAttribute('block-color') || '#ffffff'\n            },\n        }, {\n            name: 'showValue',\n            get(domNode) {\n                return !!domNode.getAttribute('show-value')\n            },\n        }],\n        handles: {\n            onSliderChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onSliderChanging(evt) {\n                this.callSingleEvent('changing', evt)\n            },\n        },\n    },\n    switch: {\n        wxCompName: 'switch',\n        properties: [{\n            name: 'checked',\n            canBeUserChanged: true,\n            get(domNode) {\n                return !!domNode.getAttribute('checked')\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return !!domNode.getAttribute('disabled')\n            },\n        }, {\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || 'switch'\n            },\n        }, {\n            name: 'color',\n            get(domNode) {\n                return domNode.getAttribute('color') || '#04BE02'\n            },\n        }],\n        handles: {\n            onSwitchChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('checked', evt.detail.value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.checked = evt.detail.value\n\n                this.callSingleEvent('change', evt)\n            },\n        },\n    },\n    TEXTAREA: {\n        wxCompName: 'textarea',\n        properties: [{\n            name: 'value',\n            canBeUserChanged: true,\n            get(domNode) {\n                return domNode.value || ''\n            },\n        }, {\n            name: 'placeholder',\n            get(domNode) {\n                return domNode.placeholder\n            },\n        }, {\n            name: 'placeholderStyle',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-style') || ''\n            },\n        }, {\n            name: 'placeholderClass',\n            get(domNode) {\n                return domNode.getAttribute('placeholder-class') || 'input-placeholder'\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return domNode.disabled\n            },\n        }, {\n            name: 'maxlength',\n            get(domNode) {\n                const value = parseFloat(domNode.maxlength)\n                return !isNaN(value) ? value : 140\n            }\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                return !!domNode.getAttribute('autofocus')\n            },\n        }, {\n            name: 'focus',\n            get(domNode) {\n                return !!domNode.getAttribute('focus')\n            },\n        }, {\n            name: 'autoHeight',\n            get(domNode) {\n                return !!domNode.getAttribute('auto-height')\n            },\n        }, {\n            name: 'fixed',\n            get(domNode) {\n                return !!domNode.getAttribute('fixed')\n            },\n        }, {\n            name: 'cursorSpacing',\n            get(domNode) {\n                return +domNode.getAttribute('cursor-spacing') || 0\n            },\n        }, {\n            name: 'cursor',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('cursor'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'showConfirmBar',\n            get(domNode) {\n                const value = domNode.getAttribute('show-confirm-bar')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'selectionStart',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('selection-start'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'selectionEnd',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('selection-end'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'adjustPosition',\n            get(domNode) {\n                const value = domNode.getAttribute('adjust-position')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'holdKeyboard',\n            get(domNode) {\n                return !!domNode.getAttribute('hold-keyboard')\n            },\n        }, {\n            name: 'disableDefaultPadding',\n            get(domNode) {\n                return !!domNode.getAttribute('disable-default-padding')\n            },\n        }],\n        handles: {\n            onTextareaFocus(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode._textareaOldValue = domNode.value\n                domNode.$$setAttributeWithoutUpdate('focus', true)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = true\n\n                this.callSimpleEvent('focus', evt)\n            },\n\n            onTextareaBlur(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('focus', false)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.focus = false\n\n                if (domNode._textareaOldValue !== undefined && domNode.value !== domNode._textareaOldValue) {\n                    domNode._textareaOldValue = undefined\n                    this.callEvent('change', evt)\n                }\n                this.callSimpleEvent('blur', evt)\n            },\n\n            onTextareaLineChange(evt) {\n                this.callSingleEvent('linechange', evt)\n            },\n\n            onTextareaInput(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                const value = '' + evt.detail.value\n                domNode.$$setAttributeWithoutUpdate('value', value)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.value = value\n\n                this.callEvent('input', evt)\n            },\n\n            onTextareaConfirm(evt) {\n                this.callSimpleEvent('confirm', evt)\n            },\n\n            onTextareaKeyBoardHeightChange(evt) {\n                this.callSingleEvent('keyboardheightchange', evt)\n            },\n        },\n    },\n    // 导航\n    navigator: {\n        wxCompName: 'navigator',\n        properties: [{\n            name: 'target',\n            get(domNode) {\n                return domNode.getAttribute('target') || 'self'\n            },\n        }, {\n            name: 'url',\n            get(domNode) {\n                return domNode.getAttribute('url') || ''\n            },\n        }, {\n            name: 'openType',\n            get(domNode) {\n                return domNode.getAttribute('open-type') || 'navigate'\n            },\n        }, {\n            name: 'delta',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('delta'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'appId',\n            get(domNode) {\n                return domNode.getAttribute('app-id') || ''\n            },\n        }, {\n            name: 'path',\n            get(domNode) {\n                return domNode.getAttribute('path') || ''\n            },\n        }, {\n            name: 'extraData',\n            get(domNode) {\n                return domNode.getAttribute('extra-data') || {}\n            },\n        }, {\n            name: 'version',\n            get(domNode) {\n                return domNode.getAttribute('version') || 'release'\n            },\n        }, {\n            name: 'hoverClass',\n            get(domNode) {\n                return domNode.getAttribute('hover-class') || 'navigator-hover'\n            },\n        }, {\n            name: 'hoverStopPropagation',\n            get(domNode) {\n                return !!domNode.getAttribute('hover-stop-propagation')\n            },\n        }, {\n            name: 'hoverStartTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-start-time'))\n                return !isNaN(value) ? value : 50\n            },\n        }, {\n            name: 'hoverStayTime',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n                return !isNaN(value) ? value : 600\n            },\n        }],\n        handles: {\n            onNavigatorSuccess(evt) {\n                this.callSingleEvent('success', evt)\n            },\n\n            onNavigatorFail(evt) {\n                this.callSingleEvent('fail', evt)\n            },\n\n            onNavigatorComplete(evt) {\n                this.callSingleEvent('complete', evt)\n            },\n        },\n    },\n    // 媒体组件\n    camera: {\n        wxCompName: 'camera',\n        properties: [{\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'normal'\n            },\n        }, {\n            name: 'resolution',\n            get(domNode) {\n                return domNode.getAttribute('resolution') || 'medium'\n            },\n        }, {\n            name: 'devicePosition',\n            get(domNode) {\n                return domNode.getAttribute('device-position') || 'back'\n            },\n        }, {\n            name: 'flash',\n            get(domNode) {\n                return domNode.getAttribute('flash') || 'auto'\n            },\n        }, {\n            name: 'frameSize',\n            get(domNode) {\n                return domNode.getAttribute('frame-size') || 'medium'\n            },\n        }],\n        handles: {\n            onCameraStop(evt) {\n                this.callSingleEvent('stop', evt)\n            },\n\n            onCameraError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onCameraInitDone(evt) {\n                this.callSingleEvent('initdone', evt)\n            },\n\n            onCameraScanCode(evt) {\n                this.callSingleEvent('scancode', evt)\n            },\n        },\n    },\n    image: {\n        wxCompName: 'image',\n        properties: [{\n            name: 'renderingMode',\n            get(domNode) {\n                return domNode.getAttribute('rendering-mode') || ''\n            },\n        }, {\n            name: 'src',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'scaleToFill'\n            },\n        }, {\n            name: 'webp',\n            get(domNode) {\n                return !!domNode.getAttribute('webp')\n            },\n        }, {\n            name: 'lazyLoad',\n            get(domNode) {\n                return !!domNode.getAttribute('lazy-load')\n            },\n        }, {\n            name: 'showMenuByLongpress',\n            get(domNode) {\n                return !!domNode.getAttribute('show-menu-by-longpress')\n            },\n        }],\n        handles: {\n            onImageLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onImageError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'live-player': {\n        wxCompName: 'live-player',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'live'\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return !!domNode.getAttribute('autoplay')\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return !!domNode.getAttribute('muted')\n            },\n        }, {\n            name: 'orientation',\n            get(domNode) {\n                return domNode.getAttribute('orientation') || 'vertical'\n            },\n        }, {\n            name: 'objectFit',\n            get(domNode) {\n                return domNode.getAttribute('object-fit') || 'contain'\n            },\n        }, {\n            name: 'backgroundMute',\n            get(domNode) {\n                return !!domNode.getAttribute('background-mute')\n            },\n        }, {\n            name: 'minCache',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('min-cache'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'maxCache',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('max-cache'))\n                return !isNaN(value) ? value : 3\n            },\n        }, {\n            name: 'soundMode',\n            get(domNode) {\n                return domNode.getAttribute('sound-mode') || 'speaker'\n            },\n        }, {\n            name: 'autoPauseIfNavigate',\n            get(domNode) {\n                const value = domNode.getAttribute('auto-pause-if-navigate')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'autoPauseIfOpenNative',\n            get(domNode) {\n                const value = domNode.getAttribute('auto-pause-if-open-native')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'pictureInPictureMode',\n            get(domNode) {\n                let value = domNode.getAttribute('picture-in-picture-mode')\n                if (typeof value === 'string') {\n                    // react 会直接将属性值转成字符串\n                    try {\n                        value = JSON.parse(value)\n                    } catch (err) {\n                        value = value.split(',')\n                    }\n\n                    if (Array.isArray(value) && value.length === 1) value = '' + value[0]\n                }\n\n                return value\n            },\n        }],\n        handles: {\n            onLivePlayerStateChange(evt) {\n                this.callSingleEvent('statechange', evt)\n            },\n\n            onLivePlayerFullScreenChange(evt) {\n                this.callSingleEvent('fullscreenchange', evt)\n            },\n\n            onLivePlayerNetStatus(evt) {\n                this.callSingleEvent('netstatus', evt)\n            },\n\n            onLivePlayerAudioVolumeNotify(evt) {\n                this.callSingleEvent('audiovolumenotify', evt)\n            },\n\n            onLivePlayerEnterPictureInPicture(evt) {\n                this.callSingleEvent('enterpictureinpicture', evt)\n            },\n\n            onLivePlayerLeavePictureInPicture(evt) {\n                this.callSingleEvent('leavepictureinpicture', evt)\n            },\n        },\n    },\n    'live-pusher': {\n        wxCompName: 'live-pusher',\n        properties: [{\n            name: 'url',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                const url = domNode.getAttribute('url')\n                return url ? tool.completeURL(url, window.location.origin, true) : ''\n            },\n        }, {\n            name: 'mode',\n            get(domNode) {\n                return domNode.getAttribute('mode') || 'RTC'\n            },\n        }, {\n            name: 'autopush',\n            get(domNode) {\n                return !!domNode.getAttribute('autopush')\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return !!domNode.getAttribute('muted')\n            },\n        }, {\n            name: 'enableCamera',\n            get(domNode) {\n                const value = domNode.getAttribute('enable-camera')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'autoFocus',\n            get(domNode) {\n                const value = domNode.getAttribute('auto-focus')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'orientation',\n            get(domNode) {\n                return domNode.getAttribute('orientation') || 'vertical'\n            },\n        }, {\n            name: 'beauty',\n            get(domNode) {\n                return +domNode.getAttribute('beauty') || 0\n            },\n        }, {\n            name: 'whiteness',\n            get(domNode) {\n                return +domNode.getAttribute('whiteness') || 0\n            },\n        }, {\n            name: 'aspect',\n            get(domNode) {\n                return domNode.getAttribute('aspect') || '9:16'\n            },\n        }, {\n            name: 'minBitrate',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('min-bitrate'))\n                return !isNaN(value) ? value : 200\n            },\n        }, {\n            name: 'maxBitrate',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('max-bitrate'))\n                return !isNaN(value) ? value : 1000\n            },\n        }, {\n            name: 'waitingImage',\n            get(domNode) {\n                return domNode.getAttribute('waiting-image') || ''\n            },\n        }, {\n            name: 'waitingImageHash',\n            get(domNode) {\n                return domNode.getAttribute('waiting-image-hash') || ''\n            },\n        }, {\n            name: 'zoom',\n            get(domNode) {\n                return !!domNode.getAttribute('zoom')\n            },\n        }, {\n            name: 'devicePosition',\n            get(domNode) {\n                return domNode.getAttribute('device-position') || 'front'\n            },\n        }, {\n            name: 'backgroundMute',\n            get(domNode) {\n                return !!domNode.getAttribute('background-mute')\n            },\n        }, {\n            name: 'mirror',\n            get(domNode) {\n                return !!domNode.getAttribute('mirror')\n            },\n        }, {\n            name: 'remoteMirror',\n            get(domNode) {\n                return !!domNode.getAttribute('remote-mirror')\n            },\n        }, {\n            name: 'localMirror',\n            get(domNode) {\n                return domNode.getAttribute('local-mirror') || 'auto'\n            },\n        }, {\n            name: 'audioReverbType',\n            get(domNode) {\n                return +domNode.getAttribute('audio-reverb-type') || 0\n            },\n        }, {\n            name: 'enableMic',\n            get(domNode) {\n                const value = domNode.getAttribute('enable-mic')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'enableAgc',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-agc')\n            },\n        }, {\n            name: 'enableAns',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-ans')\n            },\n        }, {\n            name: 'audioVolumeType',\n            get(domNode) {\n                return domNode.getAttribute('audio-volume-type') || 'voicecall'\n            },\n        }, {\n            name: 'videoWidth',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('video-width'))\n                return !isNaN(value) ? value : 360\n            },\n        }, {\n            name: 'videoHeight',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('video-height'))\n                return !isNaN(value) ? value : 640\n            },\n        }],\n        handles: {\n            onLivePusherStateChange(evt) {\n                this.callSingleEvent('statechange', evt)\n            },\n\n            onLivePusherNetStatus(evt) {\n                this.callSingleEvent('netstatus', evt)\n            },\n\n            onLivePusherError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onLivePusherBgmStart(evt) {\n                this.callSingleEvent('bgmstart', evt)\n            },\n\n            onLivePusherBgmProgress(evt) {\n                this.callSingleEvent('bgmprogress', evt)\n            },\n\n            onLivePusherBgmComplete(evt) {\n                this.callSingleEvent('bgmcomplete', evt)\n            },\n\n        },\n    },\n    VIDEO: {\n        wxCompName: 'video',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n            },\n        }, {\n            name: 'duration',\n            get(domNode) {\n                return +domNode.getAttribute('duration') || 0\n            },\n        }, {\n            name: 'controls',\n            get(domNode) {\n                return domNode.controls\n            },\n        }, {\n            name: 'danmuList',\n            get(domNode) {\n                const value = domNode.getAttribute('danmu-list')\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'danmuBtn',\n            get(domNode) {\n                return !!domNode.getAttribute('danmu-btn')\n            },\n        }, {\n            name: 'enableDanmu',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-danmu')\n            },\n        }, {\n            name: 'autoplay',\n            get(domNode) {\n                return domNode.autoplay\n            },\n        }, {\n            name: 'loop',\n            get(domNode) {\n                return domNode.loop\n            },\n        }, {\n            name: 'muted',\n            get(domNode) {\n                return domNode.muted\n            },\n        }, {\n            name: 'initialTime',\n            get(domNode) {\n                return +domNode.getAttribute('initial-time') || 0\n            },\n        }, {\n            name: 'direction',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('direction'))\n                return !isNaN(value) ? value : -1\n            },\n        }, {\n            name: 'showProgress',\n            get(domNode) {\n                const value = domNode.getAttribute('show-progress')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'showFullscreenBtn',\n            get(domNode) {\n                const value = domNode.getAttribute('show-fullscreen-btn')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'showPlayBtn',\n            get(domNode) {\n                const value = domNode.getAttribute('show-play-btn')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'showCenterPlayBtn',\n            get(domNode) {\n                const value = domNode.getAttribute('show-center-play-btn')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'enableProgressGesture',\n            get(domNode) {\n                const value = domNode.getAttribute('enable-progress-gesture')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'objectFit',\n            get(domNode) {\n                return domNode.getAttribute('object-fit') || 'contain'\n            },\n        }, {\n            name: 'poster',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.poster ? tool.completeURL(domNode.poster, window.location.origin, true) : ''\n            },\n        }, {\n            name: 'showMuteBtn',\n            get(domNode) {\n                return !!domNode.getAttribute('show-mute-btn')\n            },\n        }, {\n            name: 'title',\n            get(domNode) {\n                return domNode.getAttribute('title') || ''\n            },\n        }, {\n            name: 'playBtnPosition',\n            get(domNode) {\n                return domNode.getAttribute('play-btn-position') || 'bottom'\n            },\n        }, {\n            name: 'enablePlayGesture',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-play-gesture')\n            },\n        }, {\n            name: 'autoPauseIfNavigate',\n            get(domNode) {\n                const value = domNode.getAttribute('auto-pause-if-navigate')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'autoPauseIfOpenNative',\n            get(domNode) {\n                const value = domNode.getAttribute('auto-pause-if-open-native')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'vslideGesture',\n            get(domNode) {\n                return !!domNode.getAttribute('vslide-gesture')\n            },\n        }, {\n            name: 'vslideGestureInFullscreen',\n            get(domNode) {\n                const value = domNode.getAttribute('vslide-gesture-in-fullscreen')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'adUnitId',\n            get(domNode) {\n                return domNode.getAttribute('ad-unit-id') || ''\n            },\n        }, {\n            name: 'posterForCrawler',\n            get(domNode) {\n                return domNode.getAttribute('poster-for-crawler') || ''\n            },\n        }, {\n            name: 'showCastingButton',\n            get(domNode) {\n                return !!domNode.getAttribute('show-casting-button')\n            },\n        }, {\n            name: 'pictureInPictureMode',\n            get(domNode) {\n                let value = domNode.getAttribute('picture-in-picture-mode')\n                if (typeof value === 'string') {\n                    // react 会直接将属性值转成字符串\n                    try {\n                        value = JSON.parse(value)\n                    } catch (err) {\n                        value = value.split(',')\n                    }\n\n                    if (Array.isArray(value) && value.length === 1) value = '' + value[0]\n                }\n\n                return value\n            },\n        }, {\n            name: 'pictureInPictureShowProgress',\n            get(domNode) {\n                return !!domNode.getAttribute('picture-in-picture-show-progress')\n            },\n        }, {\n            name: 'enableAutoRotation',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-auto-rotation')\n            },\n        }, {\n            name: 'showScreenLockButton',\n            get(domNode) {\n                return !!domNode.getAttribute('show-screen-lock-button')\n            },\n        }],\n        handles: {\n            onVideoPlay(evt) {\n                this.callSingleEvent('play', evt)\n            },\n\n            onVideoPause(evt) {\n                this.callSingleEvent('pause', evt)\n            },\n\n            onVideoEnded(evt) {\n                this.callSingleEvent('ended', evt)\n            },\n\n            onVideoTimeUpdate(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('currentTime', evt.detail.currentTime)\n                this.callSingleEvent('timeupdate', evt)\n            },\n\n            onVideoFullScreenChange(evt) {\n                this.callSingleEvent('fullscreenchange', evt)\n            },\n\n            onVideoWaiting(evt) {\n                this.callSingleEvent('waiting', evt)\n            },\n\n            onVideoError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onVideoProgress(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('buffered', evt.detail.buffered)\n                this.callSingleEvent('progress', evt)\n            },\n\n            onVideoLoadedMetaData(evt) {\n                this.callSingleEvent('loadedmetadata', evt)\n            },\n\n            onVideoControlsToggle(evt) {\n                this.callSingleEvent('controlstoggle', evt)\n            },\n\n            onVideoEnterPictureInPicture(evt) {\n                this.callSingleEvent('enterpictureinpicture', evt)\n            },\n\n            onVideoLeavePictureInPicture(evt) {\n                this.callSingleEvent('leavepictureinpicture', evt)\n            },\n        },\n    },\n    // 地图\n    map: {\n        wxCompName: 'map',\n        properties: [{\n            name: 'longitude',\n            // canBeUserChanged: true,\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('longitude'))\n                return !isNaN(value) ? value : 39.92\n            },\n        }, {\n            name: 'latitude',\n            // canBeUserChanged: true,\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('latitude'))\n                return !isNaN(value) ? value : 116.46\n            },\n        }, {\n            name: 'scale',\n            // canBeUserChanged: true,\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('scale'))\n                return !isNaN(value) ? value : 16\n            },\n        }, {\n            name: 'markers',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('markers'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'polyline',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('polyline'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'circles',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('circles'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'controls',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('controls'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'includePoints',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('include-points'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'showLocation',\n            get(domNode) {\n                return !!domNode.getAttribute('show-location')\n            },\n        }, {\n            name: 'polygons',\n            get(domNode) {\n                const value = dealWithReactAttr(domNode.getAttribute('polygons'))\n                return value !== undefined ? value : []\n            },\n        }, {\n            name: 'subkey',\n            get(domNode) {\n                return domNode.getAttribute('subkey') || ''\n            },\n        }, {\n            name: 'layerStyle',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('layer-style'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'rotate',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('rotate') || 0\n            },\n        }, {\n            name: 'skew',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('skew') || 0\n            },\n        }, {\n            name: 'enable3D',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-3D')\n            },\n        }, {\n            name: 'showCompass',\n            get(domNode) {\n                return !!domNode.getAttribute('show-compass')\n            },\n        }, {\n            name: 'showScale',\n            get(domNode) {\n                return !!domNode.getAttribute('show-scale')\n            },\n        }, {\n            name: 'enableOverlooking',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-overlooking')\n            },\n        }, {\n            name: 'enableZoom',\n            get(domNode) {\n                const value = domNode.getAttribute('enable-zoom')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'enableScroll',\n            get(domNode) {\n                const value = domNode.getAttribute('enable-scroll')\n                return value !== undefined ? !!value : true\n            },\n        }, {\n            name: 'enableRotate',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-rotate')\n            },\n        }, {\n            name: 'enableSatellite',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-satellite')\n            },\n        }, {\n            name: 'enableTraffic',\n            get(domNode) {\n                return !!domNode.getAttribute('enable-traffic')\n            },\n        }, {\n            name: 'setting',\n            get(domNode) {\n                return dealWithReactAttr(domNode.getAttribute('setting')) || {}\n            },\n        }],\n        handles: {\n            onMapTap(evt) {\n                this.callSingleEvent('tap', evt)\n            },\n\n            onMapMarkerTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('markertap', evt)\n            },\n\n            onMapLabelTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('labeltap', evt)\n            },\n\n            onMapControlTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('controltap', evt)\n            },\n\n            onMapCalloutTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('callouttap', evt)\n            },\n\n            onMapUpdated(evt) {\n                this.callSingleEvent('updated', evt)\n            },\n\n            onMapRegionChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                if (!evt.detail.causedBy) evt.detail.causedBy = evt.causedBy\n                if (evt.type === 'end' || evt.detail.type === 'end') {\n                    // 可被用户行为改变的值，需要记录\n                    domNode._oldValues = domNode._oldValues || {}\n                    // 以下三项官方未支持\n                    // domNode._oldValues.longitude = evt.detail.longitude\n                    // domNode._oldValues.latitude = evt.detail.latitude\n                    // domNode._oldValues.scale = evt.detail.scale\n                    domNode._oldValues.rotate = evt.detail.rotate\n                    domNode._oldValues.skew = evt.detail.skew\n                }\n\n                this.callSingleEvent('regionchange', evt)\n            },\n\n            onMapPoiTap(evt) {\n                dealWithDevToolsEvt(evt)\n                this.callSingleEvent('poitap', evt)\n            },\n\n        },\n    },\n    // 画布\n    CANVAS: {\n        wxCompName: 'canvas',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'canvasId',\n            get(domNode) {\n                return domNode.getAttribute('canvas-id') || ''\n            },\n        }, {\n            name: 'disableScroll',\n            get(domNode) {\n                return !!domNode.getAttribute('disable-scroll')\n            },\n        }, {\n            // kbone 自定义的特殊属性，用于兼容 iOS 端绑定了 canvas touch 事件后，触发不了页面滚动的 bug\n            name: 'disableEvent',\n            get(domNode) {\n                return !!domNode.getAttribute('disable-event')\n            },\n        }],\n        handles: {\n            onCanvasTouchStart(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchstart', evt)\n                this.onTouchStart(evt)\n            },\n\n            onCanvasTouchMove(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchmove', evt)\n                this.onTouchMove(evt)\n            },\n\n            onCanvasTouchEnd(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchend', evt)\n                this.onTouchEnd(evt)\n            },\n\n            onCanvasTouchCancel(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('canvastouchcancel', evt)\n                this.onTouchCancel(evt)\n            },\n\n            onCanvasLongTap(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('longtap', evt)\n            },\n\n            onCanvasError(evt) {\n                dealWithEvt(evt)\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    // 开放能力\n    ad: {\n        wxCompName: 'ad',\n        properties: [{\n            name: 'unitId',\n            get(domNode) {\n                return domNode.getAttribute('unit-id') || ''\n            },\n        }, {\n            name: 'adIntervals',\n            get(domNode) {\n                return +domNode.getAttribute('ad-intervals') || 0\n            },\n        }, {\n            name: 'adType',\n            get(domNode) {\n                return domNode.getAttribute('ad-type') || 'banner'\n            },\n        }, {\n            name: 'adTheme',\n            get(domNode) {\n                return domNode.getAttribute('ad-theme') || 'white'\n            },\n        }],\n        handles: {\n            onAdLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onAdError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n\n            onAdClose(evt) {\n                this.callSingleEvent('close', evt)\n            },\n        },\n    },\n    'official-account': {\n        wxCompName: 'official-account',\n        handles: {\n            onOfficialAccountLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onOfficialAccountError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'open-data': {\n        wxCompName: 'open-data',\n        properties: [{\n            name: 'type',\n            get(domNode) {\n                return domNode.getAttribute('type') || ''\n            },\n        }, {\n            name: 'openGid',\n            get(domNode) {\n                return domNode.getAttribute('open-gid') || ''\n            },\n        }, {\n            name: 'lang',\n            get(domNode) {\n                return domNode.getAttribute('lang') || 'en'\n            },\n        }, {\n            name: 'defaultText',\n            get(domNode) {\n                return domNode.getAttribute('default-text') || ''\n            },\n        }, {\n            name: 'defaultAvatar',\n            get(domNode) {\n                return domNode.getAttribute('default-avatar') || ''\n            },\n        }],\n        handles: {\n            onOpenDataError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    'web-view': {\n        wxCompName: 'web-view',\n        properties: [{\n            name: 'src',\n            get(domNode) {\n                const window = cache.getWindow(domNode.$$pageId)\n                return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n            },\n        }],\n        handles: {\n            onWebviewMessage(evt) {\n                this.callSingleEvent('message', evt)\n            },\n\n            onWebviewLoad(evt) {\n                this.callSingleEvent('load', evt)\n            },\n\n            onWebviewError(evt) {\n                this.callSingleEvent('error', evt)\n            },\n        },\n    },\n    // 特殊补充\n    capture: {\n        wxCompName: 'capture',\n    },\n    catch: {\n        wxCompName: 'catch',\n    },\n    animation: {\n        wxCompName: 'animation',\n    },\n    'not-support': {\n        wxCompName: 'not-support',\n    },\n}\n\n// 补充标签\nwxComponentMap.SELECT = wxComponentMap.picker\n\nconst wxSubComponentMap = {\n    'movable-view': {\n        properties: [{\n            name: 'direction',\n            get(domNode) {\n                return domNode.getAttribute('direction') || 'none'\n            },\n        }, {\n            name: 'inertia',\n            get(domNode) {\n                return !!domNode.getAttribute('inertia')\n            },\n        }, {\n            name: 'outOfBounds',\n            get(domNode) {\n                return !!domNode.getAttribute('out-of-bounds')\n            },\n        }, {\n            name: 'x',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('x') || 0\n            },\n        }, {\n            name: 'y',\n            canBeUserChanged: true,\n            get(domNode) {\n                return +domNode.getAttribute('y') || 0\n            },\n        }, {\n            name: 'damping',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('damping'))\n                return !isNaN(value) ? value : 20\n            },\n        }, {\n            name: 'friction',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('friction'))\n                return !isNaN(value) ? value : 2\n            },\n        }, {\n            name: 'disabled',\n            get(domNode) {\n                return !!domNode.getAttribute('disabled')\n            },\n        }, {\n            name: 'scale',\n            get(domNode) {\n                return !!domNode.getAttribute('scale')\n            },\n        }, {\n            name: 'scaleMin',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('scale-min'))\n                return !isNaN(value) ? value : 0.5\n            },\n        }, {\n            name: 'scaleMax',\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('scale-max'))\n                return !isNaN(value) ? value : 10\n            },\n        }, {\n            name: 'scaleValue',\n            canBeUserChanged: true,\n            get(domNode) {\n                const value = parseFloat(domNode.getAttribute('scale-value'))\n                return !isNaN(value) ? value : 1\n            },\n        }, {\n            name: 'animation',\n            get(domNode) {\n                const value = domNode.getAttribute('animation')\n                return value !== undefined ? !!value : true\n            },\n        }],\n        handles: {\n            onMovableViewChange(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n                domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.x = evt.detail.x\n                domNode._oldValues.y = evt.detail.y\n\n                this.callSingleEvent('change', evt)\n            },\n\n            onMovableViewScale(evt) {\n                const domNode = this.getDomNodeFromEvt(evt)\n                if (!domNode) return\n\n                domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n                domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n                domNode.$$setAttributeWithoutUpdate('scale-value', evt.detail.scale)\n\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                domNode._oldValues.x = evt.detail.x\n                domNode._oldValues.y = evt.detail.y\n                domNode._oldValues.scaleValue = evt.detail.scale\n\n                this.callSingleEvent('scale', evt)\n            },\n\n            onMovableViewHtouchmove(evt) {\n                this.callSingleEvent('htouchmove', evt)\n            },\n\n            onMovableViewVtouchmove(evt) {\n                this.callSingleEvent('vtouchmove', evt)\n            },\n        },\n    },\n    'swiper-item': {\n        properties: [{\n            name: 'itemId',\n            get(domNode) {\n                return domNode.getAttribute('item-id') || ''\n            },\n        }],\n    },\n    'picker-view-column': {},\n}\n\nconst wxComponentKeys = Object.keys(wxComponentMap)\nconst wxCompNameMap = {}\nconst wxCompData = {}\nconst wxCompHandles = {}\nwxComponentKeys.forEach(key => {\n    const {wxCompName, properties, handles} = wxComponentMap[key]\n\n    wxCompNameMap[key] = wxCompName\n    wxCompData[wxCompName] = properties || []\n    if (handles) Object.assign(wxCompHandles, handles)\n})\nObject.keys(wxSubComponentMap).forEach(key => {\n    const {handles} = wxSubComponentMap[key]\n    if (handles) Object.assign(wxCompHandles, handles)\n})\n\nmodule.exports = {\n    wxCompData,\n    wxCompHandles,\n    wxCompNameMap,\n    wxSubComponentMap,\n}\n","const mp = require('miniprogram-render')\nconst _ = require('./util/tool')\nconst component = require('./util/component')\n\nconst {\n    cache,\n    Event,\n    EventTarget,\n    tool,\n} = mp.$$adapter\nconst {\n    USE_TEMPLATE,\n} = _\nconst {\n    wxCompHandles,\n    wxCompNameMap,\n} = component\n\n// dom 子树作为自定义组件渲染的层级数\nconst MAX_DOM_SUB_TREE_LEVEL = 10\nlet DOM_SUB_TREE_LEVEL = 10\n\nconsole.warn('当前渲染模式版本：miniprogram-element@2.x 版本（建议最低基础库版本 2.11.2）。\\n\\n2.x 版本对比 1.x 版本去除了渲染内置组件时额外引入的一层节点，如果升级版本过程中遇到样式错乱问题，可尝试去除使用 1.x 版本时额外追加的兼容样式，也可选择退回 1.x 版本（退回版本可以使用 generate.renderVersion 和 generate.elementVersion 配置：https://wechat-miniprogram.github.io/kbone/docs/config/#generate-renderversion ）。')\n\nconst version = wx.getSystemInfoSync().SDKVersion\nconst behaviors = []\nif (_.compareVersion(version, '2.10.3') >= 0) behaviors.push('wx://form-field-button')\nif (_.compareVersion(version, '2.11.2') < 0) console.warn('当前基础库版本低于 2.11.2，建议调整最低支持基础库。')\n\nmodule.exports = Behavior({\n    behaviors,\n    properties: {\n        inCover: {\n            type: Boolean,\n            value: false,\n        },\n    },\n    data: {\n        wxCompName: '', // 需要渲染的内置组件名\n        wxCustomCompName: '', // 需要渲染的自定义组件名\n        childNodes: [], // 孩子节点\n    },\n    created() {\n        const config = cache.getConfig()\n\n        // 根据配置重置全局变量\n        const domSubTreeLevel = +config.optimization.domSubTreeLevel\n        if (domSubTreeLevel >= 1 && domSubTreeLevel <= MAX_DOM_SUB_TREE_LEVEL) DOM_SUB_TREE_LEVEL = domSubTreeLevel\n    },\n    attached() {\n        const nodeId = this.dataset.privateNodeId\n        const pageId = this.dataset.privatePageId\n        const data = {}\n\n        this.nodeId = nodeId\n        this.pageId = pageId\n\n        // 记录 dom\n        this.domNode = cache.getNode(pageId, nodeId)\n        if (!this.domNode) return\n\n        // 存储 document\n        this.document = cache.getDocument(pageId)\n\n        // 监听全局事件\n        this.onChildNodesUpdate = tool.throttle(this.onChildNodesUpdate.bind(this))\n        this.domNode.$$clearEvent('$$childNodesUpdate', {$$namespace: 'root'})\n        this.domNode.addEventListener('$$childNodesUpdate', this.onChildNodesUpdate, {$$namespace: 'root'})\n        this.onSelfNodeUpdate = tool.throttle(this.onSelfNodeUpdate.bind(this))\n        this.domNode.$$clearEvent('$$domNodeUpdate', {$$namespace: 'root'})\n        this.domNode.addEventListener('$$domNodeUpdate', this.onSelfNodeUpdate, {$$namespace: 'root'})\n\n        // 初始化\n        this.init(data)\n\n        // 初始化孩子节点\n        const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n        data.childNodes = _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate)\n\n        // 挂载该节点所处的自定义组件实例\n        if (data.wxCompName) this.domNode._wxComponent = this\n\n        // 执行一次 setData\n        if (Object.keys(data).length) this.setData(data)\n    },\n    detached() {\n        this.nodeId = null\n        this.pageId = null\n        this.domNode = null\n        this.document = null\n    },\n    methods: {\n        /**\n         * 初始化\n         */\n        init(data) {\n            const domNode = this.domNode\n            const tagName = domNode.tagName\n\n            // 使用 template 渲染\n            if (USE_TEMPLATE.indexOf(tagName) !== -1 || USE_TEMPLATE.indexOf(domNode.behavior) !== -1) return\n\n            if (tagName === 'WX-COMPONENT') {\n                // 内置组件，目前只有 view 组件需要进入\n                data.wxCompName = domNode.behavior\n                const wxCompName = wxCompNameMap[data.wxCompName]\n                if (wxCompName) _.checkComponentAttr(wxCompName, domNode, data)\n                else console.warn(`value \"${data.wxCompName}\" is not supported for wx-component's behavior`)\n            }\n        },\n\n        /**\n         * 监听子节点变化\n         */\n        onChildNodesUpdate() {\n            if (!this.pageId || !this.nodeId) return\n\n            // 儿子节点有变化\n            const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n            if (_.checkDiffChildNodes(childNodes, this.data.childNodes)) {\n                this.setData({\n                    childNodes: _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate),\n                })\n            }\n\n            // 触发子节点变化\n            const childNodeStack = [].concat(childNodes)\n            let childNode = childNodeStack.pop()\n            while (childNode) {\n                if (childNode.type === 'element' && !childNode.isImage && !childNode.isLeaf && !childNode.isSimple && !childNode.useTemplate) {\n                    childNode.domNode.$$trigger('$$childNodesUpdate')\n                }\n\n                if (childNode.childNodes && childNode.childNodes.length) {\n                    childNode.childNodes.forEach(subChildNode => childNodeStack.push(subChildNode))\n                }\n                childNode = childNodeStack.pop()\n            }\n        },\n\n        /**\n         * 监听当前节点变化\n         */\n        onSelfNodeUpdate() {\n            if (!this.pageId || !this.nodeId) return\n\n            const domNode = this.domNode\n            const data = this.data\n            const tagName = domNode.tagName\n\n            // 使用 template 渲染\n            if (USE_TEMPLATE.indexOf(tagName) !== -1 || USE_TEMPLATE.indexOf(domNode.behavior) !== -1) return\n\n            if (tagName === 'WX-COMPONENT') {\n                // 内置组件，目前只有 view 组件需要进入\n                const newData = {}\n                const wxCompName = wxCompNameMap[domNode.behavior]\n\n                if (data.wxCompName !== domNode.behavior) newData.wxCompName = domNode.behavior\n                if (wxCompName) _.checkComponentAttr(wxCompName, domNode, newData, data)\n                if (Object.keys(newData)) this.setData(newData)\n            }\n        },\n\n        /**\n         * 触发简单节点事件，不做捕获冒泡处理\n         */\n        callSingleEvent(eventName, evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$trigger(eventName, {\n                event: new Event({\n                    timeStamp: evt && evt.timeStamp,\n                    touches: evt && evt.touches,\n                    changedTouches: evt && evt.changedTouches,\n                    name: eventName,\n                    target: domNode,\n                    eventPhase: Event.AT_TARGET,\n                    detail: evt && evt.detail,\n                    $$extra: evt && evt.extra,\n                }),\n                currentTarget: domNode,\n            })\n        },\n\n        /**\n         * 触发简单节点事件，不做冒泡处理，但会走捕获阶段\n         */\n        callSimpleEvent(eventName, evt, domNode) {\n            domNode = domNode || this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, new Event({\n                touches: evt.touches,\n                changedTouches: evt.changedTouches,\n                name: eventName,\n                target: domNode,\n                eventPhase: Event.AT_TARGET,\n                detail: evt && evt.detail,\n                $$extra: evt && evt.extra,\n                bubbles: false, // 不冒泡\n            }))\n        },\n\n        /**\n         * 触发事件\n         */\n        callEvent(eventName, evt, extra) {\n            const domNode = this.getDomNodeFromEvt(evt)\n\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, eventName, evt, extra, (domNode, evt, isCapture) => {\n                // 延迟触发跳转，先等所有同步回调处理完成\n                setTimeout(() => {\n                    if (evt.cancelable) return\n                    const window = cache.getWindow(this.pageId)\n\n                    // 处理特殊节点事件\n                    if (domNode.tagName === 'A' && evt.type === 'click' && !isCapture) {\n                        // 处理 a 标签的跳转\n                        const href = domNode.href\n                        const target = domNode.target\n\n                        if (!href || href.indexOf('javascript') !== -1) return\n\n                        if (target === '_blank') window.open(href)\n                        else window.location.href = href\n                    } else if (domNode.tagName === 'LABEL' && evt.type === 'click' && !isCapture) {\n                        // 处理 label 的点击\n                        const forValue = domNode.getAttribute('for')\n                        let targetDomNode\n                        if (forValue) {\n                            targetDomNode = window.document.getElementById(forValue)\n                        } else {\n                            targetDomNode = domNode.querySelector('input')\n\n                            // 寻找 switch 节点\n                            if (!targetDomNode) targetDomNode = domNode.querySelector('wx-component[behavior=switch]')\n                        }\n\n                        if (!targetDomNode || !!targetDomNode.getAttribute('disabled')) return\n\n                        // 找到了目标节点\n                        if (targetDomNode.tagName === 'INPUT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const type = targetDomNode.type\n                            if (type === 'radio') {\n                                targetDomNode.setAttribute('checked', true)\n                                const name = targetDomNode.name\n                                const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\n                                for (const otherDomNode of otherDomNodes) {\n                                    if (otherDomNode.type === 'radio' && otherDomNode !== targetDomNode) {\n                                        otherDomNode.setAttribute('checked', false)\n                                    }\n                                }\n                                this.callSimpleEvent('change', {detail: {value: targetDomNode.value}}, targetDomNode)\n                            } else if (type === 'checkbox') {\n                                targetDomNode.setAttribute('checked', !targetDomNode.checked)\n                                this.callSimpleEvent('change', {detail: {value: targetDomNode.checked ? [targetDomNode.value] : []}}, targetDomNode)\n                            } else {\n                                targetDomNode.focus()\n                            }\n                        } else if (targetDomNode.tagName === 'WX-COMPONENT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const behavior = targetDomNode.behavior\n                            if (behavior === 'switch') {\n                                const checked = !targetDomNode.getAttribute('checked')\n                                targetDomNode.setAttribute('checked', checked)\n                                this.callSimpleEvent('change', {detail: {value: checked}}, targetDomNode)\n                            }\n                        }\n                    } else if ((domNode.tagName === 'BUTTON' || (domNode.tagName === 'WX-COMPONENT' && domNode.behavior === 'button')) && evt.type === 'click' && !isCapture) {\n                        // 处理 button 点击\n                        const type = domNode.tagName === 'BUTTON' ? domNode.getAttribute('type') : domNode.getAttribute('form-type')\n                        const formAttr = domNode.getAttribute('form')\n                        const form = formAttr ? window.document.getElementById(formAttr) : _.findParentNode(domNode, 'FORM')\n\n                        if (!form) return\n                        if (type !== 'submit' && type !== 'reset') return\n\n                        const inputList = form.querySelectorAll('input[name]')\n                        const textareaList = form.querySelectorAll('textarea[name]')\n                        const switchList = form.querySelectorAll('wx-component[behavior=switch]').filter(item => !!item.getAttribute('name'))\n                        const sliderList = form.querySelectorAll('wx-component[behavior=slider]').filter(item => !!item.getAttribute('name'))\n                        const pickerList = form.querySelectorAll('wx-component[behavior=picker]').filter(item => !!item.getAttribute('name'))\n\n                        if (type === 'submit') {\n                            const formData = {}\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        if (item.checked) formData[item.name] = item.value\n                                    } else if (item.type === 'checkbox') {\n                                        formData[item.name] = formData[item.name] || []\n                                        if (item.checked) formData[item.name].push(item.value)\n                                    } else {\n                                        formData[item.name] = item.value\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => formData[item.getAttribute('name')] = item.value)\n                            if (switchList.length) switchList.forEach(item => formData[item.getAttribute('name')] = !!item.getAttribute('checked'))\n                            if (sliderList.length) sliderList.forEach(item => formData[item.getAttribute('name')] = +item.getAttribute('value') || 0)\n                            if (pickerList.length) pickerList.forEach(item => formData[item.getAttribute('name')] = item.getAttribute('value'))\n\n                            const detail = {value: formData}\n                            if (form._formId) {\n                                detail.formId = form._formId\n                                form._formId = null\n                            }\n                            this.callSimpleEvent('submit', {detail, extra: {$$from: 'button'}}, form)\n                        } else if (type === 'reset') {\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        item.setAttribute('checked', false)\n                                    } else if (item.type === 'checkbox') {\n                                        item.setAttribute('checked', false)\n                                    } else {\n                                        item.setAttribute('value', '')\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => item.setAttribute('value', ''))\n                            if (switchList.length) switchList.forEach(item => item.setAttribute('checked', undefined))\n                            if (sliderList.length) sliderList.forEach(item => item.setAttribute('value', undefined))\n                            if (pickerList.length) pickerList.forEach(item => item.setAttribute('value', undefined))\n\n                            this.callSimpleEvent('reset', {extra: {$$from: 'button'}}, form)\n                        }\n                    }\n                }, 0)\n            })\n        },\n\n        /**\n         * 监听节点事件\n         */\n        onTouchStart(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchstart', evt)\n            }\n        },\n\n        onTouchMove(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchmove', evt)\n            }\n        },\n\n        onTouchEnd(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchend', evt)\n            }\n        },\n\n        onTouchCancel(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchcancel', evt)\n            }\n        },\n\n        onTap(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('click', evt, {button: 0}) // 默认左键\n            }\n        },\n\n        onLongPress(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('longpress', evt)\n            }\n        },\n\n        /**\n         * 图片相关事件\n         */\n        onImgLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onImgError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        /**\n         * capture 相关事件，wx-capture 的事件不走仿造事件捕获冒泡系统，单独触发\n         */\n        onCaptureTouchStart(evt) {\n            this.callSingleEvent('touchstart', evt)\n        },\n\n        onCaptureTouchMove(evt) {\n            this.callSingleEvent('touchmove', evt)\n        },\n\n        onCaptureTouchEnd(evt) {\n            this.callSingleEvent('touchend', evt)\n        },\n\n        onCaptureTouchCancel(evt) {\n            this.callSingleEvent('touchcancel', evt)\n        },\n\n        onCaptureTap(evt) {\n            this.callSingleEvent('click', evt)\n        },\n\n        onCaptureLongPress(evt) {\n            this.callSingleEvent('longpress', evt)\n        },\n\n        /**\n         * 动画相关事件\n         */\n        onTransitionEnd(evt) {\n            this.callEvent('transitionend', evt)\n        },\n\n        onAnimationStart(evt) {\n            this.callEvent('animationstart', evt)\n        },\n\n        onAnimationIteration(evt) {\n            this.callEvent('animationiteration', evt)\n        },\n\n        onAnimationEnd(evt) {\n            this.callEvent('animationend', evt)\n        },\n\n        /**\n         * 从小程序事件对象中获取 domNode\n         */\n        getDomNodeFromEvt(evt) {\n            if (!evt) return\n            const pageId = this.pageId\n            const originNodeId = evt.currentTarget && evt.currentTarget.dataset.privateNodeId || this.nodeId\n            return cache.getNode(pageId, originNodeId)\n        },\n\n        ...wxCompHandles,\n    }\n})\n","const mp = require('miniprogram-render')\r\nconst component = require('./component')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\nconst {\r\n    wxCompData,\r\n    wxCompNameMap,\r\n    wxSubComponentMap,\r\n} = component\r\n\r\nconst ELEMENT_DIFF_KEYS = [\r\n    'nodeId', 'pageId', 'id', 'className', 'style', // 通用字段\r\n    'isImage', 'src', 'mode', 'webp', 'lazyLoad', 'showMenuByLongpress', // image\r\n    'useTemplate', 'extra', 'compName', // template 渲染\r\n    'isLeaf', 'content', // leaf\r\n    'isSimple' // 普通节点\r\n]\r\nconst TEXT_NODE_DIFF_KEYS = ['nodeId', 'pageId', 'content']\r\nconst NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT = ['WX-COMPONENT', 'WX-CUSTOM-COMPONENT'] // 需要分离 class 和 style 的节点\r\nconst RELATION_PARENT = ['swiper', 'movable-area', 'picker-view']\r\nconst RELATION_CHILD = ['swiper-item', 'movable-view', 'picker-view-column']\r\nconst NEET_RENDER_TO_CUSTOM_ELEMENT = ['IFRAME', ...NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT] // 必须渲染成自定义组件的节点\r\nconst USE_TEMPLATE = ['cover-image', 'cover-view', 'movable-area', 'movable-view', 'scroll-view', 'swiper', 'swiper-item', 'icon', 'progress', 'rich-text', 'text', 'button', 'editor', 'form', 'INPUT', 'picker', 'SELECT', 'picker-view', 'picker-view-column', 'slider', 'switch', 'TEXTAREA', 'navigator', 'camera', 'image', 'live-player', 'live-pusher', 'VIDEO', 'map', 'CANVAS', 'ad', 'official-account', 'open-data', 'web-view', 'capture', 'catch', 'animation', 'not-support', 'WX-CUSTOM-COMPONENT'] // 使用 template 渲染\r\n\r\n/**\r\n * 过滤子节点，只获取儿子节点\r\n */\r\nfunction filterNodes(domNode, level, component) {\r\n    const window = cache.getWindow(domNode.$$pageId)\r\n    let childNodes = domNode.childNodes || []\r\n\r\n    if (typeof childNodes.map !== 'function') return []\r\n\r\n    if (domNode.tagName === 'SELECT') {\r\n        // select 标签只渲染和 select 值相同的 option\r\n        const index = childNodes.findIndex(childNode => childNode.value === domNode.value)\r\n        childNodes = index !== -1 ? [childNodes[index]] : []\r\n    }\r\n\r\n    return childNodes.map(child => {\r\n        const domInfo = child.$$domInfo\r\n\r\n        if (domInfo.type !== 'element' && domInfo.type !== 'text') return\r\n\r\n        // 挂载该节点所处的自定义组件实例\r\n        child._wxComponent = component\r\n\r\n        domInfo.className = domInfo.type === 'element' ? `h5-${domInfo.tagName} node-${domInfo.nodeId} ${domInfo.className || ''}` : '' // 增加默认 class\r\n        domInfo.domNode = child\r\n\r\n        // 特殊节点\r\n        if (NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT.indexOf(child.tagName) >= 0) {\r\n            if (domInfo.tagName === 'wx-component' && RELATION_CHILD.indexOf(child.behavior) !== -1) {\r\n                // 特殊内置组件，强制作为某内置组件的子组件，需要直接在当前模板渲染\r\n                domInfo.compName = child.behavior\r\n                domInfo.extra = {hidden: child.getAttribute('hidden') || false}\r\n\r\n                // 补充该内置组件的属性\r\n                const {properties} = wxSubComponentMap[child.behavior] || {}\r\n                if (properties && properties.length) {\r\n                    properties.forEach(({name, get}) => {\r\n                        domInfo.extra[name] = get(child)\r\n                    })\r\n                }\r\n\r\n                if (child.childNodes.length && level > 0) {\r\n                    domInfo.childNodes = filterNodes(child, level - 1, component)\r\n                }\r\n                return domInfo\r\n            }\r\n\r\n            // 不需要处理 id 和样式\r\n            domInfo.className = `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`\r\n            domInfo.id = ''\r\n            domInfo.style = ''\r\n        }\r\n\r\n        // 判断图片节点\r\n        domInfo.isImage = domInfo.type === 'element' && domInfo.tagName === 'img'\r\n        if (domInfo.isImage) {\r\n            domInfo.src = child.src ? tool.completeURL(child.src, window.location.origin, true) : ''\r\n            domInfo.mode = child.getAttribute('mode') || ''\r\n            domInfo.webp = !!child.getAttribute('webp')\r\n            domInfo.lazyLoad = !!child.getAttribute('lazy-load')\r\n            domInfo.showMenuByLongpress = !!child.getAttribute('show-menu-by-longpress')\r\n        }\r\n\r\n        // 判断是否使用 template 渲染\r\n        let templateName = domInfo.tagName === 'wx-component' ? child.behavior : child.tagName\r\n        templateName = !mp.$$adapter.tool.isTagNameSupport(templateName) ? 'not-support' : templateName\r\n        domInfo.useTemplate = !domInfo.isImage && USE_TEMPLATE.indexOf(templateName) !== -1\r\n        if (domInfo.useTemplate) {\r\n            const wxCompName = wxCompNameMap[templateName]\r\n            const extra = {}\r\n\r\n            if (wxCompName) checkComponentAttr(wxCompName, child, extra, null, `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`)\r\n\r\n            extra.pageId = domInfo.pageId\r\n            extra.nodeId = domInfo.nodeId\r\n            extra.inCover = component.data.inCover\r\n            extra.hasChildren = !!child.childNodes.length\r\n            domInfo.extra = extra\r\n\r\n            // 给 template 中的特殊节点用\r\n            const relationIndex = RELATION_PARENT.indexOf(templateName)\r\n            if (relationIndex !== -1) {\r\n                const childNodes = (templateName === 'picker-view' ? filterNodes(child, 1) : filterNodes(child, 0)) || []\r\n                extra.childNodes = childNodes.filter(childNode => childNode.type === 'element' && childNode.compName === RELATION_CHILD[relationIndex]).map(childNode => {\r\n                    const copyChildNode = Object.assign({}, childNode)\r\n                    delete copyChildNode.domNode\r\n\r\n                    // picker-view-column 不支持监听自定义组件内子节点的变化，所以需要在当前自定义组件中渲染\r\n                    if (copyChildNode.childNodes) {\r\n                        copyChildNode.childNodes = copyChildNode.childNodes.map(grandchild => {\r\n                            // picker-view-column 的第一层子节点无法设置 style，不然会覆盖内置组件自己的样式\r\n                            const copyGrandchildNode = Object.assign({}, grandchild, {style: ''})\r\n                            delete copyGrandchildNode.domNode\r\n                            return copyGrandchildNode\r\n                        })\r\n                    }\r\n\r\n                    return copyChildNode\r\n                })\r\n            }\r\n\r\n            // wx-catch 的 touch 事件会导致 tap 事件的触发，需要真正被绑定后再补充句柄\r\n            if (wxCompName === 'catch') {\r\n                extra.touchStart = child.$$hasEventHandler('touchstart') ? 'onTouchStart' : ''\r\n                extra.touchMove = child.$$hasEventHandler('touchmove') ? 'onTouchMove' : ''\r\n                extra.touchEnd = child.$$hasEventHandler('touchend') ? 'onTouchEnd' : ''\r\n                extra.touchCancel = child.$$hasEventHandler('touchcancel') ? 'onTouchCancel' : ''\r\n            }\r\n\r\n            // 1. text 组件存在 bug，其子节点无法使用自定义组件的方式来渲染，会存在无法更新的问题，需要基础库解决，故此处只渲染其文本内容\r\n            // 2. 不支持的节点，需要展示占位文本\r\n            if (wxCompName === 'text' || wxCompName === 'not-support') extra.content = child.textContent\r\n\r\n            // 第三方自定义组件\r\n            if (templateName === 'WX-CUSTOM-COMPONENT') {\r\n                extra.wxCompName = 'custom-component'\r\n                extra.wxCustomCompName = child.behavior\r\n            }\r\n        }\r\n\r\n        // 判断叶子节点\r\n        domInfo.isLeaf = !domInfo.isImage && !domInfo.useTemplate && domInfo.type === 'element' && !child.children.length && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1\r\n        if (domInfo.isLeaf) {\r\n            domInfo.content = child.childNodes.map(childNode => (childNode.$$domInfo.type === 'text' ? childNode.textContent : '')).join('')\r\n        }\r\n\r\n        // 判断可直接用 view 渲染的简单子节点\r\n        domInfo.isSimple = !domInfo.isImage && !domInfo.useTemplate && !domInfo.isLeaf && domInfo.type === 'element' && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1 && level > 0\r\n        if (domInfo.isSimple) {\r\n            domInfo.content = ''\r\n            domInfo.childNodes = filterNodes(child, level - 1, component)\r\n        }\r\n\r\n        return domInfo\r\n    }).filter(child => !!child)\r\n}\r\n\r\n/**\r\n * 判断两值是否相等\r\n */\r\nfunction isEqual(a, b) {\r\n    if (typeof a === 'number' && typeof b === 'number') {\r\n        // 值为数值，需要考虑精度\r\n        return parseInt(a * 1000, 10) === parseInt(b * 1000, 10)\r\n    }\r\n\r\n    return a === b\r\n}\r\n\r\n/**\r\n * 比较新旧子节点是否不同\r\n */\r\nfunction checkDiffChildNodes(newChildNodes, oldChildNodes) {\r\n    if (newChildNodes.length !== oldChildNodes.length) return true\r\n\r\n    for (let i = 0, len = newChildNodes.length; i < len; i++) {\r\n        const newChild = newChildNodes[i]\r\n        const oldChild = oldChildNodes[i]\r\n\r\n        if (newChild.type !== oldChild.type) return true\r\n\r\n        const keys = newChild.type === 'element' ? ELEMENT_DIFF_KEYS : TEXT_NODE_DIFF_KEYS\r\n\r\n        for (const key of keys) {\r\n            const newValue = newChild[key]\r\n            const oldValue = oldChild[key]\r\n            if (typeof newValue === 'object' && !Array.isArray(newValue)) {\r\n                // 值为对象，则判断对象顶层值是否有变化\r\n                if (typeof oldValue !== 'object') return true\r\n\r\n                // 需要强制更新\r\n                if (key === 'extra' && newValue && newValue.forceUpdate) {\r\n                    newValue.forceUpdate = false\r\n                    return true\r\n                }\r\n\r\n                const objectKeys = Object.keys(newValue)\r\n                for (const objectKey of objectKeys) {\r\n                    if (!isEqual(newValue[objectKey], oldValue[objectKey])) return true\r\n                }\r\n            } else if (!isEqual(newValue, oldValue)) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        // 比较孙子后辈节点\r\n        const newGrandChildNodes = newChild.childNodes || []\r\n        const oldGrandChildNodes = oldChild.childNodes || []\r\n        if (newGrandChildNodes.length || oldGrandChildNodes.length) {\r\n            if (checkDiffChildNodes(newGrandChildNodes, oldGrandChildNodes)) return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 检查组件属性\r\n */\r\nfunction checkComponentAttr(name, domNode, destData, oldData, extraClass = '') {\r\n    const attrs = wxCompData[name]\r\n\r\n    destData.wxCompName = name\r\n\r\n    if (attrs && attrs.length) {\r\n        for (const {name, get, canBeUserChanged = false} of attrs) {\r\n            const newValue = get(domNode)\r\n            if (canBeUserChanged) {\r\n                // 可被用户行为改变的属性，除了 data 外，还需要对比监听到上次用户行为修改的值\r\n                const oldValues = domNode._oldValues\r\n                const isOldValuesChanged = oldValues ? !isEqual(newValue, oldValues[name]) : false\r\n                if (!oldData || !isEqual(newValue, oldData[name]) || isOldValuesChanged) {\r\n                    destData[name] = newValue\r\n                    if (isOldValuesChanged) destData.forceUpdate = true // 避免被 diff 掉，需要强制更新\r\n                }\r\n            } else if (!oldData || !isEqual(newValue, oldData[name])) {\r\n                // 对比 data\r\n                destData[name] = newValue\r\n            }\r\n        }\r\n    }\r\n\r\n    // 补充 id、class、style 和 hidden\r\n    const newId = domNode.id\r\n    if (!oldData || oldData.id !== newId) destData.id = newId\r\n    const newClass = `${extraClass} wx-comp-${name} node-${domNode.$$nodeId} ${domNode.className || ''}`\r\n    if (!oldData || oldData.className !== newClass) destData.className = newClass\r\n    const newStyle = domNode.style.cssText\r\n    if (!oldData || oldData.style !== newStyle) destData.style = newStyle\r\n    const newHidden = domNode.getAttribute('hidden') || false\r\n    if (!oldData || oldData.hidden !== newHidden) destData.hidden = newHidden\r\n}\r\n\r\n/**\r\n * 处理不需要渲染成自定义组件的节点\r\n */\r\nfunction dealWithLeafAndSimple(childNodes, onChildNodesUpdate) {\r\n    if (childNodes && childNodes.length) {\r\n        childNodes = childNodes.map(originChildNode => {\r\n            const childNode = Object.assign({}, originChildNode)\r\n\r\n            childNode.domNode.$$clearEvent('$$childNodesUpdate', {$$namespace: 'child'})\r\n            if (childNode.isImage || childNode.isLeaf || childNode.isSimple || childNode.useTemplate) {\r\n                childNode.domNode.addEventListener('$$childNodesUpdate', onChildNodesUpdate, {$$namespace: 'child'})\r\n            }\r\n\r\n            delete childNode.domNode\r\n            childNode.childNodes = dealWithLeafAndSimple(childNode.childNodes, onChildNodesUpdate)\r\n\r\n            return childNode\r\n        })\r\n    }\r\n\r\n    return childNodes\r\n}\r\n\r\n/**\r\n * 检查事件是否经过某个节点\r\n */\r\nfunction checkEventAccessDomNode(evt, domNode, dest) {\r\n    dest = dest || domNode.ownerDocument.body\r\n    let target = evt.target\r\n\r\n    // 该节点就是目标节点\r\n    if (domNode === dest) return true\r\n\r\n    while (target && target !== dest) {\r\n        if (target === domNode) return true\r\n        target = target.parentNode\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 查找最近的符合条件的祖先节点\r\n */\r\nfunction findParentNode(domNode, tagName) {\r\n    const checkParentNode = (parentNode, tagName) => {\r\n        if (!parentNode) return false\r\n        if (parentNode.tagName === tagName) return true\r\n        if (parentNode.tagName === 'WX-COMPONENT' && parentNode.behavior === tagName.toLowerCase()) return true\r\n\r\n        return false\r\n    }\r\n    let parentNode = domNode.parentNode\r\n\r\n    if (checkParentNode(parentNode, tagName)) return parentNode\r\n    while (parentNode && parentNode.tagName !== tagName) {\r\n        parentNode = parentNode.parentNode\r\n        if (checkParentNode(parentNode, tagName)) return parentNode\r\n    }\r\n\r\n    return null\r\n}\r\n\r\n/**\r\n * 判断基础库版本\r\n */\r\nfunction compareVersion(v1, v2) {\r\n    v1 = v1.split('.')\r\n    v2 = v2.split('.')\r\n    const len = Math.max(v1.length, v2.length)\r\n\r\n    while (v1.length < len) {\r\n        v1.push('0')\r\n    }\r\n    while (v2.length < len) {\r\n        v2.push('0')\r\n    }\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const num1 = parseInt(v1[i], 10)\r\n        const num2 = parseInt(v2[i], 10)\r\n\r\n        if (num1 > num2) {\r\n            return 1\r\n        } else if (num1 < num2) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nmodule.exports = {\r\n    USE_TEMPLATE,\r\n    filterNodes,\r\n    checkDiffChildNodes,\r\n    checkComponentAttr,\r\n    dealWithLeafAndSimple,\r\n    checkEventAccessDomNode,\r\n    findParentNode,\r\n    compareVersion,\r\n}\r\n"],"sourceRoot":""}
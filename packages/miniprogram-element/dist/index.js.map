{"version":3,"sources":["index.js","util\\tool.js","util\\init-data.js","util\\component.js","component\\cover-image.js","component\\cover-view.js","component\\movable-area.js","component\\scroll-view.js","component\\swiper.js","component\\view.js","component\\icon.js","component\\progress.js","component\\rich-text.js","component\\text.js","component\\button.js","component\\editor.js","component\\form.js","component\\input.js","component\\picker.js","component\\picker-view.js","component\\slider.js","component\\switch.js","component\\textarea.js","component\\navigator.js","component\\camera.js","component\\image.js","component\\live-player.js","component\\live-pusher.js","component\\video.js","component\\map.js","component\\canvas.js","component\\ad.js","component\\official-account.js","component\\open-data.js","component\\web-view.js","component\\movable-view.js","component\\swiper-item.js","component\\picker-view-column.js","util\\init-handle.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,AFMA;ADIA,AGTA,AFMA;AGRA,AJYA,AGTA,AFMA;AGRA,AJYA,AGTA,AFMA;AGRA,AJYA,AGTA,AFMA;AGRA,ACHA,ALeA,AGTA,AFMA;AGRA,ACHA,ALeA,AGTA,AFMA;AGRA,ACHA,ALeA,AGTA,AFMA;AGRA,ACHA,ACHA,ANkBA,AGTA,AFMA;AGRA,ACHA,ACHA,ANkBA,AGTA,AFMA;AGRA,ACHA,ACHA,ANkBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,APqBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,APqBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,APqBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ARwBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ARwBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ARwBA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AENA,ACHA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,AJYA,ACHA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,AHSA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,AHSA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,AJYA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,AJYA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,AJYA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,ACHA,ALeA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,ACHA,ALeA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,ACHA,ALeA,ACHA,ACHA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AGRA,AMlBA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AS1BA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,AJYA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,AJYA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,AJYA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ALeA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ALeA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ALeA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ANkBA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ANkBA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ANkBA,ACHA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ANkBA,AOrBA,ANkBA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ANkBA,AOrBA,ANkBA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,ANkBA,ACHA,ALeA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,ACHA,APqBA,AJYA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,ACHA,APqBA,AJYA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,ACHA,APqBA,AJYA,ACHA,AKfA,AJYA,AT2BA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,ACHA,AKfA,AbuCA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,ACHA,AKfA,AbuCA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,ACHA,AKfA,AbuCA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AKfA,AbuCA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AKfA,AbuCA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,ARwBA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ArB+DA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ArB+DA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ArB+DA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AENA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,ACHA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,ACHA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,AS3BA,ARwBA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,AS3BA,ARwBA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,AS3BA,ARwBA,AMlBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,AS3BA,ARwBA,AS3BA,AHSA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,ACHA,AS3BA,ARwBA,AS3BA,AHSA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,AHSA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AtBkEA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AJYA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AT2BA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,APqBA,AJYA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AJYA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,AbuCA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,Af6CA,AU9BA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,AbuCA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,AbuCA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,A5BoFA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,ANkBA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,AavCA,ACHA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,Ad0CA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AS3BA,ACHA,AIZA,AlBsDA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AlBsDA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AlBsDA,ADGA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AFMA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AnByDA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AU9BA,AMlBA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AnByDA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AnByDA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AnByDA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,AIZA,AnByDA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,Af6CA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,Af6CA,AXiCA,AavCA,AgBhDA,A5BoFA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,AU9BA,Af6CA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;A8BzFA,AjBmDA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,ALeA,ARwBA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AZoCA,Ac1CA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,AMlBA,AlCsGA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,AavCA,AENA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,Ae7CA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,Ae7CA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AZoCA,ALeA,AXiCA,Ae7CA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AjBmDA,AXiCA,Ae7CA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AjBmDA,AXiCA,Ae7CA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AmCzGA,ArC+GA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AgBhDA,AbuCA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AS3BA,ACHA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AatCA,AGTA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,AGTA,AFMA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AU9BA,AENA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,AbuCA,AMlBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,AMlBA,APqBA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;AgB/CA,AYpCA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,ADGA,A5BoFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7BuFA,ACHA;A4BnFA,A7Bufile":"index.js","sourcesContent":["const mp = require('miniprogram-render')\nconst _ = _require('./util/tool')\nconst initHandle = _require('./util/init-handle')\nconst component = _require('./util/component')\n\nconst {\n    cache,\n    Event,\n    EventTarget,\n    tool,\n} = mp.$$adapter\nconst {\n    NOT_SUPPORT,\n    IN_COVER,\n} = _\nconst {\n    wxCompNameMap,\n} = component\n\n// dom 子树作为自定义组件渲染的层级数\nconst MAX_DOM_SUB_TREE_LEVEL = 10\nlet DOM_SUB_TREE_LEVEL = 10\n\nconst version = wx.getSystemInfoSync().SDKVersion\nconst behaviors = []\nif (_.compareVersion(version, '2.10.3') >= 0) {\n    behaviors.push('wx://form-field-button')\n}\n\nComponent({\n    behaviors,\n    properties: {\n        inCover: {\n            type: Boolean,\n            value: false,\n        },\n    },\n    data: {\n        wxCompName: '', // 需要渲染的内置组件名\n        wxCustomCompName: '', // 需要渲染的自定义组件名\n        childNodes: [], // 孩子节点\n    },\n    options: {\n        addGlobalClass: true, // 开启全局样式\n    },\n    created() {\n        const config = cache.getConfig()\n\n        // 根据配置重置全局变量\n        const domSubTreeLevel = +config.optimization.domSubTreeLevel\n        if (domSubTreeLevel >= 1 && domSubTreeLevel <= MAX_DOM_SUB_TREE_LEVEL) DOM_SUB_TREE_LEVEL = domSubTreeLevel\n    },\n    attached() {\n        const nodeId = this.dataset.privateNodeId\n        const pageId = this.dataset.privatePageId\n        const data = {}\n\n        this.nodeId = nodeId\n        this.pageId = pageId\n\n        // 记录 dom\n        this.domNode = cache.getNode(pageId, nodeId)\n        if (!this.domNode) return\n        this.domNode._wxComponent = this\n\n        // 存储 document\n        this.document = cache.getDocument(pageId)\n\n        // 监听全局事件\n        this.onChildNodesUpdate = tool.throttle(this.onChildNodesUpdate.bind(this))\n        this.domNode.$$clearEvent('$$childNodesUpdate')\n        this.domNode.addEventListener('$$childNodesUpdate', this.onChildNodesUpdate)\n        this.onSelfNodeUpdate = tool.throttle(this.onSelfNodeUpdate.bind(this))\n        this.domNode.$$clearEvent('$$domNodeUpdate')\n        this.domNode.addEventListener('$$domNodeUpdate', this.onSelfNodeUpdate)\n\n        // 初始化\n        this.init(data)\n        if (IN_COVER.indexOf(data.wxCompName) !== -1) this.data.inCover = true\n\n        // 初始化孩子节点\n        const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n        data.childNodes = _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate)\n\n        // 执行一次 setData\n        if (Object.keys(data).length) this.setData(data)\n    },\n    detached() {\n        this.nodeId = null\n        this.pageId = null\n        this.domNode = null\n        this.document = null\n    },\n    methods: {\n        /**\n         * 监听子节点变化\n         */\n        onChildNodesUpdate() {\n            // 判断是否已被销毁\n            if (!this.pageId || !this.nodeId) return\n\n            // 儿子节点有变化\n            const childNodes = _.filterNodes(this.domNode, DOM_SUB_TREE_LEVEL - 1, this)\n            if (_.checkDiffChildNodes(childNodes, this.data.childNodes)) {\n                this.setData({\n                    childNodes: _.dealWithLeafAndSimple(childNodes, this.onChildNodesUpdate),\n                })\n            }\n\n            // 触发子节点变化\n            const childNodeStack = [].concat(childNodes)\n            let childNode = childNodeStack.pop()\n            while (childNode) {\n                if (childNode.type === 'element' && !childNode.isImage && !childNode.isLeaf && !childNode.isSimple && !childNode.useTemplate) {\n                    childNode.domNode.$$trigger('$$childNodesUpdate')\n                }\n\n                if (childNode.childNodes && childNode.childNodes.length) childNode.childNodes.forEach(subChildNode => childNodeStack.push(subChildNode))\n                childNode = childNodeStack.pop()\n            }\n        },\n\n        /**\n         * 监听当前节点变化\n         */\n        onSelfNodeUpdate() {\n            // 判断是否已被销毁\n            if (!this.pageId || !this.nodeId) return\n\n            const newData = {}\n            const domNode = this.domNode\n            const data = this.data\n            const tagName = domNode.tagName\n\n            if (tagName === 'WX-COMPONENT') {\n                // 内置组件\n                if (data.wxCompName !== domNode.behavior) newData.wxCompName = domNode.behavior\n                const wxCompName = wxCompNameMap[domNode.behavior]\n                if (wxCompName) _.checkComponentAttr(wxCompName, domNode, newData, data)\n            } else if (tagName === 'WX-CUSTOM-COMPONENT') {\n                // 自定义组件\n                if (data.wxCustomCompName !== domNode.behavior) newData.wxCustomCompName = domNode.behavior\n                if (data.nodeId !== this.nodeId) data.nodeId = this.nodeId\n                if (data.pageId !== this.pageId) data.pageId = this.pageId\n            } else if (NOT_SUPPORT.indexOf(tagName) >= 0) {\n                // 不支持标签\n                newData.wxCompName = 'not-support'\n                if (data.content !== domNode.content) newData.content = domNode.textContent\n            } else {\n                // 可替换 html 标签\n                const wxCompName = wxCompNameMap[tagName]\n                if (wxCompName) newData.wxCompName = wxCompName\n            }\n\n            this.setData(newData)\n        },\n\n        /**\n         * 触发简单节点事件，不做捕获冒泡处理\n         */\n        callSingleEvent(eventName, evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$trigger(eventName, {\n                event: new Event({\n                    timeStamp: evt && evt.timeStamp,\n                    touches: evt && evt.touches,\n                    changedTouches: evt && evt.changedTouches,\n                    name: eventName,\n                    target: domNode,\n                    eventPhase: Event.AT_TARGET,\n                    detail: evt && evt.detail,\n                    $$extra: evt && evt.extra,\n                }),\n                currentTarget: domNode,\n            })\n        },\n\n        /**\n         * 触发简单节点事件，不做冒泡处理，但会走捕获阶段\n         */\n        callSimpleEvent(eventName, evt, domNode) {\n            domNode = domNode || this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, new Event({\n                touches: evt.touches,\n                changedTouches: evt.changedTouches,\n                name: eventName,\n                target: domNode,\n                eventPhase: Event.AT_TARGET,\n                detail: evt && evt.detail,\n                $$extra: evt && evt.extra,\n                bubbles: false, // 不冒泡\n            }))\n        },\n\n        /**\n         * 触发事件\n         */\n        callEvent(eventName, evt, extra) {\n            const domNode = this.getDomNodeFromEvt(evt)\n\n            if (!domNode) return\n\n            EventTarget.$$process(domNode, eventName, evt, extra, (domNode, evt, isCapture) => {\n                // 延迟触发跳转，先等所有同步回调处理完成\n                setTimeout(() => {\n                    if (evt.cancelable) return\n                    const window = cache.getWindow(this.pageId)\n\n                    // 处理特殊节点事件\n                    if (domNode.tagName === 'A' && evt.type === 'click' && !isCapture) {\n                        // 处理 a 标签的跳转\n                        const href = domNode.href\n                        const target = domNode.target\n\n                        if (!href || href.indexOf('javascript') !== -1) return\n\n                        if (target === '_blank') window.open(href)\n                        else window.location.href = href\n                    } else if (domNode.tagName === 'LABEL' && evt.type === 'click' && !isCapture) {\n                        // 处理 label 的点击\n                        const forValue = domNode.getAttribute('for')\n                        let targetDomNode\n                        if (forValue) {\n                            targetDomNode = window.document.getElementById(forValue)\n                        } else {\n                            targetDomNode = domNode.querySelector('input')\n\n                            // 寻找 switch 节点\n                            if (!targetDomNode) targetDomNode = domNode.querySelector('wx-component[behavior=switch]')\n                        }\n\n                        if (!targetDomNode || !!targetDomNode.getAttribute('disabled')) return\n\n                        // 找到了目标节点\n                        if (targetDomNode.tagName === 'INPUT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const type = targetDomNode.type\n                            if (type === 'radio') {\n                                targetDomNode.setAttribute('checked', true)\n                                const name = targetDomNode.name\n                                const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\n                                for (const otherDomNode of otherDomNodes) {\n                                    if (otherDomNode.type === 'radio' && otherDomNode !== targetDomNode) {\n                                        otherDomNode.setAttribute('checked', false)\n                                    }\n                                }\n                                this.callSimpleEvent('change', {detail: {value: targetDomNode.value}}, targetDomNode)\n                            } else if (type === 'checkbox') {\n                                targetDomNode.setAttribute('checked', !targetDomNode.checked)\n                                this.callSimpleEvent('change', {detail: {value: targetDomNode.checked ? [targetDomNode.value] : []}}, targetDomNode)\n                            } else {\n                                targetDomNode.focus()\n                            }\n                        } else if (targetDomNode.tagName === 'WX-COMPONENT') {\n                            if (_.checkEventAccessDomNode(evt, targetDomNode, domNode)) return\n\n                            const behavior = targetDomNode.behavior\n                            if (behavior === 'switch') {\n                                const checked = !targetDomNode.getAttribute('checked')\n                                targetDomNode.setAttribute('checked', checked)\n                                this.callSimpleEvent('change', {detail: {value: checked}}, targetDomNode)\n                            }\n                        }\n                    } else if ((domNode.tagName === 'BUTTON' || (domNode.tagName === 'WX-COMPONENT' && domNode.behavior === 'button')) && evt.type === 'click' && !isCapture) {\n                        // 处理 button 点击\n                        const type = domNode.tagName === 'BUTTON' ? domNode.getAttribute('type') : domNode.getAttribute('form-type')\n                        const formAttr = domNode.getAttribute('form')\n                        const form = formAttr ? window.document.getElementById(formAttr) : _.findParentNode(domNode, 'FORM')\n\n                        if (!form) return\n                        if (type !== 'submit' && type !== 'reset') return\n\n                        const inputList = form.querySelectorAll('input[name]')\n                        const textareaList = form.querySelectorAll('textarea[name]')\n                        const switchList = form.querySelectorAll('wx-component[behavior=switch]').filter(item => !!item.getAttribute('name'))\n                        const sliderList = form.querySelectorAll('wx-component[behavior=slider]').filter(item => !!item.getAttribute('name'))\n                        const pickerList = form.querySelectorAll('wx-component[behavior=picker]').filter(item => !!item.getAttribute('name'))\n\n                        if (type === 'submit') {\n                            const formData = {}\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        if (item.checked) formData[item.name] = item.value\n                                    } else if (item.type === 'checkbox') {\n                                        formData[item.name] = formData[item.name] || []\n                                        if (item.checked) formData[item.name].push(item.value)\n                                    } else {\n                                        formData[item.name] = item.value\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => formData[item.getAttribute('name')] = item.value)\n                            if (switchList.length) switchList.forEach(item => formData[item.getAttribute('name')] = !!item.getAttribute('checked'))\n                            if (sliderList.length) sliderList.forEach(item => formData[item.getAttribute('name')] = +item.getAttribute('value') || 0)\n                            if (pickerList.length) pickerList.forEach(item => formData[item.getAttribute('name')] = item.getAttribute('value'))\n\n                            const detail = {value: formData}\n                            if (form._formId) {\n                                detail.formId = form._formId\n                                form._formId = null\n                            }\n                            this.callSimpleEvent('submit', {detail, extra: {$$from: 'button'}}, form)\n                        } else if (type === 'reset') {\n                            if (inputList.length) {\n                                inputList.forEach(item => {\n                                    if (item.type === 'radio') {\n                                        item.setAttribute('checked', false)\n                                    } else if (item.type === 'checkbox') {\n                                        item.setAttribute('checked', false)\n                                    } else {\n                                        item.setAttribute('value', '')\n                                    }\n                                })\n                            }\n                            if (textareaList.length) textareaList.forEach(item => item.setAttribute('value', ''))\n                            if (switchList.length) switchList.forEach(item => item.setAttribute('checked', undefined))\n                            if (sliderList.length) sliderList.forEach(item => item.setAttribute('value', undefined))\n                            if (pickerList.length) pickerList.forEach(item => item.setAttribute('value', undefined))\n\n                            this.callSimpleEvent('reset', {extra: {$$from: 'button'}}, form)\n                        }\n                    }\n                }, 0)\n            })\n        },\n\n        /**\n         * 监听节点事件\n         */\n        onTouchStart(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchstart', evt)\n            }\n        },\n\n        onTouchMove(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchmove', evt)\n            }\n        },\n\n        onTouchEnd(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchend', evt)\n            }\n        },\n\n        onTouchCancel(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('touchcancel', evt)\n            }\n        },\n\n        onTap(evt) {\n            if (this.document && this.document.$$checkEvent(evt)) {\n                this.callEvent('click', evt, {button: 0}) // 默认左键\n            }\n        },\n\n        /**\n         * 图片相关事件\n         */\n        onImgLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onImgError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        /**\n         * capture 相关事件，wx-capture 的事件不走仿造事件捕获冒泡系统，单独触发\n         */\n        onCaptureTouchStart(evt) {\n            this.callSingleEvent('touchstart', evt)\n        },\n\n        onCaptureTouchMove(evt) {\n            this.callSingleEvent('touchmove', evt)\n        },\n\n        onCaptureTouchEnd(evt) {\n            this.callSingleEvent('touchend', evt)\n        },\n\n        onCaptureTouchCancel(evt) {\n            this.callSingleEvent('touchcancel', evt)\n        },\n\n        onCaptureTap(evt) {\n            this.callSingleEvent('click', evt)\n        },\n\n        /**\n         * 动画相关事件\n         */\n        onTransitionEnd(evt) {\n            this.callEvent('transitionend', evt)\n        },\n\n        onAnimationStart(evt) {\n            this.callEvent('animationstart', evt)\n        },\n\n        onAnimationIteration(evt) {\n            this.callEvent('animationiteration', evt)\n        },\n\n        onAnimationEnd(evt) {\n            this.callEvent('animationend', evt)\n        },\n\n        /**\n         * 从小程序事件对象中获取 domNode\n         */\n        getDomNodeFromEvt(evt) {\n            if (!evt) return\n            const pageId = this.pageId\n            const originNodeId = evt.currentTarget && evt.currentTarget.dataset.privateNodeId || this.nodeId\n            return cache.getNode(pageId, originNodeId)\n        },\n\n        ...initHandle,\n    }\n})\n","const mp = require('miniprogram-render')\r\nconst initData = _require('./init-data')\r\nconst component = _require('./component')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\nconst {\r\n    wxCompNameMap,\r\n    wxSubComponentMap,\r\n} = component\r\n\r\nconst ELEMENT_DIFF_KEYS = ['nodeId', 'pageId', 'tagName', 'compName', 'id', 'className', 'style', 'src', 'mode', 'lazyLoad', 'showMenuByLongpress', 'useTemplate', 'isImage', 'isLeaf', 'isSimple', 'content', 'extra']\r\nconst TEXT_NODE_DIFF_KEYS = ['nodeId', 'pageId', 'content']\r\nconst NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT = ['WX-COMPONENT', 'WX-CUSTOM-COMPONENT'] // 需要分离 class 和 style 的节点\r\nconst NEET_BEHAVIOR_NORMAL_CUSTOM_ELEMENT_PARENT = ['swiper', 'movable-area']\r\nconst NEET_BEHAVIOR_NORMAL_CUSTOM_ELEMENT = ['swiper-item', 'movable-view', 'picker-view-column']\r\nconst NEET_RENDER_TO_CUSTOM_ELEMENT = ['IFRAME', ...NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT] // 必须渲染成自定义组件的节点\r\nconst NOT_SUPPORT = ['IFRAME']\r\nconst USE_TEMPLATE = ['cover-image', 'movable-area', 'movable-view', 'swiper', 'swiper-item', 'icon', 'progress', 'rich-text', 'button', 'editor', 'form', 'INPUT', 'picker', 'slider', 'switch', 'TEXTAREA', 'navigator', 'camera', 'image', 'live-player', 'live-pusher', 'VIDEO', 'map', 'CANVAS', 'ad', 'official-account', 'open-data', 'web-view', 'capture', 'catch', 'animation'] // 使用 template 渲染\r\nconst IN_COVER = ['cover-view'] // 子节点必须使用 cover-view/cover-image\r\n\r\n/**\r\n * 过滤子节点，只获取儿子节点\r\n */\r\nfunction filterNodes(domNode, level, component) {\r\n    const window = cache.getWindow(domNode.$$pageId)\r\n    const childNodes = domNode.childNodes || []\r\n\r\n    if (!childNodes.map) return []\r\n    if (NOT_SUPPORT.indexOf(domNode.tagName) >= 0) return [] // 不支持标签，不渲染子节点\r\n\r\n    return childNodes.map(child => {\r\n        const domInfo = child.$$domInfo\r\n\r\n        if (domInfo.type !== 'element' && domInfo.type !== 'text') return\r\n\r\n        domInfo.className = domInfo.type === 'element' ? `h5-${domInfo.tagName} node-${domInfo.nodeId} ${domInfo.className || ''}` : '' // 增加默认 class\r\n        domInfo.domNode = child\r\n\r\n        // 特殊节点\r\n        if (NEET_SPLIT_CLASS_STYLE_FROM_CUSTOM_ELEMENT.indexOf(child.tagName) >= 0) {\r\n            if (domInfo.tagName === 'wx-component' && NEET_BEHAVIOR_NORMAL_CUSTOM_ELEMENT.indexOf(child.behavior) !== -1) {\r\n                // 特殊内置组件，强制作为某内置组件的子组件，需要直接在当前模板渲染\r\n                domInfo.compName = child.behavior\r\n                domInfo.extra = {\r\n                    hidden: child.getAttribute('hidden') || false,\r\n                }\r\n\r\n                // 补充该内置组件的属性\r\n                const {properties} = wxSubComponentMap[child.behavior] || {}\r\n                if (properties && properties.length) {\r\n                    properties.forEach(({name, get}) => {\r\n                        domInfo.extra[name] = get(child)\r\n                    })\r\n                }\r\n\r\n                if (child.childNodes.length && level > 0) {\r\n                    domInfo.childNodes = filterNodes(child, level - 1, component)\r\n                }\r\n                return domInfo\r\n            }\r\n\r\n            // 不需要处理 id 和样式\r\n            domInfo.className = `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`\r\n            domInfo.id = ''\r\n            domInfo.style = ''\r\n        }\r\n\r\n        // 判断图片节点\r\n        domInfo.isImage = domInfo.type === 'element' && domInfo.tagName === 'img'\r\n        if (domInfo.isImage) {\r\n            domInfo.src = child.src ? tool.completeURL(child.src, window.location.origin, true) : ''\r\n            domInfo.mode = child.getAttribute('mode') || ''\r\n            domInfo.lazyLoad = !!child.getAttribute('lazy-load')\r\n            domInfo.showMenuByLongpress = !!child.getAttribute('show-menu-by-longpress')\r\n        }\r\n\r\n        // 判断是否使用 template 渲染\r\n        const templateName = domInfo.tagName === 'wx-component' ? child.behavior : child.tagName\r\n        domInfo.useTemplate = !domInfo.isImage && USE_TEMPLATE.indexOf(templateName) !== -1\r\n        if (domInfo.useTemplate) {\r\n            const wxCompName = wxCompNameMap[templateName]\r\n            const extra = {}\r\n            if (wxCompName) checkComponentAttr(wxCompName, child, extra, null, `h5-${domInfo.tagName} ${domInfo.tagName === 'wx-component' ? 'wx-' + child.behavior : ''}`)\r\n            extra.pageId = domInfo.pageId\r\n            extra.nodeId = domInfo.nodeId\r\n            extra.inCover = component.data.inCover\r\n            extra.hasChildren = !!child.childNodes.length\r\n            domInfo.extra = extra\r\n\r\n            // 给 template 中的特殊节点用\r\n            if (NEET_BEHAVIOR_NORMAL_CUSTOM_ELEMENT_PARENT.indexOf(templateName) !== -1) {\r\n                const childNodes = filterNodes(child, 0) || []\r\n                extra.childNodes = childNodes.map(childNode => {\r\n                    const copyChildNode = Object.assign({}, childNode)\r\n                    delete copyChildNode.domNode\r\n                    return copyChildNode\r\n                })\r\n            }\r\n\r\n            // wx-catch 的 touch 事件会导致 tap 事件的触发，需要真正被绑定后再补充句柄\r\n            if (wxCompName === 'catch') {\r\n                extra.touchStart = child.$$hasEventHandler('touchstart') ? 'onTouchStart' : ''\r\n                extra.touchMove = child.$$hasEventHandler('touchmove') ? 'onTouchMove' : ''\r\n                extra.touchEnd = child.$$hasEventHandler('touchend') ? 'onTouchEnd' : ''\r\n                extra.touchCancel = child.$$hasEventHandler('touchcancel') ? 'onTouchCancel' : ''\r\n            }\r\n        }\r\n\r\n        // 判断叶子节点\r\n        domInfo.isLeaf = !domInfo.isImage && !domInfo.useTemplate && domInfo.type === 'element' && !child.children.length && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1\r\n        if (domInfo.isLeaf) {\r\n            domInfo.content = child.childNodes.map(childNode => (childNode.$$domInfo.type === 'text' ? childNode.textContent : '')).join('')\r\n        }\r\n\r\n        // 判断可直接用 view 渲染的简单子节点\r\n        domInfo.isSimple = !domInfo.isImage && !domInfo.useTemplate && !domInfo.isLeaf && domInfo.type === 'element' && NEET_RENDER_TO_CUSTOM_ELEMENT.indexOf(child.tagName) === -1 && level > 0\r\n        if (domInfo.isSimple) {\r\n            domInfo.content = ''\r\n            domInfo.childNodes = filterNodes(child, level - 1, component)\r\n        }\r\n\r\n        // 挂载该节点所处的自定义组件实例\r\n        child._wxComponent = component\r\n\r\n        return domInfo\r\n    }).filter(child => !!child)\r\n}\r\n\r\n/**\r\n * 判断两值是否相等\r\n */\r\nfunction isEqual(a, b) {\r\n    if (typeof a === 'number' && typeof b === 'number') {\r\n        // 值为数值，需要考虑精度\r\n        return parseInt(a * 1000, 10) === parseInt(b * 1000, 10)\r\n    }\r\n\r\n    return a === b\r\n}\r\n\r\n/**\r\n * 比较新旧子节点是否不同\r\n */\r\nfunction checkDiffChildNodes(newChildNodes, oldChildNodes) {\r\n    if (newChildNodes.length !== oldChildNodes.length) return true\r\n\r\n    for (let i = 0, len = newChildNodes.length; i < len; i++) {\r\n        const newChild = newChildNodes[i]\r\n        const oldChild = oldChildNodes[i]\r\n\r\n        if (newChild.type !== oldChild.type) return true\r\n\r\n        const keys = newChild.type === 'element' ? ELEMENT_DIFF_KEYS : TEXT_NODE_DIFF_KEYS\r\n\r\n        for (const key of keys) {\r\n            const newValue = newChild[key]\r\n            const oldValue = oldChild[key]\r\n            if (typeof newValue === 'object' && !Array.isArray(newValue)) {\r\n                // 值为对象，则判断对象顶层值是否有变化\r\n                if (typeof oldValue !== 'object') return true\r\n\r\n                // 需要强制更新\r\n                if (key === 'extra' && newValue.forceUpdate) {\r\n                    newValue.forceUpdate = false\r\n                    return true\r\n                }\r\n\r\n                const objectKeys = Object.keys(newValue)\r\n                for (const objectKey of objectKeys) {\r\n                    if (!isEqual(newValue[objectKey], oldValue[objectKey])) return true\r\n                }\r\n            } else if (!isEqual(newValue, oldValue)) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        // 比较孙子后辈节点\r\n        const newGrandChildNodes = newChild.childNodes || []\r\n        const oldGrandChildNodes = oldChild.childNodes || []\r\n        if (newGrandChildNodes.length || oldGrandChildNodes.length) {\r\n            const checkRes = checkDiffChildNodes(newGrandChildNodes, oldGrandChildNodes)\r\n            if (checkRes) return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 检查组件属性\r\n */\r\nfunction checkComponentAttr(name, domNode, destData, oldData, extraClass = '') {\r\n    const attrs = initData[name]\r\n\r\n    destData.wxCompName = name\r\n\r\n    if (attrs && attrs.length) {\r\n        for (const {name, get, canBeUserChanged = false} of attrs) {\r\n            const newValue = get(domNode)\r\n            if (canBeUserChanged) {\r\n                // 可被用户行为改变的属性，除了 data 外，还需要对比监听到上次用户行为修改的值\r\n                const oldValues = domNode._oldValues\r\n                if (!oldData || !isEqual(newValue, oldData[name]) || (oldValues && !isEqual(newValue, oldValues[name]))) {\r\n                    destData[name] = newValue\r\n                    destData.forceUpdate = true // 避免被 diff 掉，需要强制更新\r\n                }\r\n            } else if (!oldData || !isEqual(newValue, oldData[name])) {\r\n                // 对比 data\r\n                destData[name] = newValue\r\n            }\r\n        }\r\n    }\r\n\r\n    // 补充 id、class、style 和 hidden\r\n    const newId = domNode.id\r\n    if (!oldData || oldData.id !== newId) destData.id = newId\r\n    const newClass = `${extraClass} wx-comp-${name} node-${domNode.$$nodeId} ${domNode.className || ''}`\r\n    if (!oldData || oldData.className !== newClass) destData.className = newClass\r\n    const newStyle = domNode.style.cssText\r\n    if (!oldData || oldData.style !== newStyle) destData.style = newStyle\r\n    const newHidden = domNode.getAttribute('hidden') || false\r\n    if (!oldData || oldData.hidden !== newHidden) destData.hidden = newHidden\r\n}\r\n\r\n/**\r\n * 处理不需要渲染成自定义组件的节点\r\n */\r\nfunction dealWithLeafAndSimple(childNodes, onChildNodesUpdate) {\r\n    if (childNodes && childNodes.length) {\r\n        childNodes = childNodes.map(originChildNode => {\r\n            const childNode = Object.assign({}, originChildNode)\r\n\r\n            if (childNode.isImage || childNode.isLeaf || childNode.isSimple || childNode.useTemplate) {\r\n                childNode.domNode.$$clearEvent('$$childNodesUpdate')\r\n                childNode.domNode.addEventListener('$$childNodesUpdate', onChildNodesUpdate)\r\n            }\r\n\r\n            delete childNode.domNode\r\n            childNode.childNodes = dealWithLeafAndSimple(childNode.childNodes, onChildNodesUpdate)\r\n\r\n            return childNode\r\n        })\r\n    }\r\n\r\n    return childNodes\r\n}\r\n\r\n/**\r\n * 检查事件是否经过某个节点\r\n */\r\nfunction checkEventAccessDomNode(evt, domNode, dest) {\r\n    dest = dest || domNode.ownerDocument.body\r\n    let target = evt.target\r\n\r\n    // 该节点就是目标节点\r\n    if (domNode === dest) return true\r\n\r\n    while (target && target !== dest) {\r\n        if (target === domNode) return true\r\n        target = target.parentNode\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * 查找最近的符合条件的祖先节点\r\n */\r\nfunction findParentNode(domNode, tagName) {\r\n    const checkParentNode = (parentNode, tagName) => {\r\n        if (!parentNode) return false\r\n        if (parentNode.tagName === tagName) return true\r\n        if (parentNode.tagName === 'WX-COMPONENT' && parentNode.behavior === tagName.toLowerCase()) return true\r\n\r\n        return false\r\n    }\r\n    let parentNode = domNode.parentNode\r\n\r\n    if (checkParentNode(parentNode, tagName)) return parentNode\r\n    while (parentNode && parentNode.tagName !== tagName) {\r\n        parentNode = parentNode.parentNode\r\n        if (checkParentNode(parentNode, tagName)) return parentNode\r\n    }\r\n\r\n    return null\r\n}\r\n\r\n/**\r\n * 判断基础库版本\r\n */\r\nfunction compareVersion(v1, v2) {\r\n    v1 = v1.split('.')\r\n    v2 = v2.split('.')\r\n    const len = Math.max(v1.length, v2.length)\r\n\r\n    while (v1.length < len) {\r\n        v1.push('0')\r\n    }\r\n    while (v2.length < len) {\r\n        v2.push('0')\r\n    }\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const num1 = parseInt(v1[i], 10)\r\n        const num2 = parseInt(v2[i], 10)\r\n\r\n        if (num1 > num2) {\r\n            return 1\r\n        } else if (num1 < num2) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    return 0\r\n}\r\n\r\nmodule.exports = {\r\n    NOT_SUPPORT,\r\n    USE_TEMPLATE,\r\n    IN_COVER,\r\n    filterNodes,\r\n    checkDiffChildNodes,\r\n    checkComponentAttr,\r\n    dealWithLeafAndSimple,\r\n    checkEventAccessDomNode,\r\n    findParentNode,\r\n    compareVersion,\r\n}\r\n","const component = _require('./component')\n\nmodule.exports = component.properties\n","const wxComponentMap = {\n    // 视图容器\n    'cover-image': {\n        wxCompName: 'cover-image',\n        config: _require('../component/cover-image'),\n    },\n    'cover-view': {\n        wxCompName: 'cover-view',\n        config: _require('../component/cover-view'),\n    },\n    'movable-area': {\n        wxCompName: 'movable-area',\n        config: _require('../component/movable-area'),\n    },\n    'scroll-view': {\n        wxCompName: 'scroll-view',\n        config: _require('../component/scroll-view'),\n    },\n    swiper: {\n        wxCompName: 'swiper',\n        config: _require('../component/swiper'),\n    },\n    view: {\n        wxCompName: 'view',\n        config: _require('../component/view'),\n    },\n    // 基础内容\n    icon: {\n        wxCompName: 'icon',\n        config: _require('../component/icon'),\n    },\n    progress: {\n        wxCompName: 'progress',\n        config: _require('../component/progress'),\n    },\n    'rich-text': {\n        wxCompName: 'rich-text',\n        config: _require('../component/rich-text'),\n    },\n    text: {\n        wxCompName: 'text',\n        config: _require('../component/text'),\n    },\n    // 表单组件\n    button: {\n        wxCompName: 'button',\n        config: _require('../component/button'),\n    },\n    editor: {\n        wxCompName: 'editor',\n        config: _require('../component/editor'),\n    },\n    form: {\n        wxCompName: 'form',\n        config: _require('../component/form'),\n    },\n    INPUT: {\n        wxCompName: 'input',\n        config: _require('../component/input'),\n    },\n    picker: {\n        wxCompName: 'picker',\n        config: _require('../component/picker'),\n    },\n    'picker-view': {\n        wxCompName: 'picker-view',\n        config: _require('../component/picker-view'),\n    },\n    slider: {\n        wxCompName: 'slider',\n        config: _require('../component/slider'),\n    },\n    switch: {\n        wxCompName: 'switch',\n        config: _require('../component/switch'),\n    },\n    TEXTAREA: {\n        wxCompName: 'textarea',\n        config: _require('../component/textarea'),\n    },\n    // 导航\n    navigator: {\n        wxCompName: 'navigator',\n        config: _require('../component/navigator'),\n    },\n    // 媒体组件\n    camera: {\n        wxCompName: 'camera',\n        config: _require('../component/camera'),\n    },\n    image: {\n        wxCompName: 'image',\n        config: _require('../component/image'),\n    },\n    'live-player': {\n        wxCompName: 'live-player',\n        config: _require('../component/live-player'),\n    },\n    'live-pusher': {\n        wxCompName: 'live-pusher',\n        config: _require('../component/live-pusher'),\n    },\n    VIDEO: {\n        wxCompName: 'video',\n        config: _require('../component/video'),\n    },\n    // 地图\n    map: {\n        wxCompName: 'map',\n        config: _require('../component/map'),\n    },\n    // 画布\n    CANVAS: {\n        wxCompName: 'canvas',\n        config: _require('../component/canvas'),\n    },\n    // 开放能力\n    ad: {\n        wxCompName: 'ad',\n        config: _require('../component/ad'),\n    },\n    'official-account': {\n        wxCompName: 'official-account',\n        config: _require('../component/official-account'),\n    },\n    'open-data': {\n        wxCompName: 'open-data',\n        config: _require('../component/open-data'),\n    },\n    'web-view': {\n        wxCompName: 'web-view',\n        config: _require('../component/web-view'),\n    },\n    // 特殊补充\n    capture: {\n        wxCompName: 'capture',\n        config: {},\n    },\n    catch: {\n        wxCompName: 'catch',\n        config: {},\n    },\n    animation: {\n        wxCompName: 'animation',\n        config: {},\n    },\n}\n\nconst wxSubComponentMap = {\n    'movable-view': _require('../component/movable-view'),\n    'swiper-item': _require('../component/swiper-item'),\n    'picker-view-column': _require('../component/picker-view-column'),\n}\n\nconst wxComponentKeys = Object.keys(wxComponentMap)\nconst wxCompNameMap = {}\nconst properties = {}\nconst handles = {}\nwxComponentKeys.forEach(key => {\n    const {wxCompName, config} = wxComponentMap[key]\n\n    wxCompNameMap[key] = wxCompName\n    properties[wxCompName] = config.properties || []\n    Object.assign(handles, config.handles || {})\n})\nObject.keys(wxSubComponentMap).forEach(key => {\n    const config = wxSubComponentMap[key]\n    Object.assign(handles, config.handles || {})\n})\n\nmodule.exports = {\n    wxCompNameMap,\n    properties,\n    handles,\n    wxSubComponentMap,\n}\n","const mp = require('miniprogram-render')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\n/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/cover-image.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'src',\r\n        get(domNode) {\r\n            const window = cache.getWindow(domNode.$$pageId)\r\n            return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\r\n        },\r\n    }],\r\n    handles: {\r\n        onCoverImageLoad(evt) {\r\n            this.callSingleEvent('load', evt)\r\n        },\r\n\r\n        onCoverImageError(evt) {\r\n            this.callSingleEvent('error', evt)\r\n        },\r\n    },\r\n}\r\n","/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/cover-view.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'scrollTop',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('scroll-top')\r\n            return value !== undefined && !isNaN(+value) ? +value : ''\r\n        },\r\n    }],\r\n    handles: {},\r\n}\r\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/movable-area.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'scaleArea',\n        get(domNode) {\n            return !!domNode.getAttribute('scale-area')\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'scrollX',\n        get(domNode) {\n            return !!domNode.getAttribute('scroll-x')\n        },\n    }, {\n        name: 'scrollY',\n        get(domNode) {\n            return !!domNode.getAttribute('scroll-y')\n        },\n    }, {\n        name: 'upperThreshold',\n        get(domNode) {\n            return domNode.getAttribute('upper-threshold') || '50'\n        },\n    }, {\n        name: 'lowerThreshold',\n        get(domNode) {\n            return domNode.getAttribute('lower-threshold') || '50'\n        },\n    }, {\n        name: 'scrollTop',\n        canBeUserChanged: true,\n        get(domNode) {\n            return domNode.getAttribute('scroll-top') || ''\n        },\n    }, {\n        name: 'scrollLeft',\n        canBeUserChanged: true,\n        get(domNode) {\n            return domNode.getAttribute('scroll-left') || ''\n        },\n    }, {\n        name: 'scrollIntoView',\n        canBeUserChanged: true,\n        get(domNode) {\n            return domNode.getAttribute('scroll-into-view') || ''\n        },\n    }, {\n        name: 'scrollWithAnimation',\n        get(domNode) {\n            return !!domNode.getAttribute('scroll-with-animation')\n        },\n    }, {\n        name: 'enableBackToTop',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-back-to-top')\n        },\n    }, {\n        name: 'enableFlex',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-flex')\n        },\n    }, {\n        name: 'scrollAnchoring',\n        get(domNode) {\n            return !!domNode.getAttribute('scroll-anchoring')\n        },\n    }, {\n        name: 'refresherEnabled',\n        get(domNode) {\n            return !!domNode.getAttribute('refresher-enabled')\n        },\n    }, {\n        name: 'refresherThreshold',\n        get(domNode) {\n            return domNode.getAttribute('refresher-threshold') || '45'\n        },\n    }, {\n        name: 'refresherDefaultStyle',\n        get(domNode) {\n            return domNode.getAttribute('refresher-default-style') || 'black'\n        },\n    }, {\n        name: 'refresherBackground',\n        get(domNode) {\n            return domNode.getAttribute('refresher-background') || '#FFF'\n        },\n    }, {\n        name: 'refresherTriggered',\n        get(domNode) {\n            return !!domNode.getAttribute('refresher-triggered')\n        },\n    }],\n    handles: {\n        onScrollViewScrolltoupper(evt) {\n            this.callSingleEvent('scrolltoupper', evt)\n        },\n\n        onScrollViewScrolltolower(evt) {\n            this.callSingleEvent('scrolltolower', evt)\n        },\n\n        onScrollViewScroll(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('scroll-into-view', '')\n            domNode.$$setAttributeWithoutUpdate('scroll-top', evt.detail.scrollTop)\n            domNode.$$setAttributeWithoutUpdate('scroll-left', evt.detail.scrollLeft)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.scrollIntoView = ''\n            domNode._oldValues.scrollTop = evt.detail.scrollTop\n            domNode._oldValues.scrollLeft = evt.detail.scrollLeft\n\n            this.callSimpleEvent('scroll', evt)\n        },\n\n        onScrollViewRefresherPulling(evt) {\n            this.callSingleEvent('refresherpulling', evt)\n        },\n\n        onScrollViewRefresherRefresh(evt) {\n            this.callSingleEvent('refresherrefresh', evt)\n        },\n\n        onScrollViewRefresherRestore(evt) {\n            this.callSingleEvent('refresherrestore', evt)\n        },\n\n        onScrollViewRefresherAbort(evt) {\n            this.callSingleEvent('refresherabort', evt)\n        },\n\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'indicatorDots',\n        get(domNode) {\n            return !!domNode.getAttribute('indicator-dots')\n        },\n    }, {\n        name: 'indicatorColor',\n        get(domNode) {\n            return domNode.getAttribute('indicator-color') || 'rgba(0, 0, 0, .3)'\n        },\n    }, {\n        name: 'indicatorActiveColor',\n        get(domNode) {\n            return domNode.getAttribute('indicator-active-color') || '#000000'\n        },\n    }, {\n        name: 'autoplay',\n        get(domNode) {\n            return !!domNode.getAttribute('autoplay')\n        },\n    }, {\n        name: 'current',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('current') || 0\n        },\n    }, {\n        name: 'interval',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('interval'))\n            return !isNaN(value) ? value : 5000\n        },\n    }, {\n        name: 'duration',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('duration'))\n            return !isNaN(value) ? value : 500\n        },\n    }, {\n        name: 'circular',\n        get(domNode) {\n            return !!domNode.getAttribute('circular')\n        },\n    }, {\n        name: 'vertical',\n        get(domNode) {\n            return !!domNode.getAttribute('vertical')\n        },\n    }, {\n        name: 'previousMargin',\n        get(domNode) {\n            return domNode.getAttribute('previous-margin') || '0px'\n        },\n    }, {\n        name: 'nextMargin',\n        get(domNode) {\n            return domNode.getAttribute('next-margin') || '0px'\n        },\n    }, {\n        name: 'displayMultipleItems',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('display-multiple-items'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'skipHiddenItemLayout',\n        get(domNode) {\n            return !!domNode.getAttribute('skip-hidden-item-layout')\n        },\n    }, {\n        name: 'easingFunction',\n        get(domNode) {\n            return domNode.getAttribute('easing-function') || 'default'\n        },\n    }],\n    handles: {\n        onSwiperChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('current', evt.detail.current)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.current = evt.detail.current\n\n            this.callSingleEvent('change', evt)\n        },\n\n        onSwiperTransition(evt) {\n            this.callSingleEvent('transition', evt)\n        },\n\n        onSwiperAnimationfinish(evt) {\n            this.callSingleEvent('animationfinish', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/view.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'hoverClass',\n        get(domNode) {\n            return domNode.getAttribute('hover-class') || 'none'\n        },\n    }, {\n        name: 'hoverStopPropagation',\n        get(domNode) {\n            return !!domNode.getAttribute('hover-stop-propagation')\n        },\n    }, {\n        name: 'hoverStartTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-start-time'))\n            return !isNaN(value) ? value : 50\n        },\n    }, {\n        name: 'hoverStayTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n            return !isNaN(value) ? value : 400\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/icon.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'type',\n        get(domNode) {\n            return domNode.getAttribute('type') || ''\n        },\n    }, {\n        name: 'size',\n        get(domNode) {\n            return domNode.getAttribute('size') || '23'\n        },\n    }, {\n        name: 'color',\n        get(domNode) {\n            return domNode.getAttribute('color') || ''\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/progress.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'percent',\n        get(domNode) {\n            return +domNode.getAttribute('percent') || 0\n        },\n    }, {\n        name: 'showInfo',\n        get(domNode) {\n            return !!domNode.getAttribute('show-info')\n        },\n    }, {\n        name: 'borderRadius',\n        get(domNode) {\n            return domNode.getAttribute('border-radius') || '0'\n        },\n    }, {\n        name: 'fontSize',\n        get(domNode) {\n            return domNode.getAttribute('font-size') || '16'\n        },\n    }, {\n        name: 'strokeWidth',\n        get(domNode) {\n            return domNode.getAttribute('stroke-width') || '6'\n        },\n    }, {\n        name: 'color',\n        get(domNode) {\n            return domNode.getAttribute('color') || '#09BB07'\n        },\n    }, {\n        name: 'activeColor',\n        get(domNode) {\n            return domNode.getAttribute('active-color') || '#09BB07'\n        },\n    }, {\n        name: 'backgroundColor',\n        get(domNode) {\n            return domNode.getAttribute('background-color') || '#EBEBEB'\n        },\n    }, {\n        name: 'active',\n        get(domNode) {\n            return !!domNode.getAttribute('active')\n        },\n    }, {\n        name: 'activeMode',\n        get(domNode) {\n            return domNode.getAttribute('active-mode') || 'backwards'\n        },\n    }],\n    handles: {\n        onProgressActiveEnd(evt) {\n            this.callSingleEvent('activeend', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/rich-text.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'nodes',\n        get(domNode) {\n            return domNode.getAttribute('nodes') || []\n        },\n    }, {\n        name: 'space',\n        get(domNode) {\n            return domNode.getAttribute('space') || ''\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/text.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'selectable',\n        get(domNode) {\n            return !!domNode.getAttribute('selectable')\n        },\n    }, {\n        name: 'space',\n        get(domNode) {\n            return domNode.getAttribute('space') || ''\n        },\n    }, {\n        name: 'decode',\n        get(domNode) {\n            return !!domNode.getAttribute('decode')\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/button.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'size',\n        get(domNode) {\n            return domNode.getAttribute('size') || 'default'\n        },\n    }, {\n        name: 'type',\n        get(domNode) {\n            // 如果使用默认值 default，基础库中会补充 wx-button[type=default]，导致部分样式优先级处理有问题\n            return domNode.getAttribute('type') || undefined\n        },\n    }, {\n        name: 'plain',\n        get(domNode) {\n            return !!domNode.getAttribute('plain')\n        },\n    }, {\n        name: 'disabled',\n        get(domNode) {\n            return !!domNode.getAttribute('disabled')\n        },\n    }, {\n        name: 'loading',\n        get(domNode) {\n            return !!domNode.getAttribute('loading')\n        },\n    }, {\n        name: 'formType',\n        get(domNode) {\n            return domNode.getAttribute('form-type') || ''\n        },\n    }, {\n        name: 'openType',\n        get(domNode) {\n            return domNode.getAttribute('open-type') || ''\n        },\n    }, {\n        name: 'hoverClass',\n        get(domNode) {\n            return domNode.getAttribute('hover-class') || 'button-hover'\n        },\n    }, {\n        name: 'hoverStopPropagation',\n        get(domNode) {\n            return !!domNode.getAttribute('hover-stop-propagation')\n        },\n    }, {\n        name: 'hoverStartTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-start-time'))\n            return !isNaN(value) ? value : 20\n        },\n    }, {\n        name: 'hoverStayTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n            return !isNaN(value) ? value : 70\n        },\n    }, {\n        name: 'lang',\n        get(domNode) {\n            return domNode.getAttribute('lang') || 'en'\n        },\n    }, {\n        name: 'sessionFrom',\n        get(domNode) {\n            return domNode.getAttribute('session-from') || ''\n        },\n    }, {\n        name: 'sendMessageTitle',\n        get(domNode) {\n            return domNode.getAttribute('send-message-title') || ''\n        },\n    }, {\n        name: 'sendMessagePath',\n        get(domNode) {\n            return domNode.getAttribute('send-message-path') || ''\n        },\n    }, {\n        name: 'sendMessageImg',\n        get(domNode) {\n            return domNode.getAttribute('send-message-img') || ''\n        },\n    }, {\n        name: 'appParameter',\n        get(domNode) {\n            return domNode.getAttribute('app-parameter') || ''\n        },\n    }, {\n        name: 'showMessageCard',\n        get(domNode) {\n            return !!domNode.getAttribute('show-message-card')\n        },\n    }, {\n        name: 'businessId',\n        get(domNode) {\n            return domNode.getAttribute('business-id') || ''\n        },\n    }],\n    handles: {\n        onButtonGetUserInfo(evt) {\n            this.callSingleEvent('getuserinfo', evt)\n        },\n\n        onButtonContact(evt) {\n            this.callSingleEvent('contact', evt)\n        },\n\n        onButtonGetPhoneNumber(evt) {\n            this.callSingleEvent('getphonenumber', evt)\n        },\n\n        onButtonError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        onButtonOpenSetting(evt) {\n            this.callSingleEvent('opensetting', evt)\n        },\n\n        onButtonLaunchApp(evt) {\n            this.callSingleEvent('launchapp', evt)\n        },\n\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/editor.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'readOnly',\n        get(domNode) {\n            return !!domNode.getAttribute('read-only')\n        },\n    }, {\n        name: 'placeholder',\n        get(domNode) {\n            return domNode.getAttribute('placeholder') || ''\n        },\n    }, {\n        name: 'showImgSize',\n        get(domNode) {\n            return !!domNode.getAttribute('show-img-size')\n        },\n    }, {\n        name: 'showImgToolbar',\n        get(domNode) {\n            return !!domNode.getAttribute('show-img-toolbar')\n        },\n    }, {\n        name: 'showImgResize',\n        get(domNode) {\n            return !!domNode.getAttribute('show-img-resize')\n        },\n    }],\n    handles: {\n        onEditorReady(evt) {\n            this.callSingleEvent('ready', evt)\n        },\n\n        onEditorFocus(evt) {\n            this.callSingleEvent('focus', evt)\n        },\n\n        onEditorBlur(evt) {\n            this.callSingleEvent('blur', evt)\n        },\n\n        onEditorInput(evt) {\n            this.callSingleEvent('input', evt)\n        },\n\n        onEditorStatusChange(evt) {\n            this.callSingleEvent('statuschange', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/form.html\n *\n * 可以认为下述 form 组件的属性和事件是没有用的，因为 button 组件会被封装到自定义组件内\n */\nmodule.exports = {\n    properties: [{\n        name: 'reportSubmit',\n        get(domNode) {\n            return !!domNode.getAttribute('report-submit')\n        },\n    }, {\n        name: 'reportSubmitTimeout',\n        get(domNode) {\n            return +domNode.getAttribute('report-submit-timeout') || 0\n        },\n    }],\n    handles: {\n        onFormSubmit(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode._formId = evt.detail.formId\n            // submit 事件由 kbone 模拟，不需要原生 submit 事件\n        },\n\n        onFormReset() {\n            // reset 事件由 kbone 模拟，不需要原生 reset 事件\n        },\n    },\n}\n","const mp = require('miniprogram-render')\r\n\r\nconst {\r\n    cache,\r\n} = mp.$$adapter\r\n\r\n/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/input.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'value',\r\n        canBeUserChanged: true,\r\n        get(domNode) {\r\n            return domNode.value || ''\r\n        },\r\n    }, {\r\n        name: 'type',\r\n        get(domNode) {\r\n            const value = domNode.type || 'text'\r\n            return value !== 'password' ? value : 'text'\r\n        },\r\n    }, {\r\n        name: 'password',\r\n        get(domNode) {\r\n            return domNode.type !== 'password' ? !!domNode.getAttribute('password') : true\r\n        },\r\n    }, {\r\n        name: 'placeholder',\r\n        get(domNode) {\r\n            return domNode.placeholder\r\n        },\r\n    }, {\r\n        name: 'placeholderStyle',\r\n        get(domNode) {\r\n            return domNode.getAttribute('placeholder-style') || ''\r\n        },\r\n    }, {\r\n        name: 'placeholderClass',\r\n        get(domNode) {\r\n            return domNode.getAttribute('placeholder-class') || 'input-placeholder'\r\n        },\r\n    }, {\r\n        name: 'disabled',\r\n        get(domNode) {\r\n            return domNode.disabled\r\n        },\r\n    }, {\r\n        name: 'maxlength',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.maxlength)\r\n            return !isNaN(value) ? value : 140\r\n        },\r\n    }, {\r\n        name: 'cursorSpacing',\r\n        get(domNode) {\r\n            return +domNode.getAttribute('cursor-spacing') || 0\r\n        },\r\n    }, {\r\n        name: 'autoFocus',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('autofocus')\r\n        },\r\n    }, {\r\n        name: 'focus',\r\n        canBeUserChanged: true,\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('focus')\r\n        },\r\n    }, {\r\n        name: 'confirmType',\r\n        get(domNode) {\r\n            return domNode.getAttribute('confirm-type') || 'done'\r\n        },\r\n    }, {\r\n        name: 'confirmHold',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('confirm-hold')\r\n        },\r\n    }, {\r\n        name: 'cursor',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('cursor'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'selectionStart',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('selection-start'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'selectionEnd',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('selection-end'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'adjustPosition',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('adjust-position')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'checked',\r\n        canBeUserChanged: true,\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('checked')\r\n        },\r\n    }, {\r\n        name: 'color',\r\n        get(domNode) {\r\n            return domNode.getAttribute('color') || '#09BB07'\r\n        },\r\n    }],\r\n    handles: {\r\n        onInputInput(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            const value = '' + evt.detail.value\r\n            domNode.$$setAttributeWithoutUpdate('value', value)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.value = value\r\n\r\n            this.callEvent('input', evt)\r\n        },\r\n\r\n        onInputFocus(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode._inputOldValue = domNode.value\r\n            domNode.$$setAttributeWithoutUpdate('focus', true)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.focus = true\r\n\r\n            this.callSimpleEvent('focus', evt)\r\n        },\r\n\r\n        onInputBlur(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode.$$setAttributeWithoutUpdate('focus', false)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.focus = false\r\n\r\n            if (domNode._inputOldValue !== undefined && domNode.value !== domNode._inputOldValue) {\r\n                domNode._inputOldValue = undefined\r\n                this.callEvent('change', evt)\r\n            }\r\n            this.callSimpleEvent('blur', evt)\r\n        },\r\n\r\n        onInputConfirm(evt) {\r\n            this.callSimpleEvent('confirm', evt)\r\n        },\r\n\r\n        onInputKeyBoardHeightChange(evt) {\r\n            this.callSingleEvent('keyboardheightchange', evt)\r\n        },\r\n\r\n        onRadioChange(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            const window = cache.getWindow(this.pageId)\r\n            const value = evt.detail.value\r\n            const name = domNode.name\r\n\r\n            if (value === domNode.value) {\r\n                domNode.$$setAttributeWithoutUpdate('checked', true)\r\n\r\n                // 可被用户行为改变的值，需要记录\r\n                domNode._oldValues = domNode._oldValues || {}\r\n                domNode._oldValues.checked = true\r\n\r\n                const otherDomNodes = window.document.querySelectorAll(`input[name=${name}]`) || []\r\n                for (const otherDomNode of otherDomNodes) {\r\n                    if (otherDomNode.type === 'radio' && otherDomNode !== domNode) {\r\n                        otherDomNode.$$setAttributeWithoutUpdate('checked', false)\r\n\r\n                        // 可被用户行为改变的值，需要记录\r\n                        otherDomNode._oldValues = otherDomNode._oldValues || {}\r\n                        otherDomNode._oldValues.checked = false\r\n                    }\r\n                }\r\n            }\r\n            this.callEvent('input', evt)\r\n            this.callEvent('change', evt)\r\n        },\r\n\r\n        onCheckboxChange(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            const value = evt.detail.value || []\r\n            if (value.indexOf(domNode.value) >= 0) {\r\n                domNode.$$setAttributeWithoutUpdate('checked', true)\r\n\r\n                // 可被用户行为改变的值，需要记录\r\n                domNode._oldValues = domNode._oldValues || {}\r\n                domNode._oldValues.checked = true\r\n            } else {\r\n                domNode.$$setAttributeWithoutUpdate('checked', false)\r\n\r\n                // 可被用户行为改变的值，需要记录\r\n                domNode._oldValues = domNode._oldValues || {}\r\n                domNode._oldValues.checked = false\r\n            }\r\n            this.callEvent('input', evt)\r\n            this.callEvent('change', evt)\r\n        },\r\n    },\r\n}\r\n","/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/picker.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'mode',\r\n        get(domNode) {\r\n            return domNode.getAttribute('mode') || 'selector'\r\n        },\r\n    }, {\r\n        name: 'disabled',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('disabled')\r\n        },\r\n    }, {\r\n        name: 'range',\r\n        get(domNode) {\r\n            let value = domNode.getAttribute('range')\r\n            if (typeof value === 'string') {\r\n                // react 会直接将属性值转成字符串\r\n                try {\r\n                    value = JSON.parse(value)\r\n                } catch (err) {\r\n                    value = value.split(',')\r\n                }\r\n            }\r\n            return value !== undefined ? value : []\r\n        },\r\n    }, {\r\n        name: 'rangeKey',\r\n        get(domNode) {\r\n            return domNode.getAttribute('range-key') || ''\r\n        },\r\n    }, {\r\n        name: 'value',\r\n        canBeUserChanged: true,\r\n        get(domNode) {\r\n            const mode = domNode.getAttribute('mode') || 'selector'\r\n            let value = domNode.getAttribute('value')\r\n            if (mode === 'selector') {\r\n                return +value || 0\r\n            } else if (mode === 'multiSelector') {\r\n                if (typeof value === 'string') value = value.split(',').map(item => parseInt(item, 10)) // react 会直接将属性值转成字符串\r\n                return value || []\r\n            } else if (mode === 'time') {\r\n                return value || ''\r\n            } else if (mode === 'date') {\r\n                return value || '0'\r\n            } else if (mode === 'region') {\r\n                if (typeof value === 'string') value = value.split(',') // react 会直接将属性值转成字符串\r\n                return value || []\r\n            }\r\n\r\n            return value\r\n        },\r\n    }, {\r\n        name: 'start',\r\n        get(domNode) {\r\n            return domNode.getAttribute('start') || ''\r\n        },\r\n    }, {\r\n        name: 'end',\r\n        get(domNode) {\r\n            return domNode.getAttribute('end') || ''\r\n        },\r\n    }, {\r\n        name: 'fields',\r\n        get(domNode) {\r\n            return domNode.getAttribute('fields') || 'day'\r\n        },\r\n    }, {\r\n        name: 'customItem',\r\n        get(domNode) {\r\n            return domNode.getAttribute('custom-item') || ''\r\n        }\r\n    }],\r\n    handles: {\r\n        onPickerChange(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.value = evt.detail.value\r\n\r\n            this.callSingleEvent('change', evt)\r\n        },\r\n\r\n        onPickerColumnChange(evt) {\r\n            this.callSingleEvent('columnchange', evt)\r\n        },\r\n\r\n        onPickerCancel(evt) {\r\n            this.callSingleEvent('cancel', evt)\r\n        },\r\n    },\r\n}\r\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/picker-view.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'value',\n        canBeUserChanged: true,\n        get(domNode) {\n            let value = domNode.getAttribute('value')\n            if (typeof value === 'string') value = value.split(',').map(item => parseInt(item, 10)) // react 会直接将属性值转成字符串\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'indicatorStyle',\n        get(domNode) {\n            return domNode.getAttribute('indicator-style') || ''\n        },\n    }, {\n        name: 'indicatorClass',\n        get(domNode) {\n            return domNode.getAttribute('indicator-class') || ''\n        },\n    }, {\n        name: 'maskStyle',\n        get(domNode) {\n            return domNode.getAttribute('mask-style') || ''\n        },\n    }, {\n        name: 'maskClass',\n        get(domNode) {\n            return domNode.getAttribute('mask-class') || ''\n        },\n    }],\n    handles: {\n        onPickerViewChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.value = evt.detail.value\n\n            this.callSingleEvent('change', evt)\n        },\n\n        onPickerViewPickstart(evt) {\n            this.callSingleEvent('pickstart', evt)\n        },\n\n        onPickerViewPickend(evt) {\n            this.callSingleEvent('pickend', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/slider.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'min',\n        get(domNode) {\n            return +domNode.getAttribute('min') || 0\n        },\n    }, {\n        name: 'max',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('max'))\n            return !isNaN(value) ? value : 100\n        },\n    }, {\n        name: 'step',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('step'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'disabled',\n        get(domNode) {\n            return !!domNode.getAttribute('disabled')\n        },\n    }, {\n        name: 'value',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('value') || 0\n        },\n    }, {\n        name: 'color',\n        get(domNode) {\n            return domNode.getAttribute('color') || '#e9e9e9'\n        },\n    }, {\n        name: 'selectedColor',\n        get(domNode) {\n            return domNode.getAttribute('selected-color') || '#1aad19'\n        },\n    }, {\n        name: 'activeColor',\n        get(domNode) {\n            return domNode.getAttribute('active-color') || '#1aad19'\n        },\n    }, {\n        name: 'backgroundColor',\n        get(domNode) {\n            return domNode.getAttribute('background-color') || '#e9e9e9'\n        },\n    }, {\n        name: 'blockSize',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('block-size'))\n            return !isNaN(value) ? value : 28\n        },\n    }, {\n        name: 'blockColor',\n        get(domNode) {\n            return domNode.getAttribute('block-color') || '#ffffff'\n        },\n    }, {\n        name: 'showValue',\n        get(domNode) {\n            return !!domNode.getAttribute('show-value')\n        },\n    }],\n    handles: {\n        onSliderChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('value', evt.detail.value)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.value = evt.detail.value\n\n            this.callSingleEvent('change', evt)\n        },\n\n        onSliderChanging(evt) {\n            this.callSingleEvent('changing', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/switch.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'checked',\n        canBeUserChanged: true,\n        get(domNode) {\n            return !!domNode.getAttribute('checked')\n        },\n    }, {\n        name: 'disabled',\n        get(domNode) {\n            return !!domNode.getAttribute('disabled')\n        },\n    }, {\n        name: 'type',\n        get(domNode) {\n            return domNode.getAttribute('type') || 'switch'\n        },\n    }, {\n        name: 'color',\n        get(domNode) {\n            return domNode.getAttribute('color') || '#04BE02'\n        },\n    }],\n    handles: {\n        onSwitchChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('checked', evt.detail.value)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.checked = evt.detail.value\n\n            this.callSingleEvent('change', evt)\n        },\n    },\n}\n","/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/textarea.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'value',\r\n        canBeUserChanged: true,\r\n        get(domNode) {\r\n            return domNode.value || ''\r\n        },\r\n    }, {\r\n        name: 'placeholder',\r\n        get(domNode) {\r\n            return domNode.placeholder\r\n        },\r\n    }, {\r\n        name: 'placeholderStyle',\r\n        get(domNode) {\r\n            return domNode.getAttribute('placeholder-style') || ''\r\n        },\r\n    }, {\r\n        name: 'placeholderClass',\r\n        get(domNode) {\r\n            return domNode.getAttribute('placeholder-class') || 'input-placeholder'\r\n        },\r\n    }, {\r\n        name: 'disabled',\r\n        get(domNode) {\r\n            return domNode.disabled\r\n        },\r\n    }, {\r\n        name: 'maxlength',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.maxlength)\r\n            return !isNaN(value) ? value : 140\r\n        }\r\n    }, {\r\n        name: 'autoFocus',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('autofocus')\r\n        },\r\n    }, {\r\n        name: 'focus',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('focus')\r\n        },\r\n    }, {\r\n        name: 'autoHeight',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('auto-height')\r\n        },\r\n    }, {\r\n        name: 'fixed',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('fixed')\r\n        },\r\n    }, {\r\n        name: 'cursorSpacing',\r\n        get(domNode) {\r\n            return +domNode.getAttribute('cursor-spacing') || 0\r\n        },\r\n    }, {\r\n        name: 'cursor',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('cursor'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'showConfirmBar',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('show-confirm-bar')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'selectionStart',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('selection-start'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'selectionEnd',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('selection-end'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'adjustPosition',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('adjust-position')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }],\r\n    handles: {\r\n        onTextareaFocus(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode._textareaOldValue = domNode.value\r\n            domNode.$$setAttributeWithoutUpdate('focus', true)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.focus = true\r\n\r\n            this.callSimpleEvent('focus', evt)\r\n        },\r\n\r\n        onTextareaBlur(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode.$$setAttributeWithoutUpdate('focus', false)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.focus = false\r\n\r\n            if (domNode._textareaOldValue !== undefined && domNode.value !== domNode._textareaOldValue) {\r\n                domNode._textareaOldValue = undefined\r\n                this.callEvent('change', evt)\r\n            }\r\n            this.callSimpleEvent('blur', evt)\r\n        },\r\n\r\n        onTextareaLineChange(evt) {\r\n            this.callSingleEvent('linechange', evt)\r\n        },\r\n\r\n        onTextareaInput(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            const value = '' + evt.detail.value\r\n            domNode.$$setAttributeWithoutUpdate('value', value)\r\n\r\n            // 可被用户行为改变的值，需要记录\r\n            domNode._oldValues = domNode._oldValues || {}\r\n            domNode._oldValues.value = value\r\n\r\n            this.callEvent('input', evt)\r\n        },\r\n\r\n        onTextareaConfirm(evt) {\r\n            this.callSimpleEvent('confirm', evt)\r\n        },\r\n\r\n        onTextareaKeyBoardHeightChange(evt) {\r\n            this.callSingleEvent('keyboardheightchange', evt)\r\n        },\r\n    },\r\n}\r\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'target',\n        get(domNode) {\n            return domNode.getAttribute('target') || 'self'\n        },\n    }, {\n        name: 'url',\n        get(domNode) {\n            return domNode.getAttribute('url') || ''\n        },\n    }, {\n        name: 'openType',\n        get(domNode) {\n            return domNode.getAttribute('open-type') || 'navigate'\n        },\n    }, {\n        name: 'delta',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('delta'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'appId',\n        get(domNode) {\n            return domNode.getAttribute('app-id') || ''\n        },\n    }, {\n        name: 'path',\n        get(domNode) {\n            return domNode.getAttribute('path') || ''\n        },\n    }, {\n        name: 'extraData',\n        get(domNode) {\n            return domNode.getAttribute('extra-data') || {}\n        },\n    }, {\n        name: 'version',\n        get(domNode) {\n            return domNode.getAttribute('version') || 'release'\n        },\n    }, {\n        name: 'hoverClass',\n        get(domNode) {\n            return domNode.getAttribute('hover-class') || 'navigator-hover'\n        },\n    }, {\n        name: 'hoverStopPropagation',\n        get(domNode) {\n            return !!domNode.getAttribute('hover-stop-propagation')\n        },\n    }, {\n        name: 'hoverStartTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-start-time'))\n            return !isNaN(value) ? value : 50\n        },\n    }, {\n        name: 'hoverStayTime',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('hover-stay-time'))\n            return !isNaN(value) ? value : 600\n        },\n    }],\n    handles: {\n        onNavigatorSuccess(evt) {\n            this.callSingleEvent('success', evt)\n        },\n\n        onNavigatorFail(evt) {\n            this.callSingleEvent('fail', evt)\n        },\n\n        onNavigatorComplete(evt) {\n            this.callSingleEvent('complete', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/camera.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'mode',\n        get(domNode) {\n            return domNode.getAttribute('mode') || 'normal'\n        },\n    }, {\n        name: 'devicePosition',\n        get(domNode) {\n            return domNode.getAttribute('device-position') || 'back'\n        },\n    }, {\n        name: 'flash',\n        get(domNode) {\n            return domNode.getAttribute('flash') || 'auto'\n        },\n    }, {\n        name: 'frameSize',\n        get(domNode) {\n            return domNode.getAttribute('frame-size') || 'medium'\n        },\n    }],\n    handles: {\n        onCameraStop(evt) {\n            this.callSingleEvent('stop', evt)\n        },\n\n        onCameraError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        onCameraInitDone(evt) {\n            this.callSingleEvent('initdone', evt)\n        },\n\n        onCameraScanCode(evt) {\n            this.callSingleEvent('scancode', evt)\n        },\n    },\n}\n","const mp = require('miniprogram-render')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\n/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/image.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'renderingMode',\r\n        get(domNode) {\r\n            return domNode.getAttribute('rendering-mode') || ''\r\n        },\r\n    }, {\r\n        name: 'src',\r\n        get(domNode) {\r\n            const window = cache.getWindow(domNode.$$pageId)\r\n            return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\r\n        },\r\n    }, {\r\n        name: 'mode',\r\n        get(domNode) {\r\n            return domNode.getAttribute('mode') || 'scaleToFill'\r\n        },\r\n    }, {\r\n        name: 'lazyLoad',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('lazy-load')\r\n        },\r\n    }, {\r\n        name: 'showMenuByLongpress',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('show-menu-by-longpress')\r\n        },\r\n    }],\r\n    handles: {\r\n        onImageLoad(evt) {\r\n            this.callSingleEvent('load', evt)\r\n        },\r\n\r\n        onImageError(evt) {\r\n            this.callSingleEvent('error', evt)\r\n        },\r\n    },\r\n}\r\n","const mp = require('miniprogram-render')\n\nconst {\n    cache,\n    tool,\n} = mp.$$adapter\n\n/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/live-player.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'src',\n        get(domNode) {\n            const window = cache.getWindow(domNode.$$pageId)\n            return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n        },\n    }, {\n        name: 'mode',\n        get(domNode) {\n            return domNode.getAttribute('mode') || 'live'\n        },\n    }, {\n        name: 'autoplay',\n        get(domNode) {\n            return !!domNode.getAttribute('autoplay')\n        },\n    }, {\n        name: 'muted',\n        get(domNode) {\n            return !!domNode.getAttribute('muted')\n        },\n    }, {\n        name: 'orientation',\n        get(domNode) {\n            return domNode.getAttribute('orientation') || 'vertical'\n        },\n    }, {\n        name: 'objectFit',\n        get(domNode) {\n            return domNode.getAttribute('object-fit') || 'contain'\n        },\n    }, {\n        name: 'backgroundMute',\n        get(domNode) {\n            return !!domNode.getAttribute('background-mute')\n        },\n    }, {\n        name: 'minCache',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('min-cache'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'maxCache',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('max-cache'))\n            return !isNaN(value) ? value : 3\n        },\n    }, {\n        name: 'soundMode',\n        get(domNode) {\n            return domNode.getAttribute('sound-mode') || 'speaker'\n        },\n    }, {\n        name: 'autoPauseIfNavigate',\n        get(domNode) {\n            const value = domNode.getAttribute('auto-pause-if-navigate')\n            return value !== undefined ? !!value : true\n        },\n    }, {\n        name: 'autoPauseIfOpenNative',\n        get(domNode) {\n            const value = domNode.getAttribute('auto-pause-if-open-native')\n            return value !== undefined ? !!value : true\n        },\n    }],\n    handles: {\n        onLivePlayerStateChange(evt) {\n            this.callSingleEvent('statechange', evt)\n        },\n\n        onLivePlayerFullScreenChange(evt) {\n            this.callSingleEvent('fullscreenchange', evt)\n        },\n\n        onLivePlayerNetStatus(evt) {\n            this.callSingleEvent('netstatus', evt)\n        },\n\n    },\n}\n","const mp = require('miniprogram-render')\n\nconst {\n    cache,\n    tool,\n} = mp.$$adapter\n\n/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/live-pusher.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'url',\n        get(domNode) {\n            const window = cache.getWindow(domNode.$$pageId)\n            const url = domNode.getAttribute('url')\n            return url ? tool.completeURL(url, window.location.origin, true) : ''\n        },\n    }, {\n        name: 'mode',\n        get(domNode) {\n            return domNode.getAttribute('mode') || 'RTC'\n        },\n    }, {\n        name: 'autopush',\n        get(domNode) {\n            return !!domNode.getAttribute('autopush')\n        },\n    }, {\n        name: 'muted',\n        get(domNode) {\n            return !!domNode.getAttribute('muted')\n        },\n    }, {\n        name: 'enableCamera',\n        get(domNode) {\n            const value = domNode.getAttribute('enable-camera')\n            return value !== undefined ? !!value : true\n        },\n    }, {\n        name: 'autoFocus',\n        get(domNode) {\n            const value = domNode.getAttribute('auto-focus')\n            return value !== undefined ? !!value : true\n        },\n    }, {\n        name: 'orientation',\n        get(domNode) {\n            return domNode.getAttribute('orientation') || 'vertical'\n        },\n    }, {\n        name: 'beauty',\n        get(domNode) {\n            return +domNode.getAttribute('beauty') || 0\n        },\n    }, {\n        name: 'whiteness',\n        get(domNode) {\n            return +domNode.getAttribute('whiteness') || 0\n        },\n    }, {\n        name: 'aspect',\n        get(domNode) {\n            return domNode.getAttribute('aspect') || '9:16'\n        },\n    }, {\n        name: 'minBitrate',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('min-bitrate'))\n            return !isNaN(value) ? value : 200\n        },\n    }, {\n        name: 'maxBitrate',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('max-bitrate'))\n            return !isNaN(value) ? value : 1000\n        },\n    }, {\n        name: 'waitingImage',\n        get(domNode) {\n            return domNode.getAttribute('waiting-image') || ''\n        },\n    }, {\n        name: 'waitingImageHash',\n        get(domNode) {\n            return domNode.getAttribute('waiting-image-hash') || ''\n        },\n    }, {\n        name: 'zoom',\n        get(domNode) {\n            return !!domNode.getAttribute('zoom')\n        },\n    }, {\n        name: 'devicePosition',\n        get(domNode) {\n            return domNode.getAttribute('device-position') || 'front'\n        },\n    }, {\n        name: 'backgroundMute',\n        get(domNode) {\n            return !!domNode.getAttribute('background-mute')\n        },\n    }, {\n        name: 'mirror',\n        get(domNode) {\n            return !!domNode.getAttribute('mirror')\n        },\n    }],\n    handles: {\n        onLivePusherStateChange(evt) {\n            this.callSingleEvent('statechange', evt)\n        },\n\n        onLivePusherNetStatus(evt) {\n            this.callSingleEvent('netstatus', evt)\n        },\n\n        onLivePusherError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        onLivePusherBgmStart(evt) {\n            this.callSingleEvent('bgmstart', evt)\n        },\n\n        onLivePusherBgmProgress(evt) {\n            this.callSingleEvent('bgmprogress', evt)\n        },\n\n        onLivePusherBgmComplete(evt) {\n            this.callSingleEvent('bgmcomplete', evt)\n        },\n\n    },\n}\n","const mp = require('miniprogram-render')\r\n\r\nconst {\r\n    cache,\r\n    tool,\r\n} = mp.$$adapter\r\n\r\n/**\r\n * https://developers.weixin.qq.com/miniprogram/dev/component/video.html\r\n */\r\nmodule.exports = {\r\n    properties: [{\r\n        name: 'src',\r\n        get(domNode) {\r\n            const window = cache.getWindow(domNode.$$pageId)\r\n            return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\r\n        },\r\n    }, {\r\n        name: 'duration',\r\n        get(domNode) {\r\n            return +domNode.getAttribute('duration') || 0\r\n        },\r\n    }, {\r\n        name: 'controls',\r\n        get(domNode) {\r\n            return domNode.controls\r\n        },\r\n    }, {\r\n        name: 'danmuList',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('danmu-list')\r\n            return value !== undefined ? value : []\r\n        },\r\n    }, {\r\n        name: 'danmuBtn',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('danmu-btn')\r\n        },\r\n    }, {\r\n        name: 'enableDanmu',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('enable-danmu')\r\n        },\r\n    }, {\r\n        name: 'autoplay',\r\n        get(domNode) {\r\n            return domNode.autoplay\r\n        },\r\n    }, {\r\n        name: 'loop',\r\n        get(domNode) {\r\n            return domNode.loop\r\n        },\r\n    }, {\r\n        name: 'muted',\r\n        get(domNode) {\r\n            return domNode.muted\r\n        },\r\n    }, {\r\n        name: 'initialTime',\r\n        get(domNode) {\r\n            return +domNode.getAttribute('initial-time') || 0\r\n        },\r\n    }, {\r\n        name: 'direction',\r\n        get(domNode) {\r\n            const value = parseFloat(domNode.getAttribute('direction'))\r\n            return !isNaN(value) ? value : -1\r\n        },\r\n    }, {\r\n        name: 'showProgress',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('show-progress')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'showFullscreenBtn',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('show-fullscreen-btn')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'showPlayBtn',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('show-play-btn')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'showCenterPlayBtn',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('show-center-play-btn')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'enableProgressGesture',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('enable-progress-gesture')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'objectFit',\r\n        get(domNode) {\r\n            return domNode.getAttribute('object-fit') || 'contain'\r\n        },\r\n    }, {\r\n        name: 'poster',\r\n        get(domNode) {\r\n            const window = cache.getWindow(domNode.$$pageId)\r\n            return domNode.poster ? tool.completeURL(domNode.poster, window.location.origin, true) : ''\r\n        },\r\n    }, {\r\n        name: 'showMuteBtn',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('show-mute-btn')\r\n        },\r\n    }, {\r\n        name: 'title',\r\n        get(domNode) {\r\n            return domNode.getAttribute('title') || ''\r\n        },\r\n    }, {\r\n        name: 'playBtnPosition',\r\n        get(domNode) {\r\n            return domNode.getAttribute('play-btn-position') || 'bottom'\r\n        },\r\n    }, {\r\n        name: 'enablePlayGesture',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('enable-play-gesture')\r\n        },\r\n    }, {\r\n        name: 'autoPauseIfNavigate',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('auto-pause-if-navigate')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'autoPauseIfOpenNative',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('auto-pause-if-open-native')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }, {\r\n        name: 'vslideGesture',\r\n        get(domNode) {\r\n            return !!domNode.getAttribute('vslide-gesture')\r\n        },\r\n    }, {\r\n        name: 'vslideGestureInFullscreen',\r\n        get(domNode) {\r\n            const value = domNode.getAttribute('vslide-gesture-in-fullscreen')\r\n            return value !== undefined ? !!value : true\r\n        },\r\n    }],\r\n    handles: {\r\n        onVideoPlay(evt) {\r\n            this.callSingleEvent('play', evt)\r\n        },\r\n\r\n        onVideoPause(evt) {\r\n            this.callSingleEvent('pause', evt)\r\n        },\r\n\r\n        onVideoEnded(evt) {\r\n            this.callSingleEvent('ended', evt)\r\n        },\r\n\r\n        onVideoTimeUpdate(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode.$$setAttributeWithoutUpdate('currentTime', evt.detail.currentTime)\r\n            this.callSingleEvent('timeupdate', evt)\r\n        },\r\n\r\n        onVideoFullScreenChange(evt) {\r\n            this.callSingleEvent('fullscreenchange', evt)\r\n        },\r\n\r\n        onVideoWaiting(evt) {\r\n            this.callSingleEvent('waiting', evt)\r\n        },\r\n\r\n        onVideoError(evt) {\r\n            this.callSingleEvent('error', evt)\r\n        },\r\n\r\n        onVideoProgress(evt) {\r\n            const domNode = this.getDomNodeFromEvt(evt)\r\n            if (!domNode) return\r\n\r\n            domNode.$$setAttributeWithoutUpdate('buffered', evt.detail.buffered)\r\n            this.callSingleEvent('progress', evt)\r\n        },\r\n    },\r\n}\r\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/map.html\n */\n\n/**\n * 兼容开发者工具 bug\n */\nfunction dealWithDevToolsEvt(evt) {\n    if (!evt.detail) evt.detail = {}\n    if (evt.markerId !== undefined) evt.detail.markerId = evt.markerId\n    if (evt.controlId !== undefined) evt.detail.controlId = evt.controlId\n    if (evt.name !== undefined) evt.detail.name = evt.name\n    if (evt.longitude !== undefined) evt.detail.longitude = evt.longitude\n    if (evt.latitude !== undefined) evt.detail.latitude = evt.latitude\n}\n\n/**\n * 兼容 react\n */\nfunction dealWithReactAttr(value) {\n    if (typeof value === 'string') {\n        // react 会直接将属性值转成字符串\n        try {\n            value = JSON.parse(value)\n        } catch (err) {\n            value = undefined\n        }\n    }\n\n    return value\n}\n\nmodule.exports = {\n    properties: [{\n        name: 'longitude',\n        // canBeUserChanged: true,\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('longitude'))\n            return !isNaN(value) ? value : 39.92\n        },\n    }, {\n        name: 'latitude',\n        // canBeUserChanged: true,\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('latitude'))\n            return !isNaN(value) ? value : 116.46\n        },\n    }, {\n        name: 'scale',\n        // canBeUserChanged: true,\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('scale'))\n            return !isNaN(value) ? value : 16\n        },\n    }, {\n        name: 'markers',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('markers'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'polyline',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('polyline'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'circles',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('circles'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'controls',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('controls'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'includePoints',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('include-points'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'showLocation',\n        get(domNode) {\n            return !!domNode.getAttribute('show-location')\n        },\n    }, {\n        name: 'polygons',\n        get(domNode) {\n            const value = dealWithReactAttr(domNode.getAttribute('polygons'))\n            return value !== undefined ? value : []\n        },\n    }, {\n        name: 'subkey',\n        get(domNode) {\n            return domNode.getAttribute('subkey') || ''\n        },\n    }, {\n        name: 'layerStyle',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('layer-style'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'rotate',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('rotate') || 0\n        },\n    }, {\n        name: 'skew',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('skew') || 0\n        },\n    }, {\n        name: 'enable3D',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-3D')\n        },\n    }, {\n        name: 'showCompass',\n        get(domNode) {\n            return !!domNode.getAttribute('show-compass')\n        },\n    }, {\n        name: 'enableOverlooking',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-overlooking')\n        },\n    }, {\n        name: 'enableZoom',\n        get(domNode) {\n            const value = domNode.getAttribute('enable-zoom')\n            return value !== undefined ? !!value : true\n        },\n    }, {\n        name: 'enableScroll',\n        get(domNode) {\n            const value = domNode.getAttribute('enable-scroll')\n            return value !== undefined ? !!value : true\n        },\n    }, {\n        name: 'enableRotate',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-rotate')\n        },\n    }, {\n        name: 'enableSatellite',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-satellite')\n        },\n    }, {\n        name: 'enableTraffic',\n        get(domNode) {\n            return !!domNode.getAttribute('enable-traffic')\n        },\n    }],\n    handles: {\n        onMapTap(evt) {\n            this.callSingleEvent('tap', evt)\n        },\n\n        onMapMarkerTap(evt) {\n            dealWithDevToolsEvt(evt)\n            this.callSingleEvent('markertap', evt)\n        },\n\n        onMapLabelTap(evt) {\n            dealWithDevToolsEvt(evt)\n            this.callSingleEvent('labeltap', evt)\n        },\n\n        onMapControlTap(evt) {\n            dealWithDevToolsEvt(evt)\n            this.callSingleEvent('controltap', evt)\n        },\n\n        onMapCalloutTap(evt) {\n            dealWithDevToolsEvt(evt)\n            this.callSingleEvent('callouttap', evt)\n        },\n\n        onMapUpdated(evt) {\n            this.callSingleEvent('updated', evt)\n        },\n\n        onMapRegionChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            if (!evt.detail.causedBy) evt.detail.causedBy = evt.causedBy\n            if (evt.type === 'end' || evt.detail.type === 'end') {\n                // 可被用户行为改变的值，需要记录\n                domNode._oldValues = domNode._oldValues || {}\n                // 以下三项官方未支持\n                // domNode._oldValues.longitude = evt.detail.longitude\n                // domNode._oldValues.latitude = evt.detail.latitude\n                // domNode._oldValues.scale = evt.detail.scale\n                domNode._oldValues.rotate = evt.detail.rotate\n                domNode._oldValues.skew = evt.detail.skew\n            }\n\n            this.callSingleEvent('regionchange', evt)\n        },\n\n        onMapPoiTap(evt) {\n            dealWithDevToolsEvt(evt)\n            this.callSingleEvent('poitap', evt)\n        },\n\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html\n */\n\n/**\n * 兼容 canvas 相关 touch 事件，基础库没有提供 currentTarget 的问题\n */\nfunction dealWithEvt(evt) {\n    if (!evt.currentTarget || !evt.currentTarget.dataset.privateNodeId) {\n        // 取 target\n        evt.currentTarget = evt.currentTarget || {dataset: {}}\n        evt.currentTarget.dataset.privateNodeId = evt.target.dataset.privateNodeId\n    }\n}\n\nmodule.exports = {\n    properties: [{\n        name: 'type',\n        get(domNode) {\n            return domNode.getAttribute('type') || ''\n        },\n    }, {\n        name: 'canvasId',\n        get(domNode) {\n            return domNode.getAttribute('canvas-id') || ''\n        },\n    }, {\n        name: 'disableScroll',\n        get(domNode) {\n            return !!domNode.getAttribute('disable-scroll')\n        },\n    }, {\n        // kbone 自定义的特殊属性，用于兼容 iOS 端绑定了 canvas touch 事件后，触发不了页面滚动的 bug\n        name: 'disableEvent',\n        get(domNode) {\n            return !!domNode.getAttribute('disable-event')\n        },\n    }],\n    handles: {\n        onCanvasTouchStart(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('canvastouchstart', evt)\n            this.onTouchStart(evt)\n        },\n\n        onCanvasTouchMove(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('canvastouchmove', evt)\n            this.onTouchMove(evt)\n        },\n\n        onCanvasTouchEnd(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('canvastouchend', evt)\n            this.onTouchEnd(evt)\n        },\n\n        onCanvasTouchCancel(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('canvastouchcancel', evt)\n            this.onTouchCancel(evt)\n        },\n\n        onCanvasLongTap(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('longtap', evt)\n        },\n\n        onCanvasError(evt) {\n            dealWithEvt(evt)\n            this.callSingleEvent('error', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/ad.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'unitId',\n        get(domNode) {\n            return domNode.getAttribute('unit-id') || ''\n        },\n    }, {\n        name: 'adIntervals',\n        get(domNode) {\n            return +domNode.getAttribute('ad-intervals') || 0\n        },\n    }],\n    handles: {\n        onAdLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onAdError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n\n        onAdClose(evt) {\n            this.callSingleEvent('close', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/official-account.html\n */\nmodule.exports = {\n    properties: [],\n    handles: {\n        onOfficialAccountLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onOfficialAccountError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/open-data.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'type',\n        get(domNode) {\n            return domNode.getAttribute('type') || ''\n        },\n    }, {\n        name: 'openGid',\n        get(domNode) {\n            return domNode.getAttribute('open-gid') || ''\n        },\n    }, {\n        name: 'lang',\n        get(domNode) {\n            return domNode.getAttribute('lang') || 'en'\n        },\n    }],\n    handles: {},\n}\n","const mp = require('miniprogram-render')\n\nconst {\n    cache,\n    tool,\n} = mp.$$adapter\n\n/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'src',\n        get(domNode) {\n            const window = cache.getWindow(domNode.$$pageId)\n            return domNode.src ? tool.completeURL(domNode.src, window.location.origin, true) : ''\n        },\n    }],\n    handles: {\n        onWebviewMessage(evt) {\n            this.callSingleEvent('message', evt)\n        },\n\n        onWebviewLoad(evt) {\n            this.callSingleEvent('load', evt)\n        },\n\n        onWebviewError(evt) {\n            this.callSingleEvent('error', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/movable-view.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'direction',\n        get(domNode) {\n            return domNode.getAttribute('direction') || 'none'\n        },\n    }, {\n        name: 'inertia',\n        get(domNode) {\n            return !!domNode.getAttribute('inertia')\n        },\n    }, {\n        name: 'outOfBounds',\n        get(domNode) {\n            return !!domNode.getAttribute('out-of-bounds')\n        },\n    }, {\n        name: 'x',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('x') || 0\n        },\n    }, {\n        name: 'y',\n        canBeUserChanged: true,\n        get(domNode) {\n            return +domNode.getAttribute('y') || 0\n        },\n    }, {\n        name: 'damping',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('damping'))\n            return !isNaN(value) ? value : 20\n        },\n    }, {\n        name: 'friction',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('friction'))\n            return !isNaN(value) ? value : 2\n        },\n    }, {\n        name: 'disabled',\n        get(domNode) {\n            return !!domNode.getAttribute('disabled')\n        },\n    }, {\n        name: 'scale',\n        canBeUserChanged: true,\n        get(domNode) {\n            return !!domNode.getAttribute('scale')\n        },\n    }, {\n        name: 'scaleMin',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('scale-min'))\n            return !isNaN(value) ? value : 0.5\n        },\n    }, {\n        name: 'scaleMax',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('scale-max'))\n            return !isNaN(value) ? value : 10\n        },\n    }, {\n        name: 'scaleValue',\n        get(domNode) {\n            const value = parseFloat(domNode.getAttribute('scale-value'))\n            return !isNaN(value) ? value : 1\n        },\n    }, {\n        name: 'animation',\n        get(domNode) {\n            const value = domNode.getAttribute('animation')\n            return value !== undefined ? !!value : true\n        },\n    }],\n    handles: {\n        onMovableViewChange(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n            domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.x = evt.detail.x\n            domNode._oldValues.y = evt.detail.y\n\n            this.callSingleEvent('change', evt)\n        },\n\n        onMovableViewScale(evt) {\n            const domNode = this.getDomNodeFromEvt(evt)\n            if (!domNode) return\n\n            domNode.$$setAttributeWithoutUpdate('x', evt.detail.x)\n            domNode.$$setAttributeWithoutUpdate('y', evt.detail.y)\n            domNode.$$setAttributeWithoutUpdate('scale-value', evt.detail.scale)\n\n            // 可被用户行为改变的值，需要记录\n            domNode._oldValues = domNode._oldValues || {}\n            domNode._oldValues.x = evt.detail.x\n            domNode._oldValues.y = evt.detail.y\n            domNode._oldValues.scaleValue = evt.detail.scale\n\n            this.callSingleEvent('scale', evt)\n        },\n\n        onMovableViewHtouchmove(evt) {\n            this.callSingleEvent('htouchmove', evt)\n        },\n\n        onMovableViewVtouchmove(evt) {\n            this.callSingleEvent('vtouchmove', evt)\n        },\n    },\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/swiper-item.html\n */\nmodule.exports = {\n    properties: [{\n        name: 'itemId',\n        get(domNode) {\n            return domNode.getAttribute('item-id') || ''\n        },\n    }],\n    handles: {},\n}\n","/**\n * https://developers.weixin.qq.com/miniprogram/dev/component/picker-view-column.html\n */\nmodule.exports = {\n    properties: [],\n    handles: {},\n}\n","const _ = _require('./tool')\r\nconst component = _require('./component')\r\n\r\nconst {\r\n    NOT_SUPPORT,\r\n    USE_TEMPLATE,\r\n} = _\r\nconst {\r\n    wxCompNameMap,\r\n    handles,\r\n} = component\r\n\r\nmodule.exports = {\r\n    /**\r\n     * 初始化\r\n     */\r\n    init(data) {\r\n        const domNode = this.domNode\r\n        const tagName = domNode.tagName\r\n\r\n        // 使用 template 渲染\r\n        if (USE_TEMPLATE.indexOf(tagName) !== -1 || USE_TEMPLATE.indexOf(domNode.behavior) !== -1) return\r\n\r\n        if (tagName === 'WX-COMPONENT') {\r\n            // 内置组件\r\n            data.wxCompName = domNode.behavior\r\n            const wxCompName = wxCompNameMap[data.wxCompName]\r\n            if (wxCompName) _.checkComponentAttr(wxCompName, domNode, data)\r\n            else console.warn(`value \"${data.wxCompName}\" is not supported for wx-component's behavior`)\r\n        } else if (tagName === 'WX-CUSTOM-COMPONENT') {\r\n            // 自定义组件\r\n            data.wxCustomCompName = domNode.behavior\r\n            data.nodeId = this.nodeId\r\n            data.pageId = this.pageId\r\n        } else if (NOT_SUPPORT.indexOf(tagName) >= 0) {\r\n            // 不支持标签\r\n            data.wxCompName = 'not-support'\r\n            data.content = domNode.textContent\r\n        } else {\r\n            // 可替换 html 标签\r\n            const wxCompName = wxCompNameMap[tagName]\r\n            if (wxCompName) data.wxCompName = wxCompName\r\n        }\r\n    },\r\n\r\n    ...handles,\r\n}\r\n"]}